export class ConfigUtil {
    static config;
    static getConfig() {
        if (this.config) {
            return this.config;
        }
        let url = 'assets/mrd-core-ui.config.js';
        let config = {};
        let xhr = new XMLHttpRequest();
        xhr.open('GET', url, false);
        xhr.onreadystatechange = () => {
            if (xhr.readyState === 4 && xhr.status === 200) {
                config = this.parseJsObject(xhr.responseText.substring(xhr.responseText.indexOf('module.exports'))
                    .replace('module.exports =', '')
                    .replace('module.exports=', '')
                    .trim());
            }
        };
        xhr.send();
        this.config = config;
        return config;
    }
    static parseJsObject(data) {
        const func = new Function('return ' + data + ';');
        return func();
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLnV0aWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9tcmQtY29yZS11aS9zcmMvbGliL2NvbW1vbi91dGlsL2NvbmZpZy51dGlsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE1BQU0sT0FBTyxVQUFVO0lBRWIsTUFBTSxDQUFDLE1BQU0sQ0FBWTtJQUVqQyxNQUFNLENBQUMsU0FBUztRQUNkLElBQUksSUFBSSxDQUFDLE1BQU0sRUFBRTtZQUNmLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQztTQUNwQjtRQUNELElBQUksR0FBRyxHQUFHLDhCQUE4QixDQUFDO1FBQ3pDLElBQUksTUFBTSxHQUFjLEVBQWUsQ0FBQztRQUN4QyxJQUFJLEdBQUcsR0FBRyxJQUFJLGNBQWMsRUFBRSxDQUFDO1FBQy9CLEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUM1QixHQUFHLENBQUMsa0JBQWtCLEdBQUcsR0FBRyxFQUFFO1lBQzVCLElBQUksR0FBRyxDQUFDLFVBQVUsS0FBSyxDQUFDLElBQUksR0FBRyxDQUFDLE1BQU0sS0FBSyxHQUFHLEVBQUU7Z0JBQzlDLE1BQU0sR0FBRyxJQUFJLENBQUMsYUFBYSxDQUN6QixHQUFHLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO3FCQUNyRSxPQUFPLENBQUMsa0JBQWtCLEVBQUUsRUFBRSxDQUFDO3FCQUMvQixPQUFPLENBQUMsaUJBQWlCLEVBQUUsRUFBRSxDQUFDO3FCQUM5QixJQUFJLEVBQUUsQ0FDUixDQUFDO2FBQ0g7UUFDSCxDQUFDLENBQUM7UUFDRixHQUFHLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDWCxJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztRQUNyQixPQUFPLE1BQU0sQ0FBQztJQUNoQixDQUFDO0lBRU8sTUFBTSxDQUFDLGFBQWEsQ0FBQyxJQUFZO1FBQ3ZDLE1BQU0sSUFBSSxHQUFHLElBQUksUUFBUSxDQUFDLFNBQVMsR0FBRyxJQUFJLEdBQUcsR0FBRyxDQUFDLENBQUM7UUFDbEQsT0FBTyxJQUFJLEVBQUUsQ0FBQztJQUNoQixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNcmRDb25maWcgfSBmcm9tIFwiLi4vbW9kZWwvY29uZmlnLm1vZGVsXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgQ29uZmlnVXRpbCB7XHJcblxyXG4gIHByaXZhdGUgc3RhdGljIGNvbmZpZzogTXJkQ29uZmlnO1xyXG5cclxuICBzdGF0aWMgZ2V0Q29uZmlnKCkge1xyXG4gICAgaWYgKHRoaXMuY29uZmlnKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLmNvbmZpZztcclxuICAgIH1cclxuICAgIGxldCB1cmwgPSAnYXNzZXRzL21yZC1jb3JlLXVpLmNvbmZpZy5qcyc7XHJcbiAgICBsZXQgY29uZmlnOiBNcmRDb25maWcgPSB7fSBhcyBNcmRDb25maWc7XHJcbiAgICBsZXQgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XHJcbiAgICB4aHIub3BlbignR0VUJywgdXJsLCBmYWxzZSk7XHJcbiAgICB4aHIub25yZWFkeXN0YXRlY2hhbmdlID0gKCkgPT4ge1xyXG4gICAgICBpZiAoeGhyLnJlYWR5U3RhdGUgPT09IDQgJiYgeGhyLnN0YXR1cyA9PT0gMjAwKSB7XHJcbiAgICAgICAgY29uZmlnID0gdGhpcy5wYXJzZUpzT2JqZWN0KFxyXG4gICAgICAgICAgeGhyLnJlc3BvbnNlVGV4dC5zdWJzdHJpbmcoeGhyLnJlc3BvbnNlVGV4dC5pbmRleE9mKCdtb2R1bGUuZXhwb3J0cycpKVxyXG4gICAgICAgICAgLnJlcGxhY2UoJ21vZHVsZS5leHBvcnRzID0nLCAnJylcclxuICAgICAgICAgIC5yZXBsYWNlKCdtb2R1bGUuZXhwb3J0cz0nLCAnJylcclxuICAgICAgICAgIC50cmltKClcclxuICAgICAgICApO1xyXG4gICAgICB9XHJcbiAgICB9O1xyXG4gICAgeGhyLnNlbmQoKTtcclxuICAgIHRoaXMuY29uZmlnID0gY29uZmlnO1xyXG4gICAgcmV0dXJuIGNvbmZpZztcclxuICB9XHJcblxyXG4gIHByaXZhdGUgc3RhdGljIHBhcnNlSnNPYmplY3QoZGF0YTogc3RyaW5nKTogYW55IHtcclxuICAgIGNvbnN0IGZ1bmMgPSBuZXcgRnVuY3Rpb24oJ3JldHVybiAnICsgZGF0YSArICc7Jyk7XHJcbiAgICByZXR1cm4gZnVuYygpO1xyXG4gIH1cclxufVxyXG4iXX0=