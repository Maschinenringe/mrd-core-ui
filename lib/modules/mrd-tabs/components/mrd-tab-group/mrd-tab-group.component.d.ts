import { BaseObject, ObservableValue } from 'mrd-core';
import { AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, QueryList } from '@angular/core';
import { MrdTabComponent } from '../mrd-tab/mrd-tab.component';
import { ActivatedRoute, Router } from '@angular/router';
import { MrdTabBodyComponent } from '../mrd-tab-body/mrd-tab-body.component';
import * as i0 from "@angular/core";
export declare class MrdTabGroupComponent extends BaseObject implements AfterViewInit {
    private cdr;
    private router;
    private route;
    tabs: QueryList<MrdTabComponent>;
    tabBodys: QueryList<MrdTabBodyComponent>;
    tabHeader: QueryList<ElementRef>;
    rounded: boolean;
    labelsFit: boolean;
    noHeader: boolean;
    queryParameterActive: string;
    set headerHeight(value: number);
    get headerHeight(): number;
    private _headerHeight;
    set selectedIndex(value: number);
    get selectedIndex(): number;
    private _selectedIndex;
    changeTab: ObservableValue<number>;
    selectedTabChanged: EventEmitter<MrdTabComponent>;
    selectedTabIndexChanged: EventEmitter<number>;
    tabUnderlineLeft: number;
    tabUnderlineWidth: number;
    private activeIndex;
    private activeTab;
    private activeTabBody;
    constructor(cdr: ChangeDetectorRef, router: Router, route: ActivatedRoute);
    ngAfterViewInit(): void;
    activateTab(index: number): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<MrdTabGroupComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<MrdTabGroupComponent, "mrd-tab-group", never, { "rounded": { "alias": "rounded"; "required": false; }; "labelsFit": { "alias": "labelsFit"; "required": false; }; "noHeader": { "alias": "noHeader"; "required": false; }; "queryParameterActive": { "alias": "queryParameterActive"; "required": false; }; "headerHeight": { "alias": "headerHeight"; "required": false; }; "selectedIndex": { "alias": "selectedIndex"; "required": false; }; "changeTab": { "alias": "changeTab"; "required": false; }; }, { "selectedTabChanged": "selectedTabChanged"; "selectedTabIndexChanged": "selectedTabIndexChanged"; }, ["tabs"], never, false, never>;
    static ngAcceptInputType_rounded: unknown;
    static ngAcceptInputType_labelsFit: unknown;
    static ngAcceptInputType_noHeader: unknown;
}
