{"version":3,"file":"mrd-core-ui.mjs","sources":["../../../projects/mrd-core-ui/src/lib/common/util/config.util.ts","../../../projects/mrd-core-ui/src/lib/common/util/color.util.ts","../../../projects/mrd-core-ui/src/lib/common/transforms/color-transform.ts","../../../projects/mrd-core-ui/src/lib/common/transforms/size-transform.ts","../../../projects/mrd-core-ui/src/lib/common/transforms/time-transform.ts","../../../projects/mrd-core-ui/src/lib/common/service/mrd-icon-registry.service.ts","../../../projects/mrd-core-ui/src/lib/common/directive/hide-if-truncated/hide-if-truncated.directive.ts","../../../projects/mrd-core-ui/src/lib/common/directive/mrd-directive.module.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-progress-bar/components/mrd-progress-bar/mrd-progress-bar.component.html","../../../projects/mrd-core-ui/src/lib/modules/mrd-progress-bar/components/mrd-progress-bar/mrd-progress-bar.component.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-progress-spinner/components/mrd-progress-spinner/mrd-progress-spinner.component.html","../../../projects/mrd-core-ui/src/lib/modules/mrd-progress-spinner/components/mrd-progress-spinner/mrd-progress-spinner.component.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-tooltip/components/mrd-tooltip/mrd-tooltip.component.html","../../../projects/mrd-core-ui/src/lib/modules/mrd-tooltip/components/mrd-tooltip/mrd-tooltip.component.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-tooltip/common/directive/tool-tip-renderer/tool-tip-renderer.directive.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-button/components/mrd-button/mrd-button.component.html","../../../projects/mrd-core-ui/src/lib/modules/mrd-button/components/mrd-button/mrd-button.component.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-progress-bar/mrd-progress-bar.module.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-progress-spinner/mrd-progress-spinner.module.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-tooltip/mrd-tooltip.module.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-button/mrd-button.module.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-icon/components/mrd-icon.component.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-icon/components/mrd-icon.component.html","../../../projects/mrd-core-ui/src/lib/modules/mrd-icon/mrd-icon.module.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-tabs/components/mrd-tab/mrd-tab.component.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-tabs/components/mrd-tab-body/mrd-tab-body.component.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-tabs/components/mrd-tab-body/mrd-tab-body.component.html","../../../projects/mrd-core-ui/src/lib/modules/mrd-tabs/components/mrd-tab-group/mrd-tab-group.component.html","../../../projects/mrd-core-ui/src/lib/modules/mrd-tabs/components/mrd-tab-group/mrd-tab-group.component.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-tabs/mrd-tabs.module.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-geo-icon/components/mrd-geo-icon/mrd-geo-icon.component.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-geo-icon/components/mrd-geo-icon/mrd-geo-icon.component.html","../../../projects/mrd-core-ui/src/lib/modules/mrd-geo-icon/mrd-geo-icon.module.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-fly-out/common/service/fly-out.service.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-fly-out/components/mrd-fly-out/mrd-fly-out.component.html","../../../projects/mrd-core-ui/src/lib/modules/mrd-fly-out/components/mrd-fly-out/mrd-fly-out.component.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-fly-out/common/directive/mrd-fly-out-close.directive.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-fly-out/mrd-fly-out.module.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-button-toggle/components/mrd-button-toggle-group/mrd-button-toggle-group.component.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-button-toggle/components/mrd-button-toggle-group/mrd-button-toggle-group.component.html","../../../projects/mrd-core-ui/src/lib/modules/mrd-button-toggle/mrd-button-toggle.module.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-checkbox/components/mrd-checkbox/mrd-checkbox.component.html","../../../projects/mrd-core-ui/src/lib/modules/mrd-checkbox/components/mrd-checkbox/mrd-checkbox.component.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-checkbox/mrd-checkbox.module.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-chip/components/mrd-chip/mrd-chip.component.html","../../../projects/mrd-core-ui/src/lib/modules/mrd-chip/components/mrd-chip/mrd-chip.component.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-chip/mrd-chip.module.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-form-field/components/mrd-input/mrd-input.component.html","../../../projects/mrd-core-ui/src/lib/modules/mrd-form-field/components/mrd-input/mrd-input.component.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-form-field/components/mrd-label/mrd-label.component.html","../../../projects/mrd-core-ui/src/lib/modules/mrd-form-field/components/mrd-label/mrd-label.component.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-form-field/components/mrd-error/mrd-error.component.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-form-field/components/mrd-error/mrd-error.component.html","../../../projects/mrd-core-ui/src/lib/modules/mrd-form-field/components/mrd-select-option/mrd-select-option.component.html","../../../projects/mrd-core-ui/src/lib/modules/mrd-form-field/components/mrd-select-option/mrd-select-option.component.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-form-field/components/mrd-select-custom-trigger/mrd-select-custom-trigger.component.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-form-field/components/mrd-select-custom-trigger/mrd-select-custom-trigger.component.html","../../../projects/mrd-core-ui/src/lib/modules/mrd-form-field/components/mrd-select/mrd-select.component.html","../../../projects/mrd-core-ui/src/lib/modules/mrd-form-field/components/mrd-select/mrd-select.component.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-form-field/components/mrd-form-field/mrd-form-field.component.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-form-field/components/mrd-form-field/mrd-form-field.component.html","../../../projects/mrd-core-ui/src/lib/modules/mrd-form-field/components/mrd-hint/mrd-hint.component.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-form-field/components/mrd-hint/mrd-hint.component.html","../../../projects/mrd-core-ui/src/lib/modules/mrd-form-field/components/mrd-prefix/mrd-prefix.component.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-form-field/components/mrd-prefix/mrd-prefix.component.html","../../../projects/mrd-core-ui/src/lib/modules/mrd-form-field/components/mrd-suffix/mrd-suffix.component.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-form-field/components/mrd-suffix/mrd-suffix.component.html","../../../projects/mrd-core-ui/src/lib/modules/mrd-form-field/mrd-form-field.module.ts","../../../projects/mrd-core-ui/src/mrd-core-ui.ts"],"sourcesContent":["import { MrdConfigModel } from \"../model/config.model\";\r\nimport * as _ from 'underscore';\r\n\r\nexport class ConfigUtil {\r\n\r\n  private static config: MrdConfigModel;\r\n\r\n  private static customConfig: MrdConfigModel;\r\n\r\n  public static setConfig(config: MrdConfigModel) {\r\n    this.config = undefined;\r\n    this.customConfig = config;\r\n    this.getConfig();\r\n  }\r\n\r\n  public static getConfig() {\r\n    if (this.config) {\r\n      return this.config;\r\n    }\r\n\r\n    let defaultConfig = this.baseConfig;\r\n\r\n    if (this.customConfig) {\r\n      this.extendObject(defaultConfig, this.customConfig);\r\n    }\r\n\r\n    this.config = defaultConfig;\r\n    return defaultConfig;\r\n  }\r\n\r\n  private static extendObject(obj: any, extObj: any): any {\r\n    for (const [key, value] of Object.entries(extObj)) {\r\n      if (_.isObject(value) && !_.isArray(value)) {\r\n        obj[key] = this.extendObject(obj[key], value);\r\n      } else {\r\n        obj[key] = value;\r\n      }\r\n    };\r\n    return obj;\r\n  }\r\n\r\n  public static getMostSpecificValue(entry: string[]): any {\r\n    let tree: string[] = entry.slice();\r\n    while(tree.length > 0 && _.isObject(this.config[tree[0]])) {\r\n      tree = tree.slice(1);\r\n    }\r\n  }\r\n\r\n  private static get baseConfig(): MrdConfigModel {\r\n    return {\r\n      baseFont: {\r\n        // size: \"16px\",\r\n        family: \"URW Din,Lato,sans-serif\"\r\n      },\r\n      baseColors: {\r\n        primary: \"#68b022\",\r\n        accent: \"#293D4F\",\r\n        warn: \"#b00122\",\r\n        disabled: \"#afa6a6\"\r\n      },\r\n      formField: {\r\n        borderRadius: \"7px\",\r\n        borderRadiusRounded: \"70px\",\r\n\r\n        fill: {\r\n          backgroundColor: \"#D8DFE880\"\r\n        }\r\n      },\r\n      button: {\r\n        backgroundColor: \"transparent\",\r\n        textLightColor: \"#ffffff\",\r\n        textDarkColor: \"#000000\",\r\n        hoverColor: \"#d3d3d361\",\r\n        activeColor: \"#d3d3d3\",\r\n        disabled: {\r\n          text: \"#a6a6a6\",\r\n          background: \"transparent\"\r\n        },\r\n\r\n        border: \"0 unset unset\",\r\n        borderRadius: \"4px\",\r\n\r\n        minHeight: \"36px\",\r\n        fontSize: \"0.9em\",\r\n        iconSize: \"1em\",\r\n\r\n        outline: {\r\n          border: \"1px solid #d3d3d3\"\r\n        },\r\n\r\n        flat: {\r\n          backgroundColor: \"#ffffff\",\r\n          disabled: {\r\n            text: \"#a6a6a6\",\r\n            background: \"#d3d3d3\"\r\n          }\r\n        },\r\n        raised: {\r\n          backgroundColor: \"#ffffff\",\r\n          disabled: {\r\n            text: \"#a6a6a6\",\r\n            background: \"#d3d3d3\"\r\n          }\r\n        },\r\n        icon: {\r\n          borderRadius: \"50%\",\r\n          fontSize: \"1em\",\r\n          diameter: \"3em\"\r\n        },\r\n\r\n        fab: {\r\n          backgroundColor: \"#ffffff\",\r\n          disabled: {\r\n            text: \"#a6a6a6\",\r\n            background: \"#d3d3d3\"\r\n          },\r\n          borderRadius: \"50%\",\r\n          fontSize: \"1em\",\r\n          diameter: \"4em\"\r\n        },\r\n\r\n        miniFab: {\r\n          backgroundColor: \"#ffffff\",\r\n          disabled: {\r\n            text: \"#a6a6a6\",\r\n            background: \"#d3d3d3\"\r\n          },\r\n          borderRadius: \"50%\",\r\n          fontSize: \"1em\",\r\n          diameter: \"3em\"\r\n        },\r\n\r\n        toggle: {\r\n          backgroundColor: \"#ffffff\",\r\n          unselectedBgColor: \"#c8cac6\",\r\n        }\r\n      },\r\n      geoIcon: {\r\n        width: \"40px\",\r\n        height: \"40px\",\r\n        margin: \"5px\",\r\n        transitionTime: \"1s\",\r\n        mainColor: \"#000000\",\r\n        mainSelectedColor: \"#ffffff\",\r\n        mainOpacity: 0.2,\r\n        mainSelectedOpacity: 1,\r\n        backColor: \"#000000\",\r\n        backSelectedColor: \"#ffffff\",\r\n        backOpacity: 0.2,\r\n        backSelectedOpacity: 0.2,\r\n        overlayColor: \"#8ebf62\",\r\n        overlaySelectedColor: \"#ffa500\",\r\n        overlayOpacity: 1,\r\n        overlaySelectedOpacity: 1\r\n      },\r\n      checkbox: {\r\n        checkboxSize: \"16px\",\r\n        fill: {\r\n          unselected: {\r\n            primary: {\r\n              background: \"#ffffff\",\r\n              text: \"#000000\"\r\n            }\r\n          },\r\n          selected: {\r\n            primary: {\r\n              background: \"#68b022\",\r\n              text: \"#ffffff\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","\r\nexport class ColorUtil {\r\n\r\n  public static isHexColor(color: string): boolean {\r\n    return /^#([A-Fa-f0-9]{8}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/.test(color);\r\n  }\r\n\r\n  public static isRgbColor(color: string): boolean {\r\n    return /^rgb\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3})\\)$/.test(color);\r\n  }\r\n\r\n  public static isRgbaColor(color: string): boolean {\r\n    return /^rgba\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3}), (0|1|0\\.\\d+)\\)$/.test(color);\r\n  }\r\n\r\n  public static hexToRgb(hex: string): { r: number, g: number, b: number } {\r\n    const result = /^#?([A-Fa-f\\d]{2})([A-Fa-f\\d]{2})([A-Fa-f\\d]{2})$/i.exec(hex);\r\n    return result ? {\r\n      r: parseInt(result[1], 16),\r\n      g: parseInt(result[2], 16),\r\n      b: parseInt(result[3], 16)\r\n    } : null;\r\n  }\r\n\r\n  public static hexToRgba(hex: string): { r: number, g: number, b: number, a: number } {\r\n    if (ColorUtil.hexHasAlpha(hex)) {\r\n      const result = /^#?([A-Fa-f\\d]{2})([A-Fa-f\\d]{2})([A-Fa-f\\d]{2})([A-Fa-f\\d]{2})$/i.exec(hex);\r\n      return result ? {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16),\r\n        a: parseInt(result[4], 16) / 255\r\n      } : null;\r\n    } else {\r\n      const result = /^#?([A-Fa-f\\d]{2})([A-Fa-f\\d]{2})([A-Fa-f\\d]{2})$/i.exec(hex);\r\n      return result ? {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16),\r\n        a: 1\r\n      } : null;\r\n    }\r\n  }\r\n\r\n  public static hexHasAlpha(hex: string): boolean {\r\n    return /^#?([A-Fa-f\\d]{8})$/i.test(hex);\r\n  }\r\n\r\n  public static rgbToHex(r: number, g: number, b: number, a?: number): string {\r\n    return '#'+[r, g, b].map((x) => {\r\n      const hex = x.toString(16);\r\n      return hex.length === 1 ? '0' + hex : hex;\r\n    }).join('');\r\n  }\r\n\r\n  public static rgbaToHex(r: number, g: number, b: number, a: number): string {\r\n    a = !a ? 1 : a;\r\n    let alpha = ((a * 255) | 1 << 8).toString(16).slice(1)\r\n    return ColorUtil.rgbToHex(r, g, b) + alpha;\r\n  }\r\n\r\n  public static rgbStringToHex(rgb: string): string {\r\n    const result = /^rgb\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3})\\)$/.exec(rgb);\r\n    if (result) {\r\n      return ColorUtil.rgbToHex(parseInt(result[1], 10), parseInt(result[2], 10), parseInt(result[3], 10));\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public static rgbaStringToHex(rgba: string): string {\r\n    const result = /^rgba\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3}), (0|1|0\\.\\d+)\\)$/.exec(rgba);\r\n    if (result) {\r\n      return ColorUtil.rgbaToHex(parseInt(result[1], 10), parseInt(result[2], 10), parseInt(result[3], 10), parseFloat(result[4]));\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public static rgbaStringToRgb(rgba: string): { r: number, g: number, b: number, a: number } {\r\n    const result = /^rgba\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3}), (0|1|0\\.\\d+)\\)$/.exec(rgba);\r\n    if (result) {\r\n      return {\r\n        r: parseInt(result[1], 10),\r\n        g: parseInt(result[2], 10),\r\n        b: parseInt(result[3], 10),\r\n        a: result[4] ? parseFloat(result[4]) : 1\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public static shouldTextBeDark(color: string, debug?: boolean): boolean {\r\n    if (debug) {\r\n      //debugger;\r\n    }\r\n    const rgba = ColorUtil.hexToRgba(color);\r\n    if (rgba) {\r\n      const { r, g, b, a } = rgba;\r\n      const mixedColor = {\r\n        r: r * a + (1 - a) * 255,\r\n        g: g * a + (1 - a) * 255,\r\n        b: b * a + (1 - a) * 255,\r\n        a: 1\r\n      };\r\n      const brightness = Math.round(((mixedColor.r * 299) + (mixedColor.g * 587) + (mixedColor.b * 114)) / 1000);\r\n      return brightness > 125;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  public static changeColorOpacity(color: string, opacity: number): string {\r\n    if (opacity > 1) {\r\n      opacity /= 100;\r\n    }\r\n\r\n    if (ColorUtil.isRgbColor(color) || ColorUtil.isRgbaColor(color)) {\r\n      let rgba = ColorUtil.rgbaStringToRgb(color);\r\n      if (rgba) {\r\n        return `rgba(${rgba.r}, ${rgba.g}, ${rgba.b}, ${rgba.a * opacity})`;\r\n      }\r\n      return color;\r\n    }\r\n\r\n    const rgb = ColorUtil.hexToRgba(color);\r\n    if (rgb) {\r\n      return `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a * opacity})`;\r\n    }\r\n    return color;\r\n  }\r\n\r\n  public static changeColorBrightnessPercent(color: string, percent: number): string {\r\n    let rgba;\r\n    if (ColorUtil.isRgbColor(color) || ColorUtil.isRgbaColor(color)) {\r\n      rgba = ColorUtil.rgbaStringToRgb(color);\r\n    } else {\r\n      rgba = ColorUtil.hexToRgba(color);\r\n    }\r\n    if (rgba) {\r\n      if ([rgba.r, rgba.g, rgba.b].filter((c) => c === 0 || c === 255).length === 3) {\r\n        rgba.r = rgba.r === 0 ? 1 : rgba.r;\r\n        rgba.g = rgba.g === 0 ? 1 : rgba.g;\r\n        rgba.b = rgba.b === 0 ? 1 : rgba.b;\r\n      }\r\n      return ColorUtil.rgbToHex(\r\n        Math.min(255, Math.max(0, Math.round(rgba.r * (1 + percent / 100)))),\r\n        Math.min(255, Math.max(0, Math.round(rgba.g * (1 + percent / 100)))),\r\n        Math.min(255, Math.max(0, Math.round(rgba.b * (1 + percent / 100)))),\r\n        rgba.a\r\n      );\r\n    }\r\n    return color;\r\n  }\r\n}\r\n","import { ColorUtil } from \"../../common/util/color.util\";\r\n\r\nexport function colorAttribute(value: string, fallbackValue?: string): string {\r\n  if (ColorUtil.isRgbColor(value)) {\r\n    return ColorUtil.rgbStringToHex(value);\r\n  } else if (ColorUtil.isRgbaColor(value)) {\r\n    return ColorUtil.rgbaStringToHex(value);\r\n  } else if (ColorUtil.isHexColor(value)) {\r\n    return value;\r\n  } else {\r\n    console.error('Farben können nur Hex-, RGB- oder RGBA-Werte sein. (Wert: ' + value + ')');\r\n    return fallbackValue || null;\r\n  }\r\n}\r\n\r\nexport function colorThemeAttribute(value: string, fallbackValue?: string): string {\r\n  if (ColorUtil.isRgbColor(value)) {\r\n    return ColorUtil.rgbStringToHex(value);\r\n  } else if (ColorUtil.isRgbaColor(value)) {\r\n    return ColorUtil.rgbaStringToHex(value);\r\n  } else if (ColorUtil.isHexColor(value)) {\r\n    return value;\r\n  } else if (['primary', 'accent', 'warn'].includes(value)) {\r\n    this.primary = value === 'primary';\r\n    this.accent = value === 'accent';\r\n    this.warn = value === 'warn';\r\n  } else {\r\n    console.error('Farben können nur Hex-, RGB- , RGBA-Werte oder \"primary\", \"accent\" oder \"warn\" sein. (Wert: ' + value + ')');\r\n    return fallbackValue || null;\r\n  }\r\n}\r\n","export function sizeAttribute(value: string | number, fallbackValue?: string, defaultUnit?: string): string {\r\n  if (typeof value === 'number') {\r\n    return defaultUnit ? `${value}${defaultUnit}` : `${value}px`;\r\n  }\r\n  if (typeof value === 'string' && !sizeRegex.test(value)) {\r\n    let numberValue: number = parseInt(value, 10);\r\n    if (!isNaN(numberValue)) {\r\n      return defaultUnit ? `${numberValue}${defaultUnit}` : `${numberValue}px`;\r\n    }\r\n  }\r\n  return value || fallbackValue || null;\r\n}\r\n\r\nconst sizeRegex = /(\\d+)(px|em|rem|vw|vh|vmin|vmax|%)/;\r\n","export function timeAttribute(value: string | number, fallbackValue?: string, defaultUnit?: string): string {\r\n  if (typeof value === 'number') {\r\n    return defaultUnit ? `${value}${defaultUnit}` : `${value}s`;\r\n  }\r\n  if (typeof value === 'string') {\r\n    let numberValue: number = parseInt(value, 10);\r\n    if (!isNaN(numberValue)) {\r\n      return defaultUnit ? `${value}${numberValue}` : `${numberValue}s`;\r\n    }\r\n  }\r\n  return value || fallbackValue || null;\r\n}\r\n","import { DOCUMENT } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ErrorHandler, Inject, Injectable, Optional, SecurityContext } from '@angular/core';\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\nimport { finalize, map, Observable, of, share, tap } from 'rxjs';\r\n\r\nexport declare interface TrustedHTML {\r\n  __brand__: 'TrustedHTML';\r\n}\r\n\r\nexport declare interface TrustedTypePolicyFactory {\r\n  createPolicy(\r\n    policyName: string,\r\n    policyOptions: {\r\n      createHTML?: (input: string) => string;\r\n    },\r\n  ): TrustedTypePolicy;\r\n}\r\n\r\nexport declare interface TrustedTypePolicy {\r\n  createHTML(input: string): TrustedHTML;\r\n}\r\n\r\n/**\r\n * The Trusted Types policy, or null if Trusted Types are not\r\n * enabled/supported, or undefined if the policy has not been created yet.\r\n */\r\nlet policy: TrustedTypePolicy | null | undefined;\r\n\r\n/**\r\n * Returns the Trusted Types policy, or null if Trusted Types are not\r\n * enabled/supported. The first call to this function will create the policy.\r\n */\r\nfunction getPolicy(): TrustedTypePolicy | null {\r\n  if (policy === undefined) {\r\n    policy = null;\r\n    if (typeof window !== 'undefined') {\r\n      const ttWindow = window as unknown as {trustedTypes?: TrustedTypePolicyFactory};\r\n      if (ttWindow.trustedTypes !== undefined) {\r\n        policy = ttWindow.trustedTypes.createPolicy('angular#components', {\r\n          createHTML: (s: string) => s,\r\n        });\r\n      }\r\n    }\r\n  }\r\n  return policy;\r\n}\r\n\r\n/**\r\n * Unsafely promote a string to a TrustedHTML, falling back to strings when\r\n * Trusted Types are not available.\r\n * @security This is a security-sensitive function; any use of this function\r\n * must go through security review. In particular, it must be assured that the\r\n * provided string will never cause an XSS vulnerability if used in a context\r\n * that will be interpreted as HTML by a browser, e.g. when assigning to\r\n * element.innerHTML.\r\n */\r\nexport function trustedHTMLFromString(html: string): TrustedHTML {\r\n  return getPolicy()?.createHTML(html) || (html as unknown as TrustedHTML);\r\n}\r\n\r\n/** Options that can be used to configure how an icon or the icons in an icon set are presented. */\r\nexport interface IconOptions {\r\n  /** View box to set on the icon. */\r\n  viewBox?: string;\r\n\r\n  /** Whether or not to fetch the icon or icon set using HTTP credentials. */\r\n  withCredentials?: boolean;\r\n}\r\n\r\n/**\r\n * Function that will be invoked by the icon registry when trying to resolve the\r\n * URL from which to fetch an icon. The returned URL will be used to make a request for the icon.\r\n */\r\nexport type IconResolver = (\r\n  name: string,\r\n  namespace: string,\r\n) => SafeResourceUrl | SafeResourceUrlWithIconOptions | null;\r\n\r\n/** Object that specifies a URL from which to fetch an icon and the options to use for it. */\r\nexport interface SafeResourceUrlWithIconOptions {\r\n  url: SafeResourceUrl;\r\n  options: IconOptions;\r\n}\r\n\r\n/**\r\n * Configuration for an icon, including the URL and possibly the cached SVG element.\r\n * @docs-private\r\n */\r\nclass SvgIconConfig {\r\n  svgElement: SVGElement | null;\r\n\r\n  constructor(\r\n    public url: SafeResourceUrl,\r\n    public svgText: TrustedHTML | null,\r\n    public options?: IconOptions,\r\n  ) {}\r\n}\r\n/** Icon configuration whose content has already been loaded. */\r\ntype LoadedSvgIconConfig = SvgIconConfig & {svgText: TrustedHTML};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MrdIconRegistryService {\r\n\r\n  private _document: Document;\r\n\r\n  /**\r\n   * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\r\n   */\r\n  private _svgIconConfigs = new Map<string, SvgIconConfig>();\r\n\r\n  /** Cache for icons loaded by direct URLs. */\r\n  private _cachedIconsByUrl = new Map<string, SVGElement>();\r\n\r\n  /** In-progress icon fetches. Used to coalesce multiple requests to the same URL. */\r\n  private _inProgressUrlFetches = new Map<string, Observable<TrustedHTML>>();\r\n\r\n  /** Registered icon resolver functions. */\r\n  private _resolvers: IconResolver[] = [];\r\n\r\n  constructor(\r\n    @Optional() private _httpClient: HttpClient,\r\n    private _sanitizer: DomSanitizer,\r\n    @Optional() @Inject(DOCUMENT) document: any,\r\n    private readonly _errorHandler: ErrorHandler,\r\n  ) {\r\n    this._document = document;\r\n  }\r\n\r\n  /**\r\n   * Registers an icon by URL in the default namespace.\r\n   * @param iconName Name under which the icon should be registered.\r\n   * @param url\r\n   */\r\n  addSvgIcon(iconName: string, url: SafeResourceUrl, options?: IconOptions): this {\r\n    return this.addSvgIconInNamespace('', iconName, url, options);\r\n  }\r\n\r\n  /**\r\n   * Registers an icon by URL in the specified namespace.\r\n   * @param namespace Namespace in which the icon should be registered.\r\n   * @param iconName Name under which the icon should be registered.\r\n   * @param url\r\n   */\r\n  addSvgIconInNamespace(\r\n    namespace: string,\r\n    iconName: string,\r\n    url: SafeResourceUrl,\r\n    options?: IconOptions,\r\n  ): this {\r\n    return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig(url, null, options));\r\n  }\r\n\r\n  /**\r\n   * Returns an Observable that produces the icon (as an `<svg>` DOM element) from the given URL.\r\n   * The response from the URL may be cached so this will not always cause an HTTP request, but\r\n   * the produced element will always be a new copy of the originally fetched icon. (That is,\r\n   * it will not contain any modifications made to elements previously returned).\r\n   *\r\n   * @param safeUrl URL from which to fetch the SVG icon.\r\n   */\r\n  getSvgIconFromUrl(safeUrl: SafeResourceUrl): Observable<SVGElement> {\r\n    const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\r\n\r\n    if (!url) {\r\n      throw Error(`Failed to sanitize URL: ${safeUrl}`);\r\n    }\r\n\r\n    const cachedIcon = this._cachedIconsByUrl.get(url);\r\n\r\n    if (cachedIcon) {\r\n      return of(cloneSvg(cachedIcon));\r\n    }\r\n\r\n    return this._loadSvgIconFromConfig(new SvgIconConfig(safeUrl, null)).pipe(\r\n      tap(svg => this._cachedIconsByUrl.set(url!, svg)),\r\n      map(svg => cloneSvg(svg)),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns an Observable that produces the icon (as an `<svg>` DOM element) with the given name\r\n   * and namespace. The icon must have been previously registered with addIcon or addIconSet;\r\n   * if not, the Observable will throw an error.\r\n   *\r\n   * @param name Name of the icon to be retrieved.\r\n   * @param namespace Namespace in which to look for the icon.\r\n   */\r\n  getNamedSvgIcon(name: string, namespace: string = ''): Observable<SVGElement> {\r\n    const key = iconKey(namespace, name);\r\n    let config = this._svgIconConfigs.get(key);\r\n\r\n    // Return (copy of) cached icon if possible.\r\n    if (config) {\r\n      return this._getSvgFromConfig(config);\r\n    }\r\n\r\n    // Otherwise try to resolve the config from one of the resolver functions.\r\n    config = this._getIconConfigFromResolvers(namespace, name);\r\n\r\n    if (config) {\r\n      this._svgIconConfigs.set(key, config);\r\n      return this._getSvgFromConfig(config);\r\n    }\r\n\r\n    // See if we have any icon sets registered for the namespace.\r\n    // const iconSetConfigs = this._iconSetConfigs.get(namespace);\r\n\r\n    // if (iconSetConfigs) {\r\n    //   return this._getSvgFromIconSetConfigs(name, iconSetConfigs);\r\n    // }\r\n    throw Error(`IconName not Fountd ${key}`);\r\n  }\r\n\r\n  /**\r\n   * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\r\n   */\r\n  private _getSvgFromConfig(config: SvgIconConfig): Observable<SVGElement> {\r\n    if (config.svgText) {\r\n      // We already have the SVG element for this icon, return a copy.\r\n      return of(cloneSvg(this._svgElementFromConfig(config as LoadedSvgIconConfig)));\r\n    } else {\r\n      // Fetch the icon from the config's URL, cache it, and return a copy.\r\n      return this._loadSvgIconFromConfig(config).pipe(map(svg => cloneSvg(svg)));\r\n    }\r\n  }\r\n\r\n  /** Tries to create an icon config through the registered resolver functions. */\r\n  private _getIconConfigFromResolvers(namespace: string, name: string): SvgIconConfig | undefined {\r\n    for (let i = 0; i < this._resolvers.length; i++) {\r\n      const result = this._resolvers[i](name, namespace);\r\n\r\n      if (result) {\r\n        return isSafeUrlWithOptions(result)\r\n          ? new SvgIconConfig(result.url, null, result.options)\r\n          : new SvgIconConfig(result, null);\r\n      }\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\r\n   * from it.\r\n   */\r\n  private _loadSvgIconFromConfig(config: SvgIconConfig): Observable<SVGElement> {\r\n    return this._fetchIcon(config).pipe(\r\n      tap(svgText => (config.svgText = svgText)),\r\n      map(() => this._svgElementFromConfig(config as LoadedSvgIconConfig)),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Creates a DOM element from the given SVG string.\r\n   */\r\n  private _svgElementFromString(str: TrustedHTML): SVGElement {\r\n    const div = this._document.createElement('DIV');\r\n    div.innerHTML = str as unknown as string;\r\n    const svg = div.querySelector('svg') as SVGElement;\r\n\r\n    if (!svg) {\r\n      throw Error('<svg> tag not found');\r\n    }\r\n\r\n    return svg;\r\n  }\r\n\r\n  /**\r\n   * Converts an element into an SVG node by cloning all of its children.\r\n   */\r\n  // private _toSvgElement(element: Element): SVGElement {\r\n  //   const svg = this._svgElementFromString(trustedHTMLFromString('<svg></svg>'));\r\n  //   const attributes = element.attributes;\r\n\r\n  //   // Copy over all the attributes from the `symbol` to the new SVG, except the id.\r\n  //   for (let i = 0; i < attributes.length; i++) {\r\n  //     const {name, value} = attributes[i];\r\n\r\n  //     if (name !== 'id') {\r\n  //       svg.setAttribute(name, value);\r\n  //     }\r\n  //   }\r\n\r\n  //   for (let i = 0; i < element.childNodes.length; i++) {\r\n  //     if (element.childNodes[i].nodeType === this._document.ELEMENT_NODE) {\r\n  //       svg.appendChild(element.childNodes[i].cloneNode(true));\r\n  //     }\r\n  //   }\r\n\r\n  //   return svg;\r\n  // }\r\n\r\n  /**\r\n   * Sets the default attributes for an SVG element to be used as an icon.\r\n   */\r\n  private _setSvgAttributes(svg: SVGElement, options?: IconOptions): SVGElement {\r\n    svg.setAttribute('fit', '');\r\n    svg.setAttribute('height', '100%');\r\n    svg.setAttribute('width', '100%');\r\n    svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\r\n    svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.\r\n\r\n    if (options && options.viewBox) {\r\n      svg.setAttribute('viewBox', options.viewBox);\r\n    }\r\n\r\n    return svg;\r\n  }\r\n\r\n  /**\r\n   * Returns an Observable which produces the string contents of the given icon. Results may be\r\n   * cached, so future calls with the same URL may not cause another HTTP request.\r\n   */\r\n  private _fetchIcon(iconConfig: SvgIconConfig): Observable<TrustedHTML> {\r\n    const {url: safeUrl, options} = iconConfig;\r\n    const withCredentials = options?.withCredentials ?? false;\r\n\r\n    if (!this._httpClient) {\r\n      throw Error('Could not fetch icon, HttpClient is not available.');\r\n    }\r\n\r\n    // TODO: add an ngDevMode check\r\n    if (safeUrl == null) {\r\n      throw Error(`Cannot fetch icon from URL \"${safeUrl}\".`);\r\n    }\r\n\r\n    const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\r\n\r\n    // TODO: add an ngDevMode check\r\n    if (!url) {\r\n      throw Error(`Failed to sanitize URL: ${safeUrl}`);\r\n    }\r\n\r\n    // Store in-progress fetches to avoid sending a duplicate request for a URL when there is\r\n    // already a request in progress for that URL. It's necessary to call share() on the\r\n    // Observable returned by http.get() so that multiple subscribers don't cause multiple XHRs.\r\n    const inProgressFetch = this._inProgressUrlFetches.get(url);\r\n\r\n    if (inProgressFetch) {\r\n      return inProgressFetch;\r\n    }\r\n\r\n    const req = this._httpClient.get(url, {responseType: 'text', withCredentials}).pipe(\r\n      map(svg => {\r\n        // Security: This SVG is fetched from a SafeResourceUrl, and is thus\r\n        // trusted HTML.\r\n        return trustedHTMLFromString(svg);\r\n      }),\r\n      finalize(() => this._inProgressUrlFetches.delete(url)),\r\n      share(),\r\n    );\r\n\r\n    this._inProgressUrlFetches.set(url, req);\r\n    return req;\r\n  }\r\n\r\n  /**\r\n   * Registers an icon config by name in the specified namespace.\r\n   * @param namespace Namespace in which to register the icon config.\r\n   * @param iconName Name under which to register the config.\r\n   * @param config Config to be registered.\r\n   */\r\n  private _addSvgIconConfig(namespace: string, iconName: string, config: SvgIconConfig): this {\r\n    this._svgIconConfigs.set(iconKey(namespace, iconName), config);\r\n    return this;\r\n  }\r\n\r\n  /** Parses a config's text into an SVG element. */\r\n  private _svgElementFromConfig(config: LoadedSvgIconConfig): SVGElement {\r\n    if (!config.svgElement) {\r\n      const svg = this._svgElementFromString(config.svgText);\r\n      this._setSvgAttributes(svg, config.options);\r\n      config.svgElement = svg;\r\n    }\r\n\r\n    return config.svgElement;\r\n  }\r\n}\r\n\r\n/** Clones an SVGElement while preserving type information. */\r\nfunction cloneSvg(svg: SVGElement): SVGElement {\r\n  return svg.cloneNode(true) as SVGElement;\r\n}\r\n\r\n/** Returns the cache key to use for an icon namespace and name. */\r\nfunction iconKey(namespace: string, name: string) {\r\n  return namespace + ':' + name;\r\n}\r\n\r\nfunction isSafeUrlWithOptions(value: any): value is SafeResourceUrlWithIconOptions {\r\n  return !!(value.url && value.options);\r\n}\r\n","import { AfterViewInit, Directive, ElementRef, EventEmitter, Input, OnChanges, OnDestroy, Output, booleanAttribute } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[hideIfTruncated]'\r\n})\r\nexport class HideIfTruncatedDirective implements AfterViewInit, OnChanges, OnDestroy {\r\n\r\n  @Input({transform: booleanAttribute}) hideIfTruncated: boolean = true;\r\n  @Input({transform: booleanAttribute}) checkChildrenForAttribute: boolean = false;\r\n  @Input() hideOnTruncatedElement: HTMLElement;\r\n  @Input() requiredHideAttribute: string;\r\n  @Input() displayState: string = 'block';\r\n  @Input() parentResizeElement: HTMLElement;\r\n\r\n  @Output() hiddenChanged: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  private mutationObserver: MutationObserver;\r\n  private resizeObserver: ResizeObserver;\r\n\r\n  private blockNextResizeEvent: boolean = false;\r\n  private resizeTimeout: any;\r\n\r\n  constructor(\r\n    private elementRef: ElementRef<HTMLElement>\r\n  ) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.hideIfTruncated) {\r\n      this.mutationObserver = new MutationObserver(() => {\r\n        this.ngOnChanges();\r\n      });\r\n      this.mutationObserver.observe(this.elementRef.nativeElement, {childList: true, subtree: true, characterData: true});\r\n\r\n      if (this.parentResizeElement) {\r\n        this.resizeObserver = new ResizeObserver((event) => {\r\n          // if (this.blockNextResizeEvent) {\r\n          //   this.blockNextResizeEvent = false;\r\n          //   return;\r\n          // }\r\n          if (this.resizeTimeout) {\r\n            clearTimeout(this.resizeTimeout);\r\n          }\r\n          this.elementRef.nativeElement.style.display = this.displayState;\r\n          this.resizeTimeout = setTimeout(() => this.ngOnChanges(), 10);\r\n        });\r\n        this.resizeObserver.observe(this.parentResizeElement);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    if (this.hideIfTruncated) {\r\n\r\n      const element = this.elementRef.nativeElement;\r\n      if (element.scrollWidth <= element.clientWidth) {\r\n        element.style.display = this.displayState;\r\n        this.hiddenChanged.emit(false);\r\n      } else {\r\n        element.style.display = 'none';\r\n        this.hiddenChanged.emit(true);\r\n      }\r\n\r\n      if (this.checkChildrenForAttribute) {\r\n        // const element = this.elementRef.nativeElement;\r\n        const children = element.children;\r\n        for (let i = 0; i < children.length; i++) {\r\n          if (children[i].getAttribute(this.requiredHideAttribute) !== null && (children[i] as HTMLElement).style) {\r\n            if (this.hideOnTruncatedElement) {\r\n              (children[i] as HTMLElement).style.display = this.hideOnTruncatedElement.style.display !== 'none' && this.hideOnTruncatedElement.scrollWidth <= this.hideOnTruncatedElement.clientWidth ? this.displayState : 'none';\r\n            } else {\r\n              (children[i] as HTMLElement).style.display = element.style.display === 'none' || children[i].scrollWidth <= children[i].clientWidth ? this.displayState : 'none';\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      this.blockNextResizeEvent = true;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.mutationObserver) {\r\n      this.mutationObserver.disconnect();\r\n    }\r\n    if (this.resizeObserver) {\r\n      this.resizeObserver.disconnect();\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { HideIfTruncatedDirective } from \"./hide-if-truncated/hide-if-truncated.directive\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    HideIfTruncatedDirective\r\n  ],\r\n  exports: [\r\n    HideIfTruncatedDirective\r\n  ]\r\n})\r\nexport class MrdDirectiveModule { }\r\n","<div class=\"mrd-progressbar-container\"\r\n  [style.--progress-bar-color]=\"color\" [style.--progress-bar-bg-color]=\"bgColor\">\r\n  <div class=\"mrd-progressbar indeterminate\" *ngIf=\"mode === 'indeterminate'\"></div>\r\n  <div class=\"mrd-progressbar determinate\" *ngIf=\"mode === 'determinate'\" [ngStyle]=\"{'transform': 'translateX(' + value + '%)'}\"></div>\r\n</div>\r\n","import { ColorUtil } from './../../../../common/util/color.util';\r\nimport { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, numberAttribute } from '@angular/core';\r\nimport { MrdConfigModel } from './../../../../common/model/config.model';\r\nimport { ConfigUtil } from './../../../../common/util/config.util';\r\n\r\n@Component({\r\n  selector: 'mrd-progress-bar',\r\n  templateUrl: './mrd-progress-bar.component.html',\r\n  styleUrls: ['./mrd-progress-bar.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MrdProgressBarComponent implements AfterViewInit {\r\n\r\n  private config: MrdConfigModel = ConfigUtil.getConfig();\r\n\r\n  @Input() public set mode(mode: 'determinate' | 'indeterminate') {\r\n    this._mode = mode;\r\n  }\r\n  public get mode(): 'determinate' | 'indeterminate' {\r\n    return this._mode;\r\n  }\r\n  private _mode: 'determinate' | 'indeterminate' = 'indeterminate';\r\n\r\n  @Input({transform: numberAttribute}) public set value(value: number) {\r\n    this._value = Math.max(0, Math.min(100, value || 0));\r\n  }\r\n  public get value(): number {\r\n    return this.mode === 'determinate' ? this._value - 100 : -100;\r\n  }\r\n  private _value: number = 0;\r\n\r\n  @Input() public set color(color: string) {\r\n    if (color === 'primary') {\r\n      color = this.config.baseColors.primary as string;\r\n    }\r\n    if (color === 'accent') {\r\n      color = this.config.baseColors.accent as string;\r\n    }\r\n    if (color === 'warn') {\r\n      color = this.config.baseColors.warn as string;\r\n    }\r\n    this._color = color;\r\n    this._bgColor = ColorUtil.changeColorOpacity(color, 20);\r\n  }\r\n  public get color(): string {\r\n    return this._color;\r\n  }\r\n  private _color: string = this.config.baseColors.primary as string;\r\n  private _bgColor: string = ColorUtil.changeColorOpacity(this.config.baseColors.primary as string, 20);\r\n\r\n  public get bgColor(): string {\r\n    return this._bgColor;\r\n  }\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef\r\n  ) {}\r\n\r\n  public ngAfterViewInit(): void {\r\n    this.cdr.detectChanges();\r\n  }\r\n}\r\n","<ng-template #circle>\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" focusable=\"false\" class=\"mrd-spinner-indeterminate-circle-svg\" [attr.viewBox]=\"viewBox\">\r\n    <circle cx=\"50%\" cy=\"50%\" class=\"mrd-spinner-indeterminate-circle-svg-circle\" [attr.r]=\"circleRadius\"\r\n      [style.stroke-dasharray.px]=\"strokeCircumference\" [style.stroke-width.%]=\"circleStrokeWidth\" [style.stroke-dashoffset.px]=\"strokeCircumference / 2\"\r\n      ></circle>\r\n  </svg>\r\n</ng-template>\r\n\r\n<div class=\"mrd-spinner-indeterminate-container\" aria-hidden=\"true\" *ngIf=\"mode === 'indeterminate'\" [style.--spinner-color]=\"color\">\r\n  <div class=\"mrd-spinner-indeterminate-spinners\">\r\n    <div class=\"mrd-spinner-indeterminate-part mrd-spinner-indeterminate-part-left\">\r\n      <ng-container [ngTemplateOutlet]=\"circle\"></ng-container>\r\n    </div>\r\n    <div class=\"mrd-spinner-indeterminate-gap-part\">\r\n      <ng-container [ngTemplateOutlet]=\"circle\"></ng-container>\r\n    </div>\r\n    <div class=\"mrd-spinner-indeterminate-part mrd-spinner-indeterminate-part-right\">\r\n      <ng-container [ngTemplateOutlet]=\"circle\"></ng-container>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"mrd-progess-spinner-determinate-container\" aria-hidden=\"true\" *ngIf=\"mode === 'determinate'\" [style.--spinner-color]=\"color\">\r\n  <svg class=\"mrd-spinner-indeterminate-circle-svg\" [attr.viewBox]=\"viewBox\"\r\n       xmlns=\"http://www.w3.org/2000/svg\" focusable=\"false\">\r\n    <circle [attr.r]=\"circleRadius\"\r\n            [style.stroke-dasharray.px]=\"strokeCircumference\"\r\n            [style.stroke-dashoffset.px]=\"strokeDashOffset\"\r\n            [style.stroke-width.%]=\"circleStrokeWidth\"\r\n            class=\"mrd-spinner-determinate-circle-svg-circle\"\r\n            cx=\"50%\" cy=\"50%\"/>\r\n  </svg>\r\n</div>\r\n\r\n<div class=\"mrd-progress-spinner-label\" *ngIf=\"showLabel\">\r\n  {{labelText}}<span class=\"mrd-progress-spinner-label-dots\">{{dots}}</span>\r\n</div>\r\n","import { AfterViewInit, Component, Input, OnDestroy, booleanAttribute, numberAttribute } from '@angular/core';\r\nimport { MrdConfigModel } from './../../../../common/model/config.model';\r\nimport { ConfigUtil } from './../../../../common/util/config.util';\r\n\r\n@Component({\r\n  selector: 'mrd-progress-spinner',\r\n  host: {\r\n    '[style.width.px]': 'diameter',\r\n    '[style.height.px]': 'diameter',\r\n    '[style.margin-bottom.em]': 'showLabel ? 1.5 : 0'\r\n  },\r\n  templateUrl: './mrd-progress-spinner.component.html',\r\n  styleUrls: ['./mrd-progress-spinner.component.scss']\r\n})\r\nexport class MrdProgressSpinnerComponent implements AfterViewInit, OnDestroy {\r\n\r\n  private config: MrdConfigModel = ConfigUtil.getConfig();\r\n\r\n  @Input() public mode: 'determinate' | 'indeterminate' = 'indeterminate';\r\n\r\n  @Input() public set color(color: string) {\r\n    if (color === 'primary') {\r\n      color = this.config.baseColors.primary as string;\r\n    }\r\n    if (color === 'accent') {\r\n      color = this.config.baseColors.accent as string;\r\n    }\r\n    if (color === 'warn') {\r\n      color = this.config.baseColors.warn as string;\r\n    }\r\n    this._color = color;\r\n  }\r\n  public get color(): string {\r\n    return this._color;\r\n  }\r\n  private _color: string = this.config.baseColors.primary as string;\r\n\r\n  @Input({transform: numberAttribute})\r\n  get value(): number {\r\n    return this.mode === 'determinate' ? this._value : 0;\r\n  }\r\n  set value(v: number) {\r\n    this._value = Math.max(0, Math.min(100, v || 0));\r\n  }\r\n  private _value = 0;\r\n\r\n  @Input({transform: numberAttribute})\r\n  get diameter(): number {\r\n    return this._diameter;\r\n  }\r\n  set diameter(size: number) {\r\n    this._diameter = size || 0;\r\n  }\r\n  private _diameter = 100;\r\n\r\n  @Input({transform: numberAttribute})\r\n  get strokeWidth(): number {\r\n    return this._strokeWidth ?? this.diameter / 10;\r\n  }\r\n  set strokeWidth(value: number) {\r\n    this._strokeWidth = value || 0;\r\n  }\r\n  private _strokeWidth: number;\r\n\r\n  @Input({transform: booleanAttribute}) public showLabel: boolean = false;\r\n\r\n  @Input() public set labelText(label: string) {\r\n    this._labelText = label;\r\n  }\r\n  public get labelText(): string {\r\n    return this._labelText || '';\r\n  }\r\n  private _labelText: string = 'Lade Daten';\r\n\r\n  public dots: string = '';\r\n  private interval: any;\r\n\r\n  public get circleRadius(): number {\r\n    return (this.diameter - this.strokeWidth) / 2;\r\n  }\r\n\r\n  public get strokeCircumference(): number {\r\n    return 2 * Math.PI * this.circleRadius;\r\n  }\r\n\r\n  public get strokeDashOffset() {\r\n    if (this.mode === 'determinate') {\r\n      return (this.strokeCircumference * (100 - this._value)) / 100;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public get circleStrokeWidth() {\r\n    if (this.diameter === 110) {\r\n      debugger;\r\n    }\r\n    return (this.strokeWidth / this.diameter) * 100;\r\n  }\r\n\r\n  public get viewBox() {\r\n    const viewBox = this.circleRadius * 2 + this.strokeWidth;\r\n    return `0 0 ${viewBox} ${viewBox}`;\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.showLabel) {\r\n      this.interval = setInterval( () => {\r\n        if (this.dots.length === 3) {\r\n          this.dots = '';\r\n        } else {\r\n          this.dots = this.dots + '.';\r\n        }\r\n      }, 700);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.interval) {\r\n      clearInterval(this.interval);\r\n    }\r\n  }\r\n}\r\n","<div>\r\n  <div [ngClass]=\"{'mrd-tooltip-container': defaultStyle}\">\r\n    <ng-template #simpleText>\r\n      {{text}}\r\n    </ng-template>\r\n    <ng-container *ngTemplateOutlet=\"contentTemplate || simpleText\">\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit, TemplateRef } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'mrd-tooltip',\r\n  templateUrl: './mrd-tooltip.component.html',\r\n  styleUrls: ['./mrd-tooltip.component.scss']\r\n})\r\nexport class MrdTooltipComponent implements OnInit {\r\n\r\n  /**\r\n   * This is simple text which is to be shown in the tooltip\r\n   */\r\n   @Input() text: string;\r\n\r\n   /**\r\n    * This provides finer control on the content to be visible on the tooltip\r\n    * This template will be injected in ToolTipRenderer directive in the consumer template\r\n    * <ng-template #template>\r\n    *  content.....\r\n    * </ng-template>\r\n    */\r\n   @Input() contentTemplate: TemplateRef<any>;\r\n\r\n   @Input() defaultStyle: boolean = true;\r\n\r\n   constructor() { }\r\n\r\n   ngOnInit() {\r\n   }\r\n}\r\n","import { MrdTooltipComponent } from './../../../components/mrd-tooltip/mrd-tooltip.component';\r\nimport { ComponentRef, Directive, HostListener, Input, TemplateRef, ElementRef, booleanAttribute, numberAttribute } from '@angular/core';\r\nimport { ComponentPortal } from '@angular/cdk/portal';\r\nimport { Overlay, OverlayPositionBuilder, OverlayRef } from '@angular/cdk/overlay';\r\n\r\n@Directive({\r\n  selector: '[mrdToolTip]',\r\n  exportAs: 'mrdToolTip'\r\n})\r\nexport class ToolTipRendererDirective {\r\n\r\n  /**\r\n   * Gibt an, ob der Tooltip angezeigt werden soll\r\n   *\r\n   * @memberof ToolTipRendererDirective\r\n   */\r\n  @Input() set showToolTip(value) {\r\n    this._showToolTip = value;\r\n    this.ngOnInit();\r\n  };\r\n  private _showToolTip: boolean = true;\r\n\r\n  /**\r\n   * Der Text, der im Tooltip angezeigt werden soll\r\n   *\r\n   * @type {string}\r\n   * @memberof ToolTipRendererDirective\r\n   */\r\n  @Input(`mrdToolTip`) text: string;\r\n\r\n  /**\r\n   * Ein eigenes Template, das im Tooltip angezeigt werden soll\r\n   *\r\n   * @type {TemplateRef<any>}\r\n   * @memberof ToolTipRendererDirective\r\n   */\r\n  @Input() contentTemplate: TemplateRef<any>;\r\n\r\n  /**\r\n   * Gibt an, ob der Standard-Style des Tooltips verwendet werden soll.\r\n   *\r\n   * Standard: true\r\n   *\r\n   * @type {boolean}\r\n   * @memberof ToolTipRendererDirective\r\n   */\r\n  @Input() defaultStyle: boolean = true;\r\n\r\n  /**\r\n   * Die Position, an der der Tooltip angezeigt werden soll.\r\n   *\r\n   * Standard: 'bottom'\r\n   *\r\n   * @type {('top' | 'bottom' | 'left' | 'right')}\r\n   * @memberof ToolTipRendererDirective\r\n   */\r\n  @Input() position: 'top' | 'bottom' | 'left' | 'right' = 'bottom';\r\n\r\n  /**\r\n   * Gibt an, ob der Tooltip nur angezeigt werden soll, wenn der Text abgeschnitten wird.\r\n   *\r\n   * Standard: false\r\n   *\r\n   * @type {boolean}\r\n   * @memberof ToolTipRendererDirective\r\n   */\r\n  @Input({transform: booleanAttribute}) showIfTruncated: boolean = false;\r\n\r\n  /**\r\n   * Wenn gesetzt, wird der Tooltip nur angezeigt, wenn der Inhalt des Elements abgeschnitten wird\r\n   *\r\n   * @type {HTMLElement}\r\n   * @memberof ToolTipRendererDirective\r\n   */\r\n  @Input() showOnTruncatedElement: HTMLElement;\r\n\r\n  /**\r\n   * Gibt an, ob der Tooltip geöffnet bleiben soll, wenn der Mauszeiger über dem Tooltip ist.\r\n   *\r\n   * Standard: false\r\n   *\r\n   * @type {boolean}\r\n   * @memberof ToolTipRendererDirective\r\n   */\r\n  @Input({transform: booleanAttribute}) keepOnTooltipHover: boolean = false;\r\n\r\n  /**\r\n   * Gibt an, wie lange gewartet werden soll, bevor der Tooltip angezeigt wird.\r\n   *\r\n   * Wert in Millisekunden\r\n   *\r\n   * Standard: 0\r\n   *\r\n   * @type {number}\r\n   * @memberof ToolTipRendererDirective\r\n   */\r\n  @Input({transform: numberAttribute}) showDelay: number = 0;\r\n  /**\r\n   * Gibt an, wie lange gewartet werden soll, bevor der Tooltip geschlossen wird.\r\n   *\r\n   * Wert in Millisekunden\r\n   *\r\n   * Standard: 0\r\n   *\r\n   * @type {number}\r\n   * @memberof ToolTipRendererDirective\r\n   */\r\n  @Input({transform: numberAttribute}) hideDelay: number = 0;\r\n\r\n  private _overlayRef: OverlayRef;\r\n\r\n  private disabled: boolean = true;\r\n\r\n  private tooltipRef: ComponentRef<MrdTooltipComponent>;\r\n\r\n  constructor(\r\n    private _overlay: Overlay,\r\n    private _overlayPositionBuilder: OverlayPositionBuilder,\r\n    private _elementRef: ElementRef\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    if (!this._showToolTip) {\r\n      this.closeToolTip();\r\n      return;\r\n    }\r\n\r\n    // Standardwerte sind für Position 'bottom'\r\n    let overlayY: \"top\" | \"bottom\" | \"center\" = \"top\";\r\n    let offsetY = 5;\r\n    let originY: \"top\" | \"bottom\" | \"center\" = \"bottom\";\r\n    let originX: \"start\" | \"end\" | \"center\" = \"center\";\r\n    let overlayX: \"start\" | \"end\" | \"center\" = \"center\";\r\n    let offsetX = 0;\r\n    if (this.position === \"top\") {\r\n      originY = \"top\";\r\n      overlayY = \"bottom\";\r\n      offsetY = -5;\r\n    }\r\n    if (this.position === \"left\") {\r\n      originY = \"center\";\r\n      overlayY = \"center\";\r\n      offsetY = 0;\r\n      originX = \"start\";\r\n      overlayX = \"end\";\r\n      offsetX = -5;\r\n    }\r\n    if (this.position === \"right\") {\r\n      originY = \"center\";\r\n      overlayY = \"center\";\r\n      offsetY = 0;\r\n      originX = \"end\";\r\n      overlayX = \"start\";\r\n      offsetX = 5;\r\n    }\r\n\r\n    const positionStrategy = this._overlayPositionBuilder\r\n                                  .flexibleConnectedTo(this._elementRef)\r\n                                  .withPositions([{\r\n                                                    originX: originX,\r\n                                                    originY: originY,\r\n                                                    overlayX: overlayX,\r\n                                                    overlayY: overlayY,\r\n                                                    offsetY: offsetY,\r\n                                                    offsetX: offsetX\r\n                                                }]);\r\n\r\n    this._overlayRef = this._overlay.create({ positionStrategy});\r\n\r\n  }\r\n\r\n  /**\r\n   * This method will be called whenever the mouse enters in the Host element\r\n   * i.e. where this directive is applied\r\n   * This method will show the tooltip by instantiating the CustomToolTipComponent and attaching to the overlay\r\n   */\r\n  @HostListener('mouseenter')\r\n  show() {\r\n    if (this.showIfTruncated) {\r\n      const element = this._elementRef.nativeElement;\r\n      this.disabled = element.scrollWidth <= element.clientWidth;\r\n      if (element.style.webkitLineClamp !== '' && element.classList && element.classList.value && element.classList.value.includes('ellipsis')) {\r\n        this.disabled = element.scrollHeight <= element.clientHeight;\r\n      }\r\n    } else if (this.showOnTruncatedElement) {\r\n      this.disabled = this.showOnTruncatedElement.scrollWidth <= this.showOnTruncatedElement.clientWidth;\r\n    } else {\r\n      this.disabled = false;\r\n    }\r\n    //attach the component if it has not already attached to the overlay\r\n    if (!this.disabled && this._overlayRef && !this._overlayRef.hasAttached()) {\r\n      setTimeout(() => {\r\n        this.tooltipRef = this._overlayRef.attach(new ComponentPortal(MrdTooltipComponent));\r\n        this.tooltipRef.instance.text = this.text;\r\n        this.tooltipRef.instance.contentTemplate = this.contentTemplate;\r\n        this.tooltipRef.instance.defaultStyle = this.defaultStyle;\r\n\r\n        if (this.keepOnTooltipHover) {\r\n          this.tooltipRef.location.nativeElement.onmouseleave = () => {\r\n            this.closeToolTip();\r\n          }\r\n        }\r\n      }, this.showDelay);\r\n    }\r\n  }\r\n\r\n  private isMouseOverTooltip(event: MouseEvent): boolean {\r\n    // Überprüfe, ob der Mauszeiger sich über dem Tooltip befindet\r\n    if (!this.tooltipRef) {\r\n      return false;\r\n    }\r\n    const tooltipRect = this.tooltipRef.location.nativeElement.getBoundingClientRect();\r\n    return (\r\n      event.clientX + 10 >= tooltipRect.left &&\r\n      event.clientX - 10 <= tooltipRect.right &&\r\n      event.clientY + 10 >= tooltipRect.top &&\r\n      event.clientY - 10 <= tooltipRect.bottom\r\n    );\r\n  }\r\n\r\n  /**\r\n   * This method will be called when the mouse goes out of the host element\r\n   * i.e. where this directive is applied\r\n   * This method will close the tooltip by detaching the overlay from the view\r\n   */\r\n  @HostListener('mouseleave', ['$event'])\r\n  hide(event?: MouseEvent) {\r\n    if (this.tooltipRef && this.keepOnTooltipHover && event) {\r\n      setTimeout(() => {\r\n        if (!this.isMouseOverTooltip(event)) {\r\n          this.closeToolTip();\r\n        } else {\r\n          this.tooltipRef.location.nativeElement.onmouseleave = () => {\r\n            this.closeToolTip();\r\n          }\r\n        }\r\n      }, 200);\r\n    } else {\r\n      this.closeToolTip();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroy lifecycle event handler\r\n   * This method will make sure to close the tooltip\r\n   */\r\n  ngOnDestroy() {\r\n    this.closeToolTip();\r\n  }\r\n\r\n  /**\r\n   * This method will close the tooltip by detaching the component from the overlay\r\n   */\r\n  private closeToolTip() {\r\n    if (this._overlayRef) {\r\n      setTimeout(() => {\r\n        this._overlayRef.detach();\r\n      }, this.hideDelay);\r\n    }\r\n  }\r\n}\r\n","<!-- Der eigentlich HTML-Button -->\r\n<button class=\"mrd-button-container\"\r\n  #buttonContainer\r\n  [style.--bg-color]=\"bgColor\"\r\n  [style.--text-color]=\"textColor\"\r\n  [style.--disabled-text-color]=\"disabledTextColor\"\r\n  [style.--disabled-bg-color]=\"disabledBgColor\"\r\n  [style.--border-width]=\"borderWidth\"\r\n  [style.--border-color]=\"borderColor\"\r\n  [style.--border-style]=\"borderStyle\"\r\n  [style.--border-radius]=\"borderRadius\"\r\n  [style.--min-height]=\"minHeight\"\r\n  [style.--font-size]=\"fontSize\"\r\n  [style.--font-family]=\"fontFamily\"\r\n  [style.--diameter]=\"diameter\"\r\n  [style.--icon-size]=\"iconSize\"\r\n  [style.--unselected-color]=\"toggleUnselectedColor\"\r\n\r\n  (click)=\"onClick($event)\"\r\n\r\n  [ngStyle]=\"{'min-width': fitContent ? 'fit-content' : 'unset'}\"\r\n  [ngClass]=\"{'mrd-icon-button': icon, 'mrd-raised-button': raised, 'mrd-outline-button': outline,\r\n    'mrd-flat-button': flat, 'mrd-fab-button': fab, 'mrd-mini-fab-button': miniFab, 'mrd-toggle-button': toggle,\r\n    'mrd-toggle-selected': toggleSelected, 'disabled': disabled}\"\r\n\r\n  [mrdToolTip]=\"tooltipText\" [showOnTruncatedElement]=\"tooltipIfTruncated ? mrdButtonTextContent : undefined\" [showToolTip]=\"showTooltip\">\r\n  <div class=\"mrd-button-background\">\r\n    <!-- Ein Overlay über dem Button welches den Hover- und Active-Effekt anzeigt -->\r\n    <div class=\"mrd-button-focus\" [style.--hover-color]=\"hoverColor\" [style.--active-color]=\"activeColor\"></div>\r\n  </div>\r\n  <!-- Ein Overlay über dem Button welches den Hover- und Active-Effekt anzeigt -->\r\n  <!-- <div class=\"mrd-button-focus\" [style.--hover-color]=\"hoverColor\" [style.--active-color]=\"activeColor\"></div> -->\r\n  <!-- Der Content des Buttons -->\r\n  <span class=\"mrd-button-content\" [ngClass]=\"{'isCollapsed': isCollapsed}\">\r\n    <!-- Icons links vom Text -->\r\n    <span class=\"mrd-button-icon-content\" [ngClass]=\"{'full-icon': fullIcon}\" [hideIfTruncated]=\"collapse\" displayState=\"flex\" requiredHideAttribute=\"icon-collapse\"\r\n      checkChildrenForAttribute [hideOnTruncatedElement]=\"mrdButtonTextContent\" [parentResizeElement]=\"this.elementRef.nativeElement\"><ng-content select=\"mrd-icon:not([icon-end]), [mrd-icon]:not([icon-end])\"></ng-content></span>\r\n    <!-- Der Text des Buttons -->\r\n    <span class=\"mrd-button-text-content\" (hiddenChanged)=\"buttonCollapsed($event)\" [hideIfTruncated]=\"collapse\" #mrdButtonTextContent [parentResizeElement]=\"this.elementRef.nativeElement\"><ng-content select=\":not([mrd-icon]):not(mrd-icon)\"></ng-content></span>\r\n    <!-- Icons rechts vom Text -->\r\n    <span class=\"mrd-button-icon-content\" [ngClass]=\"{'full-icon': fullIcon}\" [hideIfTruncated]=\"collapse\" displayState=\"flex\" requiredHideAttribute=\"icon-collapse\"\r\n      checkChildrenForAttribute [hideOnTruncatedElement]=\"mrdButtonTextContent\" [parentResizeElement]=\"this.elementRef.nativeElement\"><ng-content select=\"mrd-icon[icon-end], [mrd-icon][icon-end]\"></ng-content></span>\r\n  </span>\r\n  <!-- Die Progress-Bar eines Buttons (nicht für Icon-, Fab- und Mini-Fab-Buttons) -->\r\n  <mrd-progress-bar class=\"mrd-button-progress-bar\"\r\n    *ngIf=\"!disabled && !icon && !fab && !miniFab && (isLoading || loading?.value || loadingProgress?.value || loadingProgress?.value === 0)\"\r\n    [value]=\"loadingProgress?.value\" [mode]=\"loadingProgress ? 'determinate' : 'indeterminate'\" [color]=\"progressColor\"></mrd-progress-bar>\r\n  <!-- Der Progress-Spinner eines Buttons (nur für Icon-, Fab- und Mini-Fab-Buttons) -->\r\n  <mrd-progress-spinner class=\"mrd-button-progress-spinner\"\r\n    *ngIf=\"!disabled && (icon || fab || miniFab) && (isLoading || loading?.value || loadingProgress?.value || loadingProgress?.value === 0)\"\r\n    [value]=\"loadingProgress?.value\" [mode]=\"loadingProgress ? 'determinate' : 'indeterminate'\" [color]=\"progressColor\"></mrd-progress-spinner>\r\n</button>\r\n","import { MrdBorder } from './../../../../common/model/config.model';\r\nimport { BasePushStrategyObject, ObservableValue, Util } from 'mrd-core';\r\nimport { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, Output,ViewChild, booleanAttribute } from '@angular/core';\r\nimport { ColorUtil } from './../../../../common/util/color.util';\r\nimport { MrdConfigModel } from './../../../../common/model/config.model';\r\nimport { ConfigUtil } from './../../../../common/util/config.util';\r\nimport * as _ from 'underscore';\r\nimport { MrdBaseColorTheme } from './../../../../common/model/config.model';\r\nimport { colorAttribute, colorThemeAttribute } from './../../../../common/transforms/color-transform';\r\nimport { sizeAttribute } from './../../../../common/transforms/size-transform';\r\n/**\r\n * Dieses Komponente stellt den Mrd-Button zur Verfügung.\r\n *\r\n * Der Button kann mittels der entsprechenden Attribute in folgenden Stilen dargestellt werden:\r\n * - Standard-Button (default)\r\n * - Icon-Button (Attributname: icon-button)\r\n * - Raised-Button (Attributname: raised-button)\r\n * - Outline-Button (Attributname: outline-button)\r\n * - Flat-Button (Attributname: flat-button)\r\n * - Fab-Button (Attributname: fab-button)\r\n * - MiniFab-Button (Attributname: miniFab-button)\r\n *\r\n * Weiterhin können die standard Themes (primary, accent, warn) für die Hintergrund- bzw. Textfarbe festgelegt werden (je nach Style).\r\n *\r\n * Für weitere Anpassungen siehe die Informationen der einzelnen Attribute oder die Dokumentation.\r\n *\r\n * @class MrdButtonComponent\r\n * @extends {BasePushStrategyObject}\r\n * @implements {AfterViewInit}\r\n */\r\n@Component({\r\n  selector: 'mrd-button',\r\n  host: {\r\n   '[style.min-width]': 'fitContent ? \"fit-content\" : \"unset\"',\r\n   '[style.margin]': 'toggle ? \"0 -16px\" : \"unset\"',\r\n   '[style.transition]': 'toggle ? \"transform 0.2s\" : \"unset\"',\r\n   '[class.active]': 'toggle && toggleSelected'\r\n  },\r\n  templateUrl: './mrd-button.component.html',\r\n  styleUrls: ['./mrd-button.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MrdButtonComponent extends BasePushStrategyObject implements AfterViewInit {\r\n\r\n  /**\r\n   * Referenz auf das Text-Element des Buttons.\r\n   *\r\n   * @type {ElementRef<HTMLElement>}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @ViewChild('mrdButtonTextContent', {static: true}) mrdButtonTextContent: ElementRef<HTMLElement>;\r\n\r\n  /**\r\n   * Gibt an, ob der Button ein Icon-Button ist.\r\n   *\r\n   * Der Content des Buttons sollte nur ein Icon sein.\r\n   * Der Button hat standardmäßig einen transparenten Hintergrund und die Farbe des Icons ist schwarz.\r\n   *\r\n   * @type {boolean}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({alias: 'icon-button', transform: booleanAttribute}) icon: boolean = false;\r\n\r\n  /**\r\n   * Gibt an, ob der Button ein Raised-Button ist.\r\n   *\r\n   * Raised-Buttons haben einen Schatten.\r\n   * Der Button hat standardmäßig einen weißen Hintergrund und die Textfarbe schwarz.\r\n   *\r\n   * @type {boolean}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({alias: 'raised-button', transform: booleanAttribute}) raised: boolean = false;\r\n  /**\r\n   * Gibt an, ob der Button ein Outline-Button ist.\r\n   *\r\n   * Outline-Buttons haben standardmäßig einen transparenten Hintergrund und einen grauen Rand, sowie einen schwarzen Text.\r\n   *\r\n   * @type {boolean}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({alias: 'outline-button', transform: booleanAttribute}) outline: boolean = false;\r\n  /**\r\n   * Gibt an, ob der Button ein Flat-Button ist.\r\n   *\r\n   * Flat-Buttons haben standardmäßig einen weißen Hintergrund und die Textfarbe ist schwarz.\r\n   *\r\n   * @type {boolean}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({alias: 'flat-button', transform: booleanAttribute}) flat: boolean = false;\r\n  /**\r\n   * Gibt an, ob der Button ein Fab-Button ist.\r\n   *\r\n   * Fab-Buttons sind kreisförmige Buttons.\r\n   * Standardmäßig haben sie einen weißen Hintergrund und die Iconfarbe ist schwarz, außerdem besitzen sie einen Schatten.\r\n   *\r\n   * @type {boolean}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({alias: 'fab-button', transform: booleanAttribute}) fab: boolean = false;\r\n  /**\r\n   * Gibt an, ob der Button ein MiniFab-Button ist.\r\n   *\r\n   * MiniFab-Buttons sind kreisförmige Buttons von der Größe eines Icon-Buttons.\r\n   * Standardmäßig haben sie einen weißen Hintergrund und die Iconfarbe ist schwarz, außerdem besitzen sie einen Schatten.\r\n   *\r\n   * @type {boolean}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({alias: 'miniFab-button', transform: booleanAttribute}) miniFab: boolean = false;\r\n\r\n  @Input({alias: 'toggle-button', transform: booleanAttribute}) toggle: boolean = false;\r\n\r\n  @Input({alias: 'selected', transform: booleanAttribute}) toggleSelected: boolean = false;\r\n\r\n  /**\r\n   * Gibt an, ob der Button das Theme \"primary\" hat.\r\n   *\r\n   * Hierdurch wird die Hintergrundfarbe des Buttons auf die primäre Farbe des Themes gesetzt.\r\n   *\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({transform: booleanAttribute}) public primary: boolean = false;\r\n\r\n  /**\r\n   * Gibt an, ob der Button das Theme \"accent\" hat.\r\n   *\r\n   * Hierdurch wird die Hintergrundfarbe des Buttons auf die Akzentfarbe des Themes gesetzt.\r\n   *\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({transform: booleanAttribute}) public accent: boolean = false;\r\n\r\n  /**\r\n   * Gibt an, ob der Button das Theme \"warn\" hat.\r\n   *\r\n   * Hierdurch wird die Hintergrundfarbe des Buttons auf die Warnfarbe des Themes gesetzt.\r\n   *\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({transform: booleanAttribute}) public warn: boolean = false;\r\n\r\n  /**\r\n   * Gibt an, ob der Button deaktiviert ist.\r\n   *\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({transform: booleanAttribute}) public disabled: boolean = false;\r\n\r\n  /**\r\n   * Eine ObservableValue, die übergeben werden kann, um zu bestimmen,\r\n   * ob der Button einen Ladebalken/Ladespinner anzeigen soll.\r\n   *\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input() public loading: ObservableValue<boolean>;\r\n  /**\r\n   * Ein boolean, der bestimmt, ob der Button einen Ladebalken/Ladespinner anzeigen soll.\r\n   *\r\n   * @type {boolean}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({transform: booleanAttribute}) public isLoading: boolean = false;\r\n  /**\r\n   * Eine ObservableValue, die übergeben werden kann, um den Fortschritt des Ladebalkens/Ladespinners zu bestimmen.\r\n   *\r\n   * @type {ObservableValue<number>}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input() public loadingProgress: ObservableValue<number>;\r\n\r\n  /**\r\n   * Setzt die Grundfarbe des Buttons.\r\n   *\r\n   * Diese wird je nach Style des Buttons als Hintergrundfarbe oder Textfarbe verwendet.\r\n   *\r\n   * Es können Hex-, RGB- oder RGBA-Werte, sowie \"primary\", \"accent\" oder \"warn\" angegeben werden.\r\n   *\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({alias: 'color', transform: colorThemeAttribute}) public customTextColor: string;\r\n\r\n  /**\r\n   * Setzt die Hintergrundfarbe des Buttons.\r\n   *\r\n   * Es können Hex-, RGB- oder RGBA-Werte angegeben werden.\r\n   *\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({alias: 'backgroundColor', transform: colorAttribute}) public customBgColor: string;\r\n\r\n  /**\r\n   * Gibt an, ob die benutzerdefinierte Textfarbe nicht durch ein defniertes Thema überschrieben werden soll.\r\n   *\r\n   * @type {boolean}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({transform: booleanAttribute}) public keepCustomTextColor: boolean = false;\r\n  /**\r\n   * Gibt an, ob die benutzerdefinierte Hintergrundfarbe nicht durch ein definiertes Thema überschrieben werden soll.\r\n   *\r\n   * @type {boolean}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({transform: booleanAttribute}) public keepCustomBgColor: boolean = false;\r\n\r\n  @Input({transform: colorAttribute}) public customToggleUnselectedColor: string;\r\n\r\n  @Input({transform: colorAttribute}) public customToggleUnselectedTextColor: string;\r\n\r\n  @Input({transform: colorAttribute}) public customToggleSelectedTextColor: string;\r\n\r\n  /**\r\n   * Setzt die Farbe des Ladebalkens/Ladespinners.\r\n   *\r\n   * Es können Hex-, RGB- oder RGBA-Werte angegeben werden.\r\n   *\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({transform: colorAttribute}) public progressColor: string;\r\n\r\n  /**\r\n   * Gibt an, ob der Button-Text verschwindet, wenn er zu lang ist und ausgepunktet werden würde.\r\n   *\r\n   * @type {boolean}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({transform: booleanAttribute}) public collapse: boolean = false;\r\n  /**\r\n   * Gibt an, zu welchem Style der Button kollabieren soll.\r\n   * Mögliche Werte: \"icon\", \"fab\", \"miniFab\"\r\n   *\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input() public set collapseTo(value: string) {\r\n    if (this._collapseTo === value) {\r\n      return;\r\n    }\r\n    if (value === MrdButtonAppearance.ICON || value === MrdButtonAppearance.FAB || value === MrdButtonAppearance.MINI_FAB) {\r\n      this._collapseTo = value;\r\n      this.collapse = true;\r\n    } else if (value) {\r\n      throw Error('Das Attribut collapseTo kann nur \"icon\", \"fab\" oder \"miniFab\" sein.');\r\n    }\r\n  }\r\n  public get collapseTo(): string {\r\n    return this._collapseTo;\r\n  }\r\n  private _collapseTo: string;\r\n\r\n  /**\r\n   * Sorgt dafür, dass der Button immer mindestens so breit ist, wie sein Inhalt.\r\n   *\r\n   * @type {boolean}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({alias: 'fit-content', transform: booleanAttribute}) public fitContent: boolean = false;\r\n\r\n  /**\r\n   * Gibt an, ob der Button einen Tooltip anzeigen soll.\r\n   *\r\n   * Der Tooltip-Text wird standardmäßig aus dem Inhalt des Buttons ohne durch [mrd-icon] gekennzeichnete Icons generiert.\r\n   *\r\n   * @type {boolean}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({alias: 'tooltip', transform: booleanAttribute}) public showTooltip: boolean = false;\r\n  /**\r\n   * Der Text des Tooltips.\r\n   *\r\n   * @type {string}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input() public tooltipText: string;\r\n  /**\r\n   * Gibt an, ob der Tooltip nur angezeigt werden soll, wenn der Button-Text ausgepunktet wird.\r\n   *\r\n   * @type {boolean}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({transform: booleanAttribute}) public set tooltipIfTruncated(value: boolean) {\r\n    this.showTooltip = value || this.showTooltip;\r\n    this._tooltipIfTruncated = value;\r\n  }\r\n  public get tooltipIfTruncated(): boolean {\r\n    return this._tooltipIfTruncated;\r\n  }\r\n  private _tooltipIfTruncated: boolean = false;\r\n\r\n  /**\r\n   * Die Mindesthöhe des Buttons.\r\n   *\r\n   * Wird eine Zahl angegeben, wird diese als Pixelwert interpretiert.\r\n   *\r\n   * @type {string | number}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({transform: sizeAttribute}) public minHeight: string;\r\n  /**\r\n   * Die Schriftgröße des Buttons.\r\n   *\r\n   * Wird eine Zahl angegeben, wird diese als Pixelwert interpretiert.\r\n   *\r\n   * @type {string | number}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({transform: sizeAttribute}) public fontSize: string;\r\n\r\n  @Input() public fontFamily: string;\r\n  /**\r\n   * Der Durchmesser für Icon-, Fab- und MiniFab-Buttons.\r\n   *\r\n   * Wird eine Zahl angegeben, wird diese als Pixelwert interpretiert.\r\n   *\r\n   * @type {string | number}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({transform: sizeAttribute}) public diameter: string;\r\n  /**\r\n   * Die Größe des Icons.\r\n   *\r\n   * Wird eine Zahl angegeben, wird diese als Pixelwert interpretiert.\r\n   *\r\n   * @type {string | number}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({transform: sizeAttribute}) public iconSize: string;\r\n\r\n  @Input({transform: booleanAttribute}) public fullIcon: boolean = false;\r\n  /**\r\n   * Der Radius der Ecken des Buttons.\r\n   *\r\n   * Wird eine Zahl angegeben, wird diese als Pixelwert interpretiert.\r\n   *\r\n   * @type {string | number}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({transform: sizeAttribute}) public borderRadius: string;\r\n\r\n  /**\r\n   * Das Klick-Event durch den Nutzer.\r\n   *\r\n   * @type {EventEmitter<Event>}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Output() public click: EventEmitter<Event> = new EventEmitter<Event>();\r\n\r\n\r\n  /**\r\n   * Die Konfiguration des Mrd-Buttons.\r\n   *\r\n   * @private\r\n   * @type {MrdConfigModel}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  private _config: MrdConfigModel = ConfigUtil.getConfig();\r\n\r\n  public isCollapsed: boolean = false;\r\n  private uncollapsedAppearance: MrdButtonAppearance;\r\n\r\n  private buttonPrimary: string | MrdBaseColorTheme;\r\n  private buttonAccent: string | MrdBaseColorTheme;\r\n  private buttonWarn: string | MrdBaseColorTheme;\r\n  private buttonDisabled: MrdBaseColorTheme;\r\n  private buttonProgress: string;\r\n\r\n  public bgColor: string;\r\n  private textLightColor: string;\r\n  private textDarkColor: string;\r\n  public textColor: string;\r\n  public hoverColor: string;\r\n  public activeColor: string;\r\n  public disabledTextColor: string;\r\n  public disabledBgColor: string;\r\n  public toggleUnselectedColor: string;\r\n\r\n  public borderWidth: string;\r\n  public borderStyle: string;\r\n  public borderColor: string;\r\n\r\n\r\n  constructor(\r\n    protected cdr: ChangeDetectorRef,\r\n    public elementRef: ElementRef<HTMLElement>\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (Util.isDefined(this.loading)) {\r\n      this.markForCheckIf(this.loading.changed)\r\n    }\r\n    if (Util.isDefined(this.loadingProgress)) {\r\n      this.markForCheckIf(this.loadingProgress.changed)\r\n    }\r\n\r\n    this.initBaseStyle();\r\n\r\n    this.updateStyle();\r\n\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  public updateStyle(): void {\r\n    let themesCount = [this.primary, this.accent, this.warn].filter((value) => value).length;\r\n    if (themesCount > 1) {\r\n      throw Error('Ein MrdButton kann nur ein Thema haben. Setze \"primary\", \"accent\" oder \"warn\" als Thema.');\r\n    }\r\n    let appearanceCount = [this.icon, this.raised, this.outline, this.flat, this.fab, this.miniFab, this.toggle].filter((value) => value).length;\r\n    if (appearanceCount > 1) {\r\n      throw Error('Ein MrdButton kann nur einen Style haben. Setze \"icon-button\", \"raised-button\", \"outline-button\", \"flat-button\", \"fab-button\", \"miniFab-button\" oder keinen Style.');\r\n    }\r\n\r\n    // Falls irgendeine Farbe/Thema gesetzt ist, wird die Hintergrund- und Textfarbe des Buttons anhand dieser und des Styles gesetzt.\r\n    if (this.primary || this.accent || this.warn || this.customBgColor || this.customTextColor) {\r\n      // Wenn 'keepCustomBgColor' gesetzt ist, dann wird 'customBgColor' als 'baseColor' verwendet\r\n      let baseColor: string = this.keepCustomBgColor && !!this.customBgColor ? this.customBgColor :\r\n        // Sonst wenn ein Theme gesetzt ist, wird die entsprechende Farbe des Themes verwendet\r\n        this.primary ? _.isObject(this.buttonPrimary) ? (this.buttonPrimary as MrdBaseColorTheme).background : this.buttonPrimary as string :\r\n        this.accent ? _.isObject(this.buttonAccent) ? (this.buttonAccent as MrdBaseColorTheme).background : this.buttonAccent as string :\r\n        this.warn ? _.isObject(this.buttonWarn) ? (this.buttonWarn as MrdBaseColorTheme).background : this.buttonWarn as string :\r\n        // Sonst wenn 'customBgColor' gesetzt ist, wird 'customBgColor' verwendet, sonst 'customTextColor'\r\n        !!this.customBgColor ? this.customBgColor : this.customTextColor;\r\n\r\n      // Wenn 'keepCustomTextColor' gesetzt ist, dann wird 'customTextColor' als 'baseTextColor' verwendet\r\n      let baseTextColor = this.keepCustomTextColor && !!this.customTextColor ? this.customTextColor :\r\n        // Sonst wenn ein Theme gesetzt ist, wird die entsprechende Farbe des Themes verwendet\r\n        this.primary ? _.isObject(this.buttonPrimary) ? (this.buttonPrimary as MrdBaseColorTheme).text : this.buttonPrimary as string :\r\n        this.accent ? _.isObject(this.buttonAccent) ? (this.buttonAccent as MrdBaseColorTheme).text : this.buttonAccent as string :\r\n        this.warn ? _.isObject(this.buttonWarn) ? (this.buttonWarn as MrdBaseColorTheme).text : this.buttonWarn as string :\r\n        // Sonst wenn 'customTextColor' gesetzt ist, wird 'customTextColor' verwendet, sonst 'textDarkColor'\r\n        !!this.customTextColor ? this.customTextColor : this.textDarkColor;\r\n\r\n      // 'bgColor' wird auf 'baseColor' gesetzt\r\n      this.bgColor = baseColor;\r\n      // Wenn 'keepCustomTextColor' oder kein Thema und 'customBgColor', und 'customTextColor' gesetzt sind, wird 'textColor' auf 'customTextColor' gesetzt\r\n      this.textColor = (this.keepCustomTextColor || (themesCount === 0 && this.customBgColor)) && !!this.customTextColor ? this.customTextColor :\r\n        // Sonst wenn ein Thema und 'keepCustomBgColor' gesetzt ist, wird 'baseTextColor' verwendet\r\n        (themesCount === 1 && this.keepCustomBgColor) ? baseTextColor :\r\n        // Sonst, wenn die Appearance nicht Toggle ist oder der Toggle-Button selektiert ist,\r\n        // wird anhand der 'baseColor' entschieden, ob 'textDarkColor' oder 'textLightColor' verwendet wird\r\n        this.toggle ? this.toggleSelected && this.customToggleSelectedTextColor ? this.customToggleSelectedTextColor :\r\n          !this.toggleSelected && this.customToggleUnselectedTextColor ? this.customToggleUnselectedTextColor :\r\n        /*!this.toggle ||*/ this.toggleSelected ? ColorUtil.shouldTextBeDark(baseColor) ? this.textDarkColor : this.textLightColor :\r\n        ColorUtil.shouldTextBeDark(this.toggleUnselectedColor) ? this.textDarkColor : this.textLightColor :\r\n        // Wenn die Appearance Toggle ist und der Button nicht selektiert ist und 'customToggleUnselectedTextColor' gesetzt ist,\r\n        // wird diese verwendet\r\n        // this.customToggleUnselectedTextColor ? this.customToggleUnselectedTextColor :\r\n        // Sonst wird anhand von 'toggleUnselectedColor' entschieden, ob 'textDarkColor' oder 'textLightColor' verwendet wird\r\n        ColorUtil.shouldTextBeDark(baseColor) ? this.textDarkColor : this.textLightColor;\r\n        // Sonst wird 'toggleUnselectedTextColor' verwendet\r\n      // 'hoverColor' wird auf 20% transparente Version von 'baseColor' gesetzt\r\n      this.hoverColor = ColorUtil.changeColorOpacity(baseColor, 20);\r\n      // 'activeColor' wird auf 30% transparente Version von 'baseColor' mit 10% hellerer Farbe gesetzt\r\n      this.activeColor = ColorUtil.changeColorOpacity(ColorUtil.changeColorBrightnessPercent(baseColor, 10), 30);\r\n    }\r\n\r\n    // Für den Standard-Style, Outline-Style und Icon-Style\r\n    if (appearanceCount === 0 || this.outline || this.icon) {\r\n      // Wenn ein Thema und 'keepCustomBgColor' nicht gesetz ist ODER\r\n      // keine 'customBgColor', aber 'customTextColor' gesetzt sind...\r\n      if ((themesCount === 1 && !this.keepCustomBgColor) || (!this.customBgColor && this.customTextColor)) {\r\n        // ... wird 'textColor', falls nicht durch 'keepCustomTextColor' und 'customTextColor' fest, auf 'bgColor' gesetzt\r\n        this.textColor = (this.keepCustomTextColor && !!this.customTextColor) ? this.customTextColor : this.bgColor;\r\n        // ... wird 'bgColor', falls nicht durch 'keepCustomBgColor' und 'customBgColor' fest, auf die Standard-Hintergrundfarbe gesetzt\r\n        this.bgColor = (this.keepCustomBgColor && !!this.customBgColor) ? this.customBgColor : this._config.button.backgroundColor;\r\n      }\r\n    }\r\n\r\n    // Falls keine 'progressColor' gesetzt ist...\r\n    if (!this.progressColor) {\r\n      // ... und wir ein Theme oder eine benutzerdefinierte Textfarbe oder Hintergrundfarbe haben...\r\n      if (themesCount === 1 || this.customTextColor || this.customBgColor) {\r\n        // ... wird 'progressColor' für den Standard-Style, Outline-Style und Icon-Style auf 'textColor' gesetzt,\r\n        // ansonsten auf 20% hellere Version von 'bgColor'\r\n        if (appearanceCount === 0 || this.outline || this.icon) {\r\n          this.progressColor = this.textColor;\r\n        } else {\r\n          this.progressColor = ColorUtil.changeColorBrightnessPercent(this.bgColor, 20);\r\n        }\r\n      } else {\r\n        // Ohne Theme und benutzerdefinierte Farben wird 'progressColor' auf die Grund-Progress-Color gesetzt\r\n        this.progressColor = this.buttonProgress;\r\n      }\r\n    }\r\n\r\n    // Falls kein explizieter 'tooltipText' gesetzt ist, wird der Text des Buttons als Tooltip-Text verwendet\r\n    if (this.mrdButtonTextContent && !this.tooltipText) {\r\n      this.tooltipText = this.mrdButtonTextContent.nativeElement.textContent;\r\n    }\r\n\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  /**\r\n   * Setzt die Standard-Styles anhand der Konfiguration und der gesetzten Attribute.\r\n   *\r\n   * @private\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  private initBaseStyle(): void {\r\n    let appearance: MrdButtonAppearance = this.icon ? MrdButtonAppearance.ICON : this.raised ? MrdButtonAppearance.RAISED :\r\n      this.outline ? MrdButtonAppearance.OUTLINE : this.flat ? MrdButtonAppearance.FLAT : this.fab ? MrdButtonAppearance.FAB :\r\n      this.miniFab ? MrdButtonAppearance.MINI_FAB : this.toggle ? MrdButtonAppearance.TOGGLE : null;//MrdButtonAppearance.DEFAULT;\r\n    this.uncollapsedAppearance = this.uncollapsedAppearance !== undefined ? this.uncollapsedAppearance : appearance;\r\n\r\n    this.buttonPrimary = this._config.button[appearance]?.primary || this._config.button.primary || this._config.baseColors.primary;\r\n    this.buttonAccent = this._config.button[appearance]?.accent || this._config.button.accent || this._config.baseColors.accent;\r\n    this.buttonWarn = this._config.button[appearance]?.warn || this._config.button.warn || this._config.baseColors.warn;\r\n    this.buttonDisabled = this._config.button[appearance]?.disabled || this._config.button.disabled\r\n    this.buttonProgress = this._config.button[appearance]?.progressColor || this._config.button?.progressColor ||\r\n      (_.isObject(this.buttonPrimary) ? (this.buttonPrimary as MrdBaseColorTheme).text : this.buttonPrimary as string);\r\n\r\n    this.bgColor = this._config.button[appearance]?.backgroundColor || this._config.button.backgroundColor;\r\n    this.textLightColor = this._config.button[appearance]?.textLightColor || this._config.button.textLightColor;\r\n    this.textDarkColor = this._config.button[appearance]?.textDarkColor || this._config.button.textDarkColor;\r\n    this.textColor = this.textDarkColor;\r\n    this.hoverColor = this._config.button[appearance]?.hoverColor || this._config.button.hoverColor;\r\n    this.activeColor = this._config.button[appearance]?.activeColor || this._config.button.activeColor;\r\n    this.disabledTextColor = this.buttonDisabled.text;\r\n    this.disabledBgColor = this.buttonDisabled.background;\r\n    this.toggleUnselectedColor = this.customToggleUnselectedColor || this._config.button[appearance]?.unselectedBgColor;\r\n\r\n    if (this._config.button[appearance]?.border) {\r\n      if (_.isObject(this._config.button[appearance].border)) {\r\n        this.borderWidth = (this._config.button[appearance].border as MrdBorder).width;\r\n        this.borderStyle = (this._config.button[appearance].border as MrdBorder).style;\r\n        this.borderColor = (this._config.button[appearance].border as MrdBorder).color;\r\n      } else {\r\n        let border =  (this._config.button[appearance].border as string).split(' ')\r\n        this.borderWidth = border[0];\r\n        this.borderStyle = border[1];\r\n        this.borderColor = border[2];\r\n      }\r\n    } else {\r\n      this.borderWidth = _.isObject(this._config.button.border) ? (this._config.button.border as MrdBorder)?.width : (this._config.button.border as string).split(' ')[0];\r\n      this.borderStyle = _.isObject(this._config.button.border) ? (this._config.button.border as MrdBorder)?.style : (this._config.button.border as string).split(' ')[1];\r\n      this.borderColor = _.isObject(this._config.button.border) ? (this._config.button.border as MrdBorder)?.color : (this._config.button.border as string).split(' ')[2];\r\n    }\r\n\r\n    this.minHeight = this.minHeight || this.diameter || this._config.button[appearance]?.minHeight || this._config.button.minHeight;\r\n    this.fontSize = this.fontSize || this._config.button[appearance]?.fontSize || this._config.button.fontSize || this._config.baseFont.size;\r\n    this.fontFamily = this.fontFamily || this._config.button[appearance]?.fontFamily || this._config.button.fontFamily || this._config.baseFont.family;\r\n    this.diameter = this.diameter || this._config.button[appearance]?.diameter || this._config.button.diameter;\r\n    this.iconSize = this.iconSize || this._config.button[appearance]?.iconSize || this._config.button.iconSize;\r\n    this.borderRadius = this.borderRadius || this._config.button[appearance]?.borderRadius || this._config.button.borderRadius;\r\n  }\r\n\r\n  /**\r\n   * Callback, wenn sich der Collabs-Status des Buttons ändert.\r\n   *\r\n   * @param isCollapsed Gibt an, ob der Button kollabiert ist.\r\n   */\r\n  public buttonCollapsed(isCollapsed: boolean): void {\r\n    // Wir reagieren nur, wenn sich der Status ändert\r\n    if (this.isCollapsed !== isCollapsed) {\r\n      this.isCollapsed = isCollapsed;\r\n      // Wenn 'collapseTo' gesetzt ist, wird der Button entsprechend umgestylt\r\n      if (Util.isDefined(this.collapseTo)) {\r\n        // Diese Werte müssen zurückgesetzt werden, da sie für den neuen Style neu gesetzt werden müssen\r\n        this.borderRadius = undefined;\r\n        this.fontSize = undefined;\r\n        this.minHeight = undefined;\r\n        this.diameter = undefined;\r\n        this.iconSize = undefined;\r\n        if (isCollapsed) {\r\n          this.icon = this.collapseTo === MrdButtonAppearance.ICON ? true : false;\r\n          this.raised = false;\r\n          this.outline = false;\r\n          this.flat = false;\r\n          this.fab = this.collapseTo === MrdButtonAppearance.FAB ? true : false;\r\n          this.miniFab = this.collapseTo === MrdButtonAppearance.MINI_FAB ? true : false;\r\n          this.ngAfterViewInit();\r\n        } else {\r\n          this.icon = this.uncollapsedAppearance === MrdButtonAppearance.ICON ? true : false;\r\n          this.raised = this.uncollapsedAppearance === MrdButtonAppearance.RAISED ? true : false;\r\n          this.outline = this.uncollapsedAppearance === MrdButtonAppearance.OUTLINE ? true : false;\r\n          this.flat = this.uncollapsedAppearance === MrdButtonAppearance.FLAT ? true : false;\r\n          this.fab = this.uncollapsedAppearance === MrdButtonAppearance.FAB ? true : false;\r\n          this.miniFab = this.uncollapsedAppearance === MrdButtonAppearance.MINI_FAB ? true : false;\r\n          this.ngAfterViewInit();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public onClick(event: Event): void {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    this.click.emit(event);\r\n  }\r\n}\r\n\r\nenum MrdButtonAppearance {\r\n  // DEFAULT = null,\r\n  ICON = 'icon',\r\n  RAISED = 'raised',\r\n  OUTLINE = 'outline',\r\n  FLAT = 'flat',\r\n  FAB = 'fab',\r\n  MINI_FAB = 'miniFab',\r\n  TOGGLE = 'toggle'\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MrdProgressBarComponent } from './components/mrd-progress-bar/mrd-progress-bar.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MrdProgressBarComponent\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    MrdProgressBarComponent\r\n  ]\r\n})\r\nexport class MrdProgressBarModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MrdProgressSpinnerComponent } from './components/mrd-progress-spinner/mrd-progress-spinner.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MrdProgressSpinnerComponent\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    MrdProgressSpinnerComponent\r\n  ]\r\n})\r\nexport class MrdProgressSpinnerModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MrdTooltipComponent } from './components/mrd-tooltip/mrd-tooltip.component';\r\nimport { ToolTipRendererDirective } from './common/directive/tool-tip-renderer/tool-tip-renderer.directive';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MrdTooltipComponent,\r\n    ToolTipRendererDirective\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    ToolTipRendererDirective\r\n  ]\r\n})\r\nexport class MrdTooltipModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MrdButtonComponent } from './components/mrd-button/mrd-button.component';\r\nimport { MrdProgressBarModule } from '../mrd-progress-bar/mrd-progress-bar.module';\r\nimport { MrdProgressSpinnerModule } from '../mrd-progress-spinner/mrd-progress-spinner.module';\r\nimport { MrdTooltipModule } from '../mrd-tooltip/mrd-tooltip.module';\r\nimport { MrdDirectiveModule } from '../../common/directive/mrd-directive.module';\r\n\r\n/**\r\n * Dieses Modul stellt den Mrd-Button zur Verfügung.\r\n *\r\n * @export MrdButtonComponent\r\n * @class MrdButtonModule\r\n */\r\n@NgModule({\r\n  declarations: [MrdButtonComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MrdProgressBarModule,\r\n    MrdProgressSpinnerModule,\r\n    MrdTooltipModule,\r\n    MrdDirectiveModule\r\n  ],\r\n  exports: [MrdButtonComponent]\r\n})\r\nexport class MrdButtonModule { }\r\n","import { DOCUMENT } from '@angular/common';\r\nimport { Component, ElementRef, ErrorHandler, Inject, inject, InjectionToken, Input } from '@angular/core';\r\nimport { Subscription, take } from 'rxjs';\r\nimport { MrdIconRegistryService } from '../../../common/service/mrd-icon-registry.service';\r\n\r\n\r\n/**\r\n * Injection token used to provide the current location to `MatIcon`.\r\n * Used to handle server-side rendering and to stub out during unit tests.\r\n * @docs-private\r\n */\r\nexport const MRD_ICON_LOCATION = new InjectionToken<MrdIconLocation>('mrd-icon-location', {\r\n  providedIn: 'root',\r\n  factory: MRD_ICON_LOCATION_FACTORY,\r\n});\r\n\r\n/**\r\n * Stubbed out location for `MatIcon`.\r\n * @docs-private\r\n */\r\nexport interface MrdIconLocation {\r\n  getPathname: () => string;\r\n}\r\n\r\n/** @docs-private */\r\nexport function MRD_ICON_LOCATION_FACTORY(): MrdIconLocation {\r\n  const _document = inject(DOCUMENT);\r\n  const _location = _document ? _document.location : null;\r\n\r\n  return {\r\n    // Note that this needs to be a function, rather than a property, because Angular\r\n    // will only resolve it once, but we want the current path on each call.\r\n    getPathname: () => (_location ? _location.pathname + _location.search : ''),\r\n  };\r\n}\r\n\r\n/** SVG attributes that accept a FuncIRI (e.g. `url(<something>)`). */\r\nconst funcIriAttributes = [\r\n  'clip-path',\r\n  'color-profile',\r\n  'src',\r\n  'cursor',\r\n  'fill',\r\n  'filter',\r\n  'marker',\r\n  'marker-start',\r\n  'marker-mid',\r\n  'marker-end',\r\n  'mask',\r\n  'stroke',\r\n];\r\n/** Selector that can be used to find all elements that are using a `FuncIRI`. */\r\nconst funcIriAttributeSelector = funcIriAttributes.map(attr => `[${attr}]`).join(', ');\r\n\r\n/** Regex that can be used to extract the id out of a FuncIRI. */\r\nconst funcIriPattern = /^url\\(['\"]?#(.*?)['\"]?\\)$/;\r\n\r\n\r\n@Component({\r\n  selector: 'mrd-icon',\r\n  templateUrl: './mrd-icon.component.html',\r\n  styleUrls: ['./mrd-icon.component.scss']\r\n})\r\nexport class MrdIconComponent {\r\n\r\n  /** Name of the icon in the SVG icon set. */\r\n  @Input()\r\n  get svgIcon(): string {\r\n    return this._svgIcon;\r\n  }\r\n  set svgIcon(value: string) {\r\n    if (value !== this._svgIcon) {\r\n      if (value) {\r\n        this._updateSvgIcon(value);\r\n      } else if (this._svgIcon) {\r\n        this._clearSvgElement();\r\n      }\r\n      this._svgIcon = value;\r\n    }\r\n  }\r\n  private _svgIcon: string;\r\n\r\n  _svgName: string | null;\r\n  _svgNamespace: string | null;\r\n\r\n  /** Keeps track of the current page path. */\r\n  private _previousPath?: string;\r\n\r\n  /** Keeps track of the elements and attributes that we've prefixed with the current path. */\r\n  private _elementsWithExternalReferences?: Map<Element, {name: string; value: string}[]>;\r\n\r\n  /** Subscription to the current in-progress SVG icon request. */\r\n  private _currentIconFetch = Subscription.EMPTY;\r\n\r\n  constructor(\r\n    private _elementRef: ElementRef<HTMLElement>,\r\n    @Inject(MRD_ICON_LOCATION) private _location: MrdIconLocation,\r\n    private _errorHandler: ErrorHandler,\r\n    private _iconRegistry: MrdIconRegistryService,\r\n  ) {}\r\n\r\n  private _setSvgElement(svg: SVGElement) {\r\n    this._clearSvgElement();\r\n\r\n    // Note: we do this fix here, rather than the icon registry, because the\r\n    // references have to point to the URL at the time that the icon was created.\r\n    const path = this._location.getPathname();\r\n    this._previousPath = path;\r\n    this._cacheChildrenWithExternalReferences(svg);\r\n    this._prependPathToReferences(path);\r\n    this._elementRef.nativeElement.appendChild(svg);\r\n  }\r\n\r\n  private _clearSvgElement() {\r\n    const layoutElement: HTMLElement = this._elementRef.nativeElement;\r\n    let childCount = layoutElement.childNodes.length;\r\n\r\n    if (this._elementsWithExternalReferences) {\r\n      this._elementsWithExternalReferences.clear();\r\n    }\r\n\r\n    // Remove existing non-element child nodes and SVGs, and add the new SVG element. Note that\r\n    // we can't use innerHTML, because IE will throw if the element has a data binding.\r\n    while (childCount--) {\r\n      const child = layoutElement.childNodes[childCount];\r\n\r\n      // 1 corresponds to Node.ELEMENT_NODE. We remove all non-element nodes in order to get rid\r\n      // of any loose text nodes, as well as any SVG elements in order to remove any old icons.\r\n      if (child.nodeType !== 1 || child.nodeName.toLowerCase() === 'svg') {\r\n        child.remove();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Prepends the current path to all elements that have an attribute pointing to a `FuncIRI`\r\n   * reference. This is required because WebKit browsers require references to be prefixed with\r\n   * the current path, if the page has a `base` tag.\r\n   */\r\n  private _prependPathToReferences(path: string) {\r\n    const elements = this._elementsWithExternalReferences;\r\n\r\n    if (elements) {\r\n      elements.forEach((attrs, element) => {\r\n        attrs.forEach(attr => {\r\n          element.setAttribute(attr.name, `url('${path}#${attr.value}')`);\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Caches the children of an SVG element that have `url()`\r\n   * references that we need to prefix with the current path.\r\n   */\r\n  private _cacheChildrenWithExternalReferences(element: SVGElement) {\r\n    const elementsWithFuncIri = element.querySelectorAll(funcIriAttributeSelector);\r\n    const elements = (this._elementsWithExternalReferences =\r\n      this._elementsWithExternalReferences || new Map());\r\n\r\n    for (let i = 0; i < elementsWithFuncIri.length; i++) {\r\n      funcIriAttributes.forEach(attr => {\r\n        const elementWithReference = elementsWithFuncIri[i];\r\n        const value = elementWithReference.getAttribute(attr);\r\n        const match = value ? value.match(funcIriPattern) : null;\r\n\r\n        if (match) {\r\n          let attributes = elements.get(elementWithReference);\r\n\r\n          if (!attributes) {\r\n            attributes = [];\r\n            elements.set(elementWithReference, attributes);\r\n          }\r\n\r\n          attributes!.push({name: attr, value: match[1]});\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /** Sets a new SVG icon with a particular name. */\r\n  private _updateSvgIcon(rawName: string | undefined) {\r\n    this._svgNamespace = null;\r\n    this._svgName = null;\r\n    this._currentIconFetch.unsubscribe();\r\n\r\n    if (rawName) {\r\n      const [namespace, iconName] = this._splitIconName(rawName);\r\n\r\n      if (namespace) {\r\n        this._svgNamespace = namespace;\r\n      }\r\n\r\n      if (iconName) {\r\n        this._svgName = iconName;\r\n      }\r\n\r\n      this._currentIconFetch = this._iconRegistry\r\n        .getNamedSvgIcon(iconName, namespace)\r\n        .pipe(take(1))\r\n        .subscribe(\r\n          svg => this._setSvgElement(svg),\r\n          (err: Error) => {\r\n            const errorMessage = `Error retrieving icon ${namespace}:${iconName}! ${err.message}`;\r\n            this._errorHandler.handleError(new Error(errorMessage));\r\n          },\r\n        );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Splits an svgIcon binding value into its icon set and icon name components.\r\n   * Returns a 2-element array of [(icon set), (icon name)].\r\n   * The separator for the two fields is ':'. If there is no separator, an empty\r\n   * string is returned for the icon set and the entire value is returned for\r\n   * the icon name. If the argument is falsy, returns an array of two empty strings.\r\n   * Throws an error if the name contains two or more ':' separators.\r\n   * Examples:\r\n   *   `'social:cake' -> ['social', 'cake']\r\n   *   'penguin' -> ['', 'penguin']\r\n   *   null -> ['', '']\r\n   *   'a:b:c' -> (throws Error)`\r\n   */\r\n  private _splitIconName(iconName: string): [string, string] {\r\n    if (!iconName) {\r\n      return ['', ''];\r\n    }\r\n    const parts = iconName.split(':');\r\n    switch (parts.length) {\r\n      case 1:\r\n        return ['', parts[0]]; // Use default namespace.\r\n      case 2:\r\n        return <[string, string]>parts;\r\n      default:\r\n        throw Error(`Invalid icon name: \"${iconName}\"`); // TODO: add an ngDevMode check\r\n    }\r\n  }\r\n}\r\n","<ng-content></ng-content>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MrdIconComponent } from './components/mrd-icon.component';\r\n\r\n/**\r\n * Dieses Modul stellt den Mrd-Icon zur Verfügung.\r\n *\r\n * @export MrdIconComponent\r\n * @class MrdIconModule\r\n */\r\n@NgModule({\r\n  declarations: [MrdIconComponent],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [MrdIconComponent]\r\n})\r\nexport class MrdIconModule { }","import { ChangeDetectorRef, Directive, EmbeddedViewRef, Input, TemplateRef, ViewChild, ViewRef, booleanAttribute } from '@angular/core';\r\n\r\n\r\n@Directive({\r\n  selector: '[mrdTab]'\r\n})\r\nexport class MrdTabComponent {\r\n\r\n  @ViewChild(TemplateRef, {static: true}) _implicitContent: TemplateRef<any>;\r\n\r\n  @Input(\"mrdTab\") public set label(value: string) {\r\n    this._label = value;\r\n    this.cdr.detectChanges();\r\n  }\r\n  public get label(): string {\r\n    return this._label;\r\n  }\r\n  private _label: string;\r\n\r\n  private _embeddedViewRef: EmbeddedViewRef<any> | null = null;\r\n\r\n  get content(): ViewRef | null {\r\n    if (!this._embeddedViewRef || this._embeddedViewRef.destroyed) {\r\n      this._embeddedViewRef = this.tr.createEmbeddedView({ $implicit: 'Angular', dateNow: new Date() });\r\n    }\r\n    return this._embeddedViewRef;\r\n  }\r\n\r\n  /**\r\n   * Zero based index of the tab\r\n   *\r\n   * @memberof MrdTabComponent\r\n   */\r\n  public set index(value: number) {\r\n    this._index = value;\r\n    this.cdr.detectChanges();\r\n  }\r\n  public get index(): number {\r\n    return this._index;\r\n  }\r\n  private _index: number;\r\n\r\n  public set active(value: boolean) {\r\n    this._active = value;\r\n    this.cdr.detectChanges();\r\n  }\r\n  public get active(): boolean {\r\n    return this._active;\r\n  }\r\n  private _active: boolean;\r\n\r\n  @Input({alias: 'mrdTabPreserveContent',transform: booleanAttribute}) public preserveContent: boolean = false;\r\n\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef,\r\n    readonly tr: TemplateRef<any>\r\n  ) {}\r\n}\r\n","import { Component, Directive, OnInit, ViewContainerRef, Inject, forwardRef, Input, EventEmitter, ViewRef, booleanAttribute, Output, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Subscription, startWith } from 'rxjs';\r\n\r\n\r\n@Directive({\r\n  selector: '[mrdTabBodyHost]'\r\n})\r\nexport class MatTabBodyPortal implements OnInit {\r\n  /** Subscription to events for when the tab body begins centering. */\r\n  private _centeringSub = Subscription.EMPTY;\r\n  /** Subscription to events for when the tab body finishes leaving from center position. */\r\n  private _leavingSub = Subscription.EMPTY;\r\n\r\n  constructor(\r\n    private viewContainerRef: ViewContainerRef,\r\n    @Inject(forwardRef(() => MrdTabBodyComponent)) private _host: MrdTabBodyComponent,\r\n  ) {}\r\n\r\n  /** Set initial visibility or set up subscription for changing visibility. */\r\n  ngOnInit(): void {\r\n    this._centeringSub = this._host._goingToActive\r\n      .pipe(startWith(this._host.active))\r\n      .subscribe((isCentering: boolean) => {\r\n        if (isCentering && this.viewContainerRef.length === 0) {\r\n          this.viewContainerRef.insert(this._host.content);\r\n        }\r\n      });\r\n\r\n    this._leavingSub = this._host._isHidden.subscribe(() => {\r\n      if (!this._host.preserveContent) {\r\n        this.viewContainerRef.clear();\r\n      }\r\n    });\r\n  }\r\n\r\n  /** Clean up centering subscription. */\r\n  ngOnDestroy(): void {\r\n    this._centeringSub.unsubscribe();\r\n    this._leavingSub.unsubscribe();\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'mrd-tab-body',\r\n  templateUrl: './mrd-tab-body.component.html',\r\n  styleUrls: ['./mrd-tab-body.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MrdTabBodyComponent {\r\n\r\n  @Input('content') public set content(value: ViewRef) {\r\n    this._content = value;\r\n    this.cdr.detectChanges();\r\n  }\r\n  public get content(): ViewRef {\r\n    return this._content;\r\n  }\r\n\r\n  private _content: ViewRef;\r\n\r\n  @Input() public set index(value: number) {\r\n    this._index = value;\r\n    this.cdr.detectChanges();\r\n  }\r\n  public get index(): number {\r\n    return this._index;\r\n  }\r\n  private _index: number;\r\n\r\n  @Input() public set active(value: boolean) {\r\n    this._active = value;\r\n    this.cdr.detectChanges();\r\n  }\r\n  public get active(): boolean {\r\n    return this._active;\r\n  }\r\n  private _active: boolean;\r\n\r\n  @Input({transform: booleanAttribute}) public preserveContent: boolean = false;\r\n\r\n  private hideTimeout: any;\r\n  @Output() _isHidden: EventEmitter<boolean> = new EventEmitter();\r\n  @Output() _goingToActive: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  public set translate(value: number|string) {\r\n    if (value !== 0) {\r\n      clearTimeout(this.hideTimeout);\r\n      this.hideTimeout = setTimeout(() => {\r\n        this.hidden = true;\r\n        this._isHidden.emit(true);\r\n        console.log(this.index, 'hide')\r\n        this.cdr.detectChanges();\r\n      }, 1000);\r\n      this._translate = value+'%';\r\n    } else {\r\n      clearTimeout(this.hideTimeout);\r\n      this.hidden = false;\r\n      this._goingToActive.emit(true);\r\n      setTimeout(() => {\r\n        this._translate = value+'%';\r\n        this.cdr.detectChanges();\r\n      }, 1);\r\n    }\r\n\r\n    this.cdr.detectChanges();\r\n  }\r\n  public get translate(): string {\r\n    return this._translate;\r\n  }\r\n  private _translate: string = '0%';\r\n\r\n  @Input() public set hidden(value: boolean) {\r\n    this._hidden = value;\r\n    this.cdr.detectChanges();\r\n  }\r\n  public get hidden(): boolean {\r\n    return this._hidden;\r\n  }\r\n  private _hidden: boolean = true;\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef\r\n  ) {}\r\n}\r\n","\r\n<div\r\n  class=\"mrd-tab-content\"\r\n  [ngStyle]=\"{'transform': 'translateX('+translate+')', 'display': hidden ? 'none' : 'block'}\">\r\n  <ng-template mrdTabBodyHost></ng-template>\r\n</div>\r\n","<div class=\"mrd-tab-group-tabs-container\" [ngStyle]=\"{'height': headerHeight+'px'}\" *ngIf=\"!noHeader\">\r\n  <div class=\"mrd-tab-group-tab\" #mrdTabHeader *ngFor=\"let tab of tabs\"\r\n    [ngClass]=\"{'tab-active': tab.active, 'tabs-rounded': rounded, 'fit-labels': labelsFit}\" (click)=\"activateTab(tab.index)\">\r\n    {{tab.label}}\r\n    <div class=\"mrd-tab-group-tab-indicator\"></div>\r\n  </div>\r\n  <div class=\"mrd-tab-underline\" [style.left.px]=\"tabUnderlineLeft\" [style.width.px]=\"tabUnderlineWidth\"></div>\r\n</div>\r\n<div class=\"mrd-tab-group-content-container\">\r\n  <!-- <ng-content></ng-content> -->\r\n  <ng-container *ngFor=\"let tab of tabs\">\r\n    <mrd-tab-body\r\n      [content]=\"tab.content\"\r\n      [active]=\"tab.active\"\r\n      [index]=\"tab.index\"\r\n      [preserveContent]=\"tab.preserveContent\"\r\n    >\r\n\r\n    </mrd-tab-body>\r\n  </ng-container>\r\n</div>\r\n","import { BaseObject, ObservableValue, SubscriptionHandler, Util } from 'mrd-core';\r\nimport { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChildren, ElementRef, EventEmitter, Input, Output, QueryList, ViewChildren, booleanAttribute } from '@angular/core';\r\nimport { MrdTabComponent } from '../mrd-tab/mrd-tab.component';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MrdTabBodyComponent } from '../mrd-tab-body/mrd-tab-body.component';\r\n\r\n@Component({\r\n  selector: 'mrd-tab-group',\r\n  templateUrl: './mrd-tab-group.component.html',\r\n  styleUrls: ['./mrd-tab-group.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MrdTabGroupComponent extends BaseObject implements AfterViewInit {\r\n\r\n  @ContentChildren(MrdTabComponent) tabs: QueryList<MrdTabComponent>;\r\n  @ViewChildren(MrdTabBodyComponent) tabBodys: QueryList<MrdTabBodyComponent>;\r\n  @ViewChildren('mrdTabHeader') tabHeader: QueryList<ElementRef>;\r\n\r\n  @Input({transform: booleanAttribute}) public rounded: boolean = false;\r\n  @Input({transform: booleanAttribute}) public labelsFit: boolean = false;\r\n  @Input({transform: booleanAttribute}) public noHeader: boolean = false\r\n\r\n  @Input() public queryParameterActive: string;\r\n\r\n  @Input() public set headerHeight(value: number) {\r\n    this._headerHeight = value;\r\n    this.cdr.detectChanges();\r\n  }\r\n  public get headerHeight(): number {\r\n    return this._headerHeight;\r\n  }\r\n  private _headerHeight: number;\r\n\r\n  @Input() public set selectedIndex(value: number) {\r\n    this._selectedIndex = value;\r\n    this.activateTab(value);\r\n  }\r\n\r\n  public get selectedIndex(): number {\r\n    return this._selectedIndex;\r\n  }\r\n  private _selectedIndex: number;\r\n\r\n\r\n  @Input() public changeTab: ObservableValue<number>;\r\n\r\n  @Output() public selectedTabChanged: EventEmitter<MrdTabComponent> = new EventEmitter();\r\n  @Output() public selectedTabIndexChanged: EventEmitter<number> = new EventEmitter();\r\n\r\n  public tabUnderlineLeft: number = 0;\r\n  public tabUnderlineWidth: number = 0;\r\n\r\n  private activeIndex: number;\r\n  private activeTab: MrdTabComponent;\r\n  private activeTabBody: MrdTabBodyComponent;\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.tabs.forEach((tab: MrdTabComponent, index: number) => {\r\n      tab.index = index;\r\n    });\r\n\r\n    if (Util.isDefined(this.changeTab)) {\r\n      this.watch(this.changeTab.changed, new SubscriptionHandler((index: number) => {\r\n        this.activateTab(index);\r\n      }));\r\n      if (Util.isDefined(this.changeTab.value)) {\r\n        this.activateTab(this.changeTab.value);\r\n      }\r\n    }\r\n\r\n    if (Util.isDefined(this.selectedIndex) && this.selectedIndex !== this.activeIndex) {\r\n      this.activateTab(this.selectedIndex);\r\n    }\r\n\r\n    if (this.queryParameterActive) {\r\n      this.route.queryParams.subscribe((params) => {\r\n        if (Util.isDefined(params[this.queryParameterActive])) {\r\n          let index = parseInt(params[this.queryParameterActive]);\r\n          if (index >= 0 && index < this.tabs.length) {\r\n            this.activateTab(index);\r\n          }\r\n        } else {\r\n          this.activateTab(0);\r\n        }\r\n      });\r\n    } else if (!Util.isDefined(this.activeIndex)) {\r\n      this.activateTab(0);\r\n    }\r\n\r\n    \r\n  }\r\n\r\n  public activateTab(index: number): void {\r\n    if (Util.isDefined(this.activeIndex) && Util.isDefined(this.activeTab)) {\r\n      if (index === this.activeIndex) {\r\n        return;\r\n      }\r\n      if (index > this.activeIndex) {\r\n        this.activeTabBody.translate = -100;\r\n        this.activeTab.active = false;\r\n      }\r\n      if (index < this.activeIndex) {\r\n        this.activeTabBody.translate = 100;\r\n        this.activeTab.active = false;\r\n      }\r\n    }\r\n\r\n    if (Util.isDefined(this.tabBodys)) {\r\n      this.tabBodys.forEach((tab: MrdTabBodyComponent, i: number) => {\r\n        if (i < index) {\r\n          tab.translate = -100;\r\n        }\r\n        if (i > index) {\r\n          tab.translate = 100;\r\n        }\r\n      });\r\n\r\n      let tabBody = this.tabBodys.get(index);\r\n      let tab = this.tabs.get(index);\r\n\r\n      // Frag mich nicht wieso, aber wenn die Tabs nicht über die Standard-Header, sondern über\r\n      // selectedIndex oder changeTab gesetzt werden, dann ist der Content des TabBodys manchmal destroyed.\r\n      // Deshalb setzen wir ihn hier wieder auf den Content des Tabs, der immer funktioniert.\r\n      if (tabBody.content.destroyed) {\r\n        tabBody.content = tab.content;\r\n      }\r\n\r\n      tab.active = true;\r\n      tabBody.translate = 0;\r\n      this.activeIndex = index;\r\n      this.activeTabBody = tabBody;\r\n      this.activeTab = tab;\r\n\r\n      if (this.queryParameterActive) {\r\n        this.router.navigate([], {\r\n          queryParams: {\r\n            [this.queryParameterActive]: index\r\n          },\r\n          queryParamsHandling: 'merge'\r\n        });\r\n      }\r\n\r\n      if (!this.noHeader) {\r\n        let header = this.tabHeader.get(index);\r\n        this.tabUnderlineLeft = header.nativeElement.offsetLeft;\r\n        this.tabUnderlineWidth = header.nativeElement.offsetWidth;\r\n      }\r\n\r\n      this.selectedTabChanged.emit(tab);\r\n      this.selectedTabIndexChanged.emit(index);\r\n    }\r\n    this.cdr.detectChanges();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MrdTabGroupComponent } from './components/mrd-tab-group/mrd-tab-group.component';\r\nimport { MrdTabComponent } from './components/mrd-tab/mrd-tab.component';\r\nimport { MatTabBodyPortal, MrdTabBodyComponent } from './components/mrd-tab-body/mrd-tab-body.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MrdTabGroupComponent,\r\n    MrdTabComponent,\r\n    MrdTabBodyComponent,\r\n    MatTabBodyPortal\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    MrdTabGroupComponent,\r\n    MrdTabComponent\r\n  ]\r\n})\r\nexport class MrdTabsModule { }\r\n","import { booleanAttribute, Component, Input, numberAttribute } from '@angular/core';\r\nimport { colorAttribute } from './../../../../common/transforms/color-transform';\r\nimport { sizeAttribute } from './../../../../common/transforms/size-transform';\r\nimport { timeAttribute } from './../../../../common/transforms/time-transform';\r\nimport { ConfigUtil } from './../../../../common/util/config.util';\r\n\r\n/**\r\n * Komponente für die Darstellung von Geo-Icons (Schlagzeichnungen).\r\n *\r\n * @class MrdGeoIconComponent\r\n * @implements {AfterViewInit}\r\n */\r\n@Component({\r\n  selector: 'mrd-geo-icon',\r\n  templateUrl: './mrd-geo-icon.component.html',\r\n  styleUrls: ['./mrd-geo-icon.component.scss']\r\n})\r\nexport class MrdGeoIconComponent {\r\n\r\n  private static _config = ConfigUtil.getConfig().geoIcon;\r\n\r\n  /**\r\n   * Breite des Icons.\r\n   *\r\n   * Wird eine Zahl übergeben, wird diese als Pixelwert interpretiert.\r\n   *\r\n   * @type {string | number}\r\n   * @memberof MrdGeoIconComponent\r\n   */\r\n  @Input({transform: (value: any) => sizeAttribute(value, MrdGeoIconComponent._config.width)})\r\n  public width: string = MrdGeoIconComponent._config.width;\r\n\r\n  /**\r\n   * Höhe des Icons.\r\n   *\r\n   * Wird eine Zahl übergeben, wird diese als Pixelwert interpretiert.\r\n   *\r\n   * @type {string | number}\r\n   * @memberof MrdGeoIconComponent\r\n   */\r\n  @Input({transform: (value: any) => sizeAttribute(value, MrdGeoIconComponent._config.height)})\r\n  public height: string = MrdGeoIconComponent._config.height;\r\n\r\n  /**\r\n   * Margin um das Icon.\r\n   *\r\n   * Wird eine Zahl übergeben, wird diese als Pixelwert interpretiert.\r\n   *\r\n   * @type {string | number}\r\n   * @memberof MrdGeoIconComponent\r\n   */\r\n  @Input({transform: (value: any) => sizeAttribute(value, MrdGeoIconComponent._config.margin)})\r\n  public margin: string = MrdGeoIconComponent._config.margin;\r\n\r\n  /**\r\n   * Übergangszeit für Farbwechsel (Selektiert <-> nicht selektiert).\r\n   *\r\n   * Wird eine Zahl übergeben, wird diese als Sekundenwert interpretiert.\r\n   *\r\n   * @type {string | number}\r\n   * @memberof MrdGeoIconComponent\r\n   */\r\n  @Input({transform: (value: any) => timeAttribute(value, MrdGeoIconComponent._config.transitionTime)})\r\n  public transitionTime: string = MrdGeoIconComponent._config.transitionTime;\r\n\r\n  /**\r\n   * Hauptfarbe des Icons.\r\n   *\r\n   * Es können Hex-, RGB- oder RGBA-Werte übergeben werden.\r\n   *\r\n   * @type {string}\r\n   * @memberof MrdGeoIconComponent\r\n   */\r\n  @Input({transform: (value: string) => colorAttribute(value, MrdGeoIconComponent._config.mainColor)})\r\n  public mainColor: string = MrdGeoIconComponent._config.mainColor;\r\n\r\n  /**\r\n   * Hauptfarbe des Icons, wenn es selektiert ist.\r\n   *\r\n   * Es können Hex-, RGB- oder RGBA-Werte übergeben werden.\r\n   *\r\n   * @type {string}\r\n   * @memberof MrdGeoIconComponent\r\n   */\r\n  @Input({transform: (value: string) => colorAttribute(value, MrdGeoIconComponent._config.mainSelectedColor)})\r\n  public mainSelectedColor: string = MrdGeoIconComponent._config.mainSelectedColor;\r\n\r\n  /**\r\n   * Deckkraft der Hauptfarbe des Icons.\r\n   *\r\n   * Werte zwischen 0 und 1 sind möglich.\r\n   *\r\n   * @type {number}\r\n   * @memberof MrdGeoIconComponent\r\n   */\r\n  @Input({transform: (value: any) => numberAttribute(value, MrdGeoIconComponent._config.mainOpacity)})\r\n  public mainOpacity: number = MrdGeoIconComponent._config.mainOpacity;\r\n\r\n  /**\r\n   * Deckkraft der Hauptfarbe des Icons, wenn es selektiert ist.\r\n   *\r\n   * Werte zwischen 0 und 1 sind möglich.\r\n   *\r\n   * @type {number}\r\n   * @memberof MrdGeoIconComponent\r\n   */\r\n  @Input({transform: (value: any) => numberAttribute(value, MrdGeoIconComponent._config.mainSelectedOpacity)})\r\n  public mainSelectedOpacity: number = MrdGeoIconComponent._config.mainSelectedOpacity;\r\n\r\n  /**\r\n   * Farbe der 2. Ebene des Icons.\r\n   *\r\n   * Es können Hex-, RGB- oder RGBA-Werte übergeben werden.\r\n   *\r\n   * @type {string}\r\n   * @memberof MrdGeoIconComponent\r\n   */\r\n  @Input({transform: (value: string) => colorAttribute(value, MrdGeoIconComponent._config.overlayColor)})\r\n  public overlayColor: string = MrdGeoIconComponent._config.overlayColor;\r\n\r\n  /**\r\n   * Farbe der 2. Ebene des Icons, wenn es selektiert ist.\r\n   *\r\n   * Es können Hex-, RGB- oder RGBA-Werte übergeben werden.\r\n   *\r\n   * @type {string}\r\n   * @memberof MrdGeoIconComponent\r\n   */\r\n  @Input({transform: (value: string) => colorAttribute(value, MrdGeoIconComponent._config.overlaySelectedColor)})\r\n  public overlaySelectedColor: string = MrdGeoIconComponent._config.overlaySelectedColor;\r\n\r\n  /**\r\n   * Deckkraft der 2. Ebene des Icons.\r\n   *\r\n   * Werte zwischen 0 und 1 sind möglich.\r\n   *\r\n   * @type {number}\r\n   * @memberof MrdGeoIconComponent\r\n   */\r\n  @Input({transform: (value: any) => numberAttribute(value, MrdGeoIconComponent._config.overlayOpacity)})\r\n  public overlayOpacity: number = MrdGeoIconComponent._config.overlayOpacity;\r\n\r\n  /**\r\n   * Deckkraft der 2. Ebene des Icons, wenn es selektiert ist.\r\n   *\r\n   * Werte zwischen 0 und 1 sind möglich.\r\n   *\r\n   * @type {number}\r\n   * @memberof MrdGeoIconComponent\r\n   */\r\n  @Input({transform: (value: any) => numberAttribute(value, MrdGeoIconComponent._config.overlaySelectedOpacity)})\r\n  public overlaySelectedOpacity: number = MrdGeoIconComponent._config.overlaySelectedOpacity;\r\n\r\n  /**\r\n   * Hintergrundfarbe des Icons, wenn es eine zweite Ebene gibt.\r\n   *\r\n   * Es können Hex-, RGB- oder RGBA-Werte übergeben werden.\r\n   *\r\n   * @type {string}\r\n   * @memberof MrdGeoIconComponent\r\n   */\r\n  @Input({transform: (value: string) => colorAttribute(value, MrdGeoIconComponent._config.backColor)})\r\n  public backColor: string = MrdGeoIconComponent._config.backColor;\r\n\r\n  /**\r\n   * Hintergrundfarbe des Icons, wenn es eine zweite Ebene gibt und diese selektiert ist.\r\n   *\r\n   * Es können Hex-, RGB- oder RGBA-Werte übergeben werden.\r\n   *\r\n   * @type {string}\r\n   * @memberof MrdGeoIconComponent\r\n   */\r\n  @Input({transform: (value: string) => colorAttribute(value, MrdGeoIconComponent._config.backSelectedColor)})\r\n  public backSelectedColor: string = MrdGeoIconComponent._config.backSelectedColor;\r\n\r\n  /**\r\n   * Deckkraft des Hintergrunds des Icons.\r\n   *\r\n   * Werte zwischen 0 und 1 sind möglich.\r\n   *\r\n   * @type {number}\r\n   * @memberof MrdGeoIconComponent\r\n   */\r\n  @Input({transform: (value: any) => numberAttribute(value, MrdGeoIconComponent._config.backOpacity)})\r\n  public backOpacity: number = MrdGeoIconComponent._config.backOpacity;\r\n\r\n  /**\r\n   * Deckkraft des Hintergrunds des Icons, wenn es selektiert ist.\r\n   *\r\n   * Werte zwischen 0 und 1 sind möglich.\r\n   *\r\n   * @type {number}\r\n   * @memberof MrdGeoIconComponent\r\n   */\r\n  @Input({transform: (value: any) => numberAttribute(value, MrdGeoIconComponent._config.backSelectedOpacity)})\r\n  public backSelectedOpacity: number = MrdGeoIconComponent._config.backSelectedOpacity;\r\n\r\n  /**\r\n   * Gibt an, ob das Icon selektiert ist.\r\n   *\r\n   * @type {boolean}\r\n   * @memberof MrdGeoIconComponent\r\n   */\r\n  @Input({transform: booleanAttribute}) public isSelected: boolean = false;\r\n\r\n  /**\r\n   * Daten für die Basis des Icons.\r\n   *\r\n   * @type {any[]}\r\n   * @memberof MrdGeoIconComponent\r\n   */\r\n  @Input() public set baseData(value: any[]){\r\n    this._baseData = value;\r\n    let path = this.getPathString(value);\r\n    this.base = path.ps;\r\n    this.viewBox = path.vbs;\r\n  }\r\n\r\n  public get baseData(): any[]{\r\n    return this._baseData;\r\n  }\r\n\r\n  private _baseData: any[];\r\n\r\n  /**\r\n   * Daten für die 2. Ebene des Icons.\r\n   *\r\n   * @type {any[]}\r\n   * @memberof MrdGeoIconComponent\r\n   */\r\n  @Input() public set overlayData(value: any[]){\r\n    this._baseData = value;\r\n    let p = this.getPathString(value);\r\n    this.overlay = p.ps;\r\n\r\n    if(!value) {\r\n      this.hasOverlay = false;\r\n    } else {\r\n      this.hasOverlay = true;\r\n    }\r\n  }\r\n\r\n  public get overlayData():any[]{\r\n    return this._baseData;\r\n  }\r\n\r\n  /**\r\n   * Gibt an, ob das Icon eine 2. Ebene hat.\r\n   *\r\n   * @type {boolean}\r\n   * @memberof MrdGeoIconComponent\r\n   */\r\n  public hasOverlay:boolean;\r\n  /**\r\n   * Beinhaltet die Daten der ersten Ebene des Icons.\r\n   *\r\n   * @type {string}\r\n   * @memberof MrdGeoIconComponent\r\n   */\r\n  public base: string;\r\n  /**\r\n   * Beinhaltet die Daten der zweiten Ebene des Icons.\r\n   *\r\n   * @type {string}\r\n   * @memberof MrdGeoIconComponent\r\n   */\r\n  public overlay: string;\r\n  public viewBox: string;\r\n\r\n  private getPathString(d): any{\r\n    if(!d) {\r\n      return {ps:\"\", vb: [0,0,0,0], vbs: \"0 0 1 1\"};\r\n    }\r\n\r\n    // Wenn der zweite Level ein Array ist Handelt es sich um daten mit inselflaechen.\r\n    // Dann wird die erste Flaeche verwendet ohne inseln\r\n    if(Array.isArray(d) && Array.isArray(d[0]) && Array.isArray(d[0][0])) {\r\n       d = d[0];\r\n    }\r\n\r\n    var vb = [0,0,0,0];\r\n\r\n    var ps;\r\n    for(let i = 0;i < d.length; i++) {\r\n\r\n      if(!ps) {\r\n        ps = \"M\";\r\n      } else {\r\n        ps+= \"L\";\r\n      }\r\n\r\n      let dd2 = this.mercEncode(d[i][1],d[i][0],100,100);\r\n      let d1 = dd2[0] * 30000;\r\n      let d2 = dd2[1] * 30000;\r\n\r\n\r\n      if (vb[0] == 0 || vb[0]>d1) {\r\n        vb[0] = d1;\r\n      }\r\n\r\n      if (vb[1] == 0 || vb[1]>d2) {\r\n        vb[1] = d2;\r\n      }\r\n\r\n      if (vb[2] == 0 || vb[2]<d1) {\r\n        vb[2] = d1;\r\n      }\r\n\r\n      if (vb[3] == 0 || vb[3]<d2) {\r\n        vb[3] = d2;\r\n      }\r\n\r\n      ps += d1 +\" \" + d2;\r\n    }\r\n\r\n\r\n    ps += \"z\";\r\n    return {ps:ps, vb:vb, vbs: vb[0] + \" \" + vb[1] + \" \" + (vb[2]-vb[0]) + \" \" +(vb[3]-vb[1])  };\r\n  }\r\n\r\n  mercEncode(lat, lng, w, h){\r\n    // get x\r\n    var x = (lng + 180) * (w / 360);\r\n    // convert from degrees to radians\r\n    var latRad = lat * Math.PI / 180;\r\n    // get y value\r\n    var mercN = Math.log(Math.tan((Math.PI / 4) + (latRad / 2)));\r\n    var y = (h / 2) - (w * mercN / (2 * Math.PI));\r\n    return [x,y];\r\n  }\r\n}\r\n","<svg class=\"geoicon\" [attr.viewBox]=\"viewBox\"\r\n  [style.--width]=\"width\"\r\n  [style.--height]=\"height\"\r\n  [style.--margin]=\"margin\"\r\n  [style.--transitionTime]=\"transitionTime\"\r\n  [style.--mainColor]=\"mainColor\"\r\n  [style.--mainSelectedColor]=\"mainSelectedColor\"\r\n  [style.--backColor]=\"backColor\"\r\n  [style.--backSelectedColor]=\"backSelectedColor\"\r\n  [style.--overColor]=\"overlayColor\"\r\n  [style.--overSelectedColor]=\"overlaySelectedColor\"\r\n  [style.--mainOpacity]=\"mainOpacity\"\r\n  [style.--mainSelectedOpacity]=\"mainSelectedOpacity\"\r\n  [style.--backOpacity]=\"backOpacity\"\r\n  [style.--backSelectedOpacity]=\"backSelectedOpacity\"\r\n  [style.--overOpacity]=\"overlayOpacity\"\r\n  [style.--overSelectedOpacity]=\"overlaySelectedOpacity\"\r\n  >\r\n  <g>\r\n    <path [attr.d]=\"base\" [ngClass]=\"{'selected': isSelected, 'main': !hasOverlay, 'back':hasOverlay}\" ></path>\r\n    <path [attr.d]=\"overlay\" [ngClass]=\"{'selected': isSelected, 'over': hasOverlay}\"></path>\r\n  </g>\r\n</svg>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MrdGeoIconComponent } from './components/mrd-geo-icon/mrd-geo-icon.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MrdGeoIconComponent\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    MrdGeoIconComponent\r\n  ]\r\n})\r\nexport class MrdGeoIconModule { }\r\n","import { Overlay } from '@angular/cdk/overlay';\r\nimport { ComponentPortal, ComponentType } from '@angular/cdk/portal';\r\nimport { ComponentRef, Injectable, Injector } from '@angular/core';\r\nimport { Util } from 'mrd-core';\r\nimport { MrdFlyOutComponent } from '../../components/mrd-fly-out/mrd-fly-out.component';\r\nimport { MrdFlyOutComponentRef } from '../model/mrd-fly-out-component-ref';\r\nimport { MrdFlyOutConfig } from '../model/mrd-fly-out-config';\r\n\r\n/**\r\n * Der Service, um FlyOuts zu öffnen und zu schließen.\r\n *\r\n * @export\r\n * @class FlyOutService\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FlyOutService {\r\n\r\n  /**\r\n   * Die Map, die die offenen FlyOuts beinhaltet.\r\n   *\r\n   * @private\r\n   * @type {Map<string, MrdFlyOutComponentRef>}\r\n   * @memberof FlyOutService\r\n   */\r\n  private overlayMap: Map<string, MrdFlyOutComponentRef> = new Map<string, MrdFlyOutComponentRef>();\r\n\r\n  constructor(\r\n    private overlay: Overlay,\r\n    private injector: Injector\r\n  ) { }\r\n\r\n  /**\r\n   * Öffnet ein FlyOut mit der übergebenen Komponente und optionalen Konfiguration.\r\n   *\r\n   * @param {ComponentType<any>} component\r\n   * @param {MrdFlyOutConfig} [config] (optional)\r\n   * @return {MrdFlyOutComponentRef}\r\n   * @memberof FlyOutService\r\n   */\r\n  public open(component: ComponentType<any>, config?: MrdFlyOutConfig): MrdFlyOutComponentRef {\r\n    // Wir erzeugen ein neues Overlay\r\n    let overlayRef = this.overlay.create();\r\n    // Wir fügen die MrdFlyOutComponent in das Overlay ein\r\n    let componentRef = overlayRef.attach(new ComponentPortal(MrdFlyOutComponent));\r\n    // Wir setzen die ID des Overlays\r\n    componentRef.instance.overlayId = Util.guid();\r\n\r\n    // Wir setzen die Konfiguration\r\n    componentRef.instance.config = config;\r\n\r\n    // Wir erzeugen einen neuen Injector, um die Daten und die Referenz auf die MrdFlyOutComponent, an die eingebettete Komponente zu übergeben\r\n    let contentInjector = Injector.create({\r\n      providers: [{provide: FlyOutData, useValue: config?.data}, {provide: ComponentRef<MrdFlyOutComponent>, useValue: componentRef}],\r\n      parent: this.injector\r\n    });\r\n    // Wir fügen die eingebettete Komponente in das FlyOut ein\r\n    let contentRef = componentRef.instance.content.createComponent(component, {injector: contentInjector});\r\n\r\n    // Wir erzeugen unser Referenz-Objekt...\r\n    let mrdFlyComponentRef: MrdFlyOutComponentRef = {\r\n      identifier: componentRef.instance.overlayId,\r\n      overlayRef: overlayRef,\r\n      componentRef: componentRef,\r\n      contentRef: contentRef,\r\n      afterOpened: componentRef.instance.afterOpened,\r\n      onClose: componentRef.instance.onClose,\r\n      afterClosed: componentRef.instance.afterClosed\r\n    };\r\n    // ... und fügen es der Map hinzu\r\n    this.overlayMap.set(componentRef.instance.overlayId, mrdFlyComponentRef);\r\n\r\n    // Wir geben die Referenz zurück\r\n    return mrdFlyComponentRef;\r\n  }\r\n\r\n  /**\r\n   * Schließt das FlyOut mit der übergebenen ID.\r\n   *\r\n   * @param {string} id\r\n   * @memberof FlyOutService\r\n   */\r\n  public close(id: string): void {\r\n    // Wir holen die Referenz aus der Map\r\n    let mrdComponentRef = this.overlayMap.get(id);\r\n    // Wir zerstören das FlyOut und das Overlay\r\n    mrdComponentRef.overlayRef.detach();\r\n    mrdComponentRef.overlayRef.dispose();\r\n    this.overlayMap.delete(id);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Der Service, um Daten an ein FlyOut zu übergeben.\r\n *\r\n * @class FlyOutData\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FlyOutData {\r\n  data = {};\r\n}\r\n","<!-- Der Hintergrund des FlyOuts -->\r\n<div class=\"backdrop\" [ngClass]=\"{'open': stateToggle.value}\" (click)=\"backdropClicked()\"\r\n  [style.--bd-color]=\"backdropColor\"\r\n  [style.--bd-transition-time]=\"transitionTime\"\r\n  ></div>\r\n<!-- Die äußerste Komponente des FlyOuts, das den Container zentriert -->\r\n<div class=\"mrd-fly-out\"\r\n  [style.--fo-width]=\"width\"\r\n  [style.--fo-max-width]=\"maxWidth\"\r\n  [style.--fo-height]=\"height\"\r\n  [style.--fo-max-height]=\"maxHeight\"\r\n  [style.--fo-bg-color]=\"backgroundColor\"\r\n  [style.--fo-padding]=\"padding\"\r\n  [style.--fo-border-radius]=\"borderRadius\"\r\n  [style.--fo-transition-time]=\"transitionTime\"\r\n  >\r\n  <!-- Der Container, der das Grundlayout des FlyOuts bereitstellt -->\r\n  <div class=\"mrd-fly-out__container\" [ngClass]=\"{'open': stateToggle.value,\r\n    'topDown': topDown, 'bottomUp': bottomUp, 'leftRight': leftRight, 'rightLeft': rightLeft}\">\r\n    <!-- Der Inhalt des FlyOuts -->\r\n    <div class=\"mrd-fly-out__content\">\r\n      <!-- Der Standard Schließen-Button des FlyOuts -->\r\n      <mrd-button icon-button iconSize=\"2em\" (click)=\"close()\" class=\"mrd-fly-out__close\" *ngIf=\"!hideDefaultCloseButton\">\r\n        <svg mrd-icon width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M43.1253 20.1956C42.3728 16.4129 40.5155 12.9384 37.7883 10.2113C34.1313 6.55443 29.1715 4.5 24 4.5C18.8285 4.5 13.8687 6.55443 10.2117 10.2113C7.48449 12.9384 5.62722 16.4129 4.87475 20.1956C4.12228 23.9782 4.5084 27.899 5.98429 31.4622C7.46017 35.0253 9.95953 38.0709 13.1663 40.2136C16.3731 42.3563 20.1432 43.5 24 43.5C27.8568 43.5 31.6269 42.3563 34.8337 40.2136C38.0405 38.0709 40.5398 35.0253 42.0157 31.4622C43.4916 27.899 43.8777 23.9782 43.1253 20.1956ZM47.5388 19.3176C46.6127 14.6621 44.3268 10.3857 40.9702 7.02923C36.4694 2.52855 30.365 0 24 0C17.635 0 11.5306 2.52855 7.02976 7.02923C3.67321 10.3857 1.38735 14.6621 0.461228 19.3176C-0.464888 23.9732 0.0103406 28.7987 1.82682 33.1842C3.64329 37.5697 6.71943 41.318 10.6662 43.9552C14.613 46.5924 19.2532 48 24 48C28.7468 48 33.387 46.5924 37.3338 43.9552C41.2806 41.318 44.3567 37.5697 46.1732 33.1842C47.9897 28.7987 48.4649 23.9732 47.5388 19.3176Z\" fill=\"#949EA7\"/>\r\n          <path d=\"M27.9366 30.9242L23.9998 26.9867L20.0631 30.9242C19.867 31.1204 19.6341 31.276 19.3777 31.3821C19.1213 31.4881 18.8465 31.5425 18.5691 31.5422C18.2918 31.5424 18.0171 31.488 17.7609 31.3819C17.5047 31.2759 17.2719 31.1203 17.0758 30.9242C16.6798 30.528 16.4573 29.9907 16.4573 29.4305C16.4573 28.8704 16.6798 28.3331 17.0758 27.9369L21.0126 24.0002L17.0758 20.0634C16.8797 19.8673 16.724 19.6344 16.6179 19.3782C16.5117 19.1219 16.457 18.8472 16.457 18.5698C16.457 18.2924 16.5117 18.0177 16.6179 17.7614C16.724 17.5051 16.8797 17.2723 17.0758 17.0762C17.4719 16.6802 18.009 16.4577 18.5691 16.4577C19.1291 16.4577 19.6663 16.6802 20.0623 17.0762L23.9991 21.0129L27.9358 17.0762C28.3319 16.6802 28.869 16.4577 29.4291 16.4577C29.9891 16.4577 30.5263 16.6802 30.9223 17.0762C31.1185 17.2723 31.2741 17.5051 31.3803 17.7614C31.4865 18.0177 31.5411 18.2924 31.5411 18.5698C31.5411 18.8472 31.4865 19.1219 31.3803 19.3782C31.2741 19.6344 31.1185 19.8673 30.9223 20.0634L26.9856 24.0002L30.9223 27.9369C31.3184 28.3331 31.5408 28.8704 31.5408 29.4305C31.5408 29.9907 31.3184 30.528 30.9223 30.9242C30.7264 31.1204 30.4936 31.276 30.2373 31.3821C29.9811 31.4882 29.7064 31.5425 29.4291 31.5422C29.1519 31.5425 28.8773 31.4881 28.6212 31.382C28.3651 31.276 28.1324 31.1204 27.9366 30.9242Z\" fill=\"#949EA7\"/>\r\n        </svg>\r\n      </mrd-button>\r\n      <!-- Der Inhalt des FlyOuts (die eingebettete Komponente wird hier reingealden) -->\r\n      <div #content></div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n","import { FlyOutService } from './../../common/service/fly-out.service';\r\nimport { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { BaseObject, ObservableValue } from 'mrd-core';\r\nimport { MrdFlyOutConfig } from '../../common/model/mrd-fly-out-config';\r\n\r\n/**\r\n * Diese Komponente stellt ein FlyOut dar, das von oben nach unten, von unten nach oben, von links nach rechts oder von rechts nach links einfliegt.\r\n *\r\n * @export\r\n * @class MrdFlyOutComponent\r\n * @extends {BaseObject}\r\n * @implements {AfterViewInit}\r\n */\r\n@Component({\r\n  selector: 'mrd-fly-out',\r\n  templateUrl: './mrd-fly-out.component.html',\r\n  styleUrls: ['./mrd-fly-out.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MrdFlyOutComponent extends BaseObject implements AfterViewInit {\r\n\r\n  /**\r\n   * Die Referenz auf das Content-Element, in das die eingebettete Komponente geladen wird.\r\n   *\r\n   * @type {ViewContainerRef}\r\n   * @memberof MrdFlyOutComponent\r\n   */\r\n  @ViewChild('content', {read: ViewContainerRef, static: true}) public content: ViewContainerRef;\r\n\r\n  /**\r\n   * Setzt die Konfiguration des FlyOuts.\r\n   *\r\n   * @memberof MrdFlyOutComponent\r\n   */\r\n  public set config(value: MrdFlyOutConfig) {\r\n    if (value) {\r\n      this.flyInFrom = value.flyInFrom;\r\n      this.disableClose = value.disableCloseOnBackdrop ?? this.disableClose;\r\n      this.backdropColor = value.backdropColor ?? this.backdropColor;\r\n      this.hideDefaultCloseButton = value.hideDefaultCloseButton ?? this.hideDefaultCloseButton;\r\n      this.width = value.width ?? this.width;\r\n      this.maxWidth = value.maxWidth ?? this.maxWidth;\r\n      this.height = value.height ?? this.height;\r\n      this.maxHeight = value.maxHeight ?? this.maxHeight;\r\n      this.padding = value.padding ?? this.padding;\r\n      this.borderRadius = value.borderRadius ?? this.borderRadius;\r\n      this.backgroundColor = value.backgroundColor ?? this.backgroundColor;\r\n      this.transitionTime = value.transitionTime ?? this.transitionTime;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Setzt die Richtung, aus der das FlyOut einfliegt.\r\n   * Default: 'bottom'\r\n   *\r\n   * @memberof MrdFlyOutComponent\r\n   */\r\n  public set flyInFrom(value : 'top' | 'bottom' | 'left' | 'right') {\r\n    this.topDown = this.bottomUp = this.leftRight = this.rightLeft = false;\r\n    switch (value) {\r\n      case 'top': this.topDown = true; break;\r\n      case 'bottom': this.bottomUp = true; break;\r\n      case 'left': this.leftRight = true; break;\r\n      case 'right': this.rightLeft = true; break;\r\n      default: this.bottomUp = true; break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gibt an, ob der Standard-Schließen-Button nicht angezeigt wird.\r\n   * Default: false\r\n   *\r\n   * @type {boolean}\r\n   * @memberof MrdFlyOutComponent\r\n   */\r\n  public hideDefaultCloseButton: boolean = false;\r\n  /**\r\n   * Gibt an, ob das FlyOut beim Klick auf den Hintergrund nicht geschlossen wird.\r\n   * Default: false;\r\n   *\r\n   * @type {boolean}\r\n   * @memberof MrdFlyOutComponent\r\n   */\r\n  public disableClose: boolean = false;\r\n  /**\r\n   * Die Farbe des Hintergrunds.\r\n   * Default: 'rgba(0, 0, 0, 0.5)'\r\n   *\r\n   * @type {string}\r\n   * @memberof MrdFlyOutComponent\r\n   */\r\n  public backdropColor: string = 'rgba(0, 0, 0, 0.5)';\r\n  /**\r\n   * Die Breite des FlyOuts.\r\n   * Default: 'fit-content'\r\n   *\r\n   * @type {string}\r\n   * @memberof MrdFlyOutComponent\r\n   */\r\n  public width: string = 'fit-content';\r\n  /**\r\n   * Die maximale Breite des FlyOuts.\r\n   * Default: '95vw'\r\n   *\r\n   * @type {string}\r\n   * @memberof MrdFlyOutComponent\r\n   */\r\n  public maxWidth: string = '95vw';\r\n  /**\r\n   * Die Höhe des FlyOuts.\r\n   * Default: 'fit-content'\r\n   *\r\n   * @type {string}\r\n   * @memberof MrdFlyOutComponent\r\n   */\r\n  public height: string = 'fit-content';\r\n  /**\r\n   * Die maximale Höhe des FlyOuts.\r\n   * Default: '95vh'\r\n   *\r\n   * @type {string}\r\n   * @memberof MrdFlyOutComponent\r\n   */\r\n  public maxHeight: string = '95vh';\r\n  /**\r\n   * Das Padding des FlyOuts zum Rand.\r\n   * Default: '1em'\r\n   *\r\n   * @type {string}\r\n   * @memberof MrdFlyOutComponent\r\n   */\r\n  public padding: string = '1em';\r\n  /**\r\n   * Der Radius der Ecken des FlyOuts.\r\n   * Default: '20px'\r\n   *\r\n   * @type {string}\r\n   * @memberof MrdFlyOutComponent\r\n   */\r\n  public borderRadius: string = '20px';\r\n  /**\r\n   * Die Hintergrundfarbe des FlyOuts.\r\n   * Default: '#fff'\r\n   *\r\n   * @type {string}\r\n   * @memberof MrdFlyOutComponent\r\n   */\r\n  public backgroundColor: string = '#fff';\r\n  /**\r\n   * Die Zeit, die das FlyOut benötigt, um zu öffnen oder zu schließen.\r\n   * Default: '1.0s'\r\n   *\r\n   * @type {string}\r\n   * @memberof MrdFlyOutComponent\r\n   */\r\n  public transitionTime: string = '1.0s';\r\n\r\n  /**\r\n   * Das vom FlyOut ausgelöste Event, wenn das FlyOut geöffnet wurde.\r\n   *\r\n   * @type {EventEmitter<void>}\r\n   * @memberof MrdFlyOutComponent\r\n   */\r\n  public afterOpened: EventEmitter<void> = new EventEmitter<void>();\r\n  /**\r\n   * Das vom FlyOut ausgelöste Event, wenn das FlyOut geschlossen wird.\r\n   * Gibt einen Wert zurück, wenn über die MrdFlyOutCloseDirective ein Wert übergeben wurde.\r\n   *\r\n   * @type {EventEmitter<any>}\r\n   * @memberof MrdFlyOutComponent\r\n   */\r\n  public onClose: EventEmitter<any> = new EventEmitter<any>();\r\n  /**\r\n   * Das vom FlyOut ausgelöste Event, wenn das FlyOut geschlossen wurde.\r\n   * Gibt einen Wert zurück, wenn über die MrdFlyOutCloseDirective ein Wert übergeben wurde.\r\n   *\r\n   * @type {EventEmitter<any>}\r\n   * @memberof MrdFlyOutComponent\r\n   */\r\n  public afterClosed: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * Gibt an, ob das FlyOut von oben nach unten einfliegt.\r\n   *\r\n   * @type {boolean}\r\n   * @memberof MrdFlyOutComponent\r\n   */\r\n  public topDown: boolean = false;\r\n  /**\r\n   * Gibt an, ob das FlyOut von unten nach oben einfliegt.\r\n   *\r\n   * @type {boolean}\r\n   * @memberof MrdFlyOutComponent\r\n   */\r\n  public bottomUp: boolean = true;\r\n  /**\r\n   * Gibt an, ob das FlyOut von links nach rechts einfliegt.\r\n   *\r\n   * @type {boolean}\r\n   * @memberof MrdFlyOutComponent\r\n   */\r\n  public leftRight: boolean = false;\r\n  /**\r\n   * Gibt an, ob das FlyOut von rechts nach links einfliegt.\r\n   *\r\n   * @type {boolean}\r\n   * @memberof MrdFlyOutComponent\r\n   */\r\n  public rightLeft: boolean = false;\r\n\r\n  /**\r\n   * Die ID des Overlays.\r\n   *\r\n   * @type {string}\r\n   * @memberof MrdFlyOutComponent\r\n   */\r\n  public overlayId: string;\r\n\r\n  /**\r\n   * Der ObservableValue, der den Zustand des FlyOuts steuert.\r\n   *\r\n   * @type {ObservableValue<boolean>}\r\n   * @memberof MrdFlyOutComponent\r\n   */\r\n  public stateToggle: ObservableValue<boolean> = new ObservableValue<boolean>(false);\r\n\r\n  constructor(\r\n    protected cdr: ChangeDetectorRef,\r\n    protected flyOutService: FlyOutService\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Initialisiert das Einfahren des FlyOut.\r\n   *\r\n   * @memberof MrdFlyOutComponent\r\n   */\r\n  ngAfterViewInit(): void {\r\n    setTimeout(() => {\r\n      this.stateToggle.value = true;\r\n      this.afterOpened.emit();\r\n      this.cdr.detectChanges();\r\n    }, 100);\r\n  }\r\n\r\n  /**\r\n   * Wird aufgerufen, wenn auf den Hintergrund geklickt wurde.\r\n   *\r\n   * @memberof MrdFlyOutComponent\r\n   */\r\n  public backdropClicked(): void {\r\n    if (!this.disableClose) {\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Schließt das FlyOut.\r\n   *\r\n   * @param {*} [returnValue]\r\n   * @memberof MrdFlyOutComponent\r\n   */\r\n  public close(returnValue?: any): void {\r\n    this.onClose.emit(returnValue);\r\n    this.stateToggle.value = false;\r\n    this.cdr.detectChanges();\r\n    setTimeout(() => {\r\n      this.afterClosed.emit(returnValue);\r\n      this.flyOutService.close(this.overlayId);\r\n    }, 1000);\r\n  }\r\n\r\n  /**\r\n   * Wird aufgerufen, wenn das FlyOut über eine MrdFlyOutCloseDirective geschlossen wird.\r\n   *\r\n   * @memberof MrdFlyOutComponent\r\n   */\r\n  public closeDirectiveClicked(returnValue: any): void {\r\n    this.close(returnValue);\r\n  }\r\n}\r\n","import { ComponentRef, Directive, HostListener, Inject, Input } from \"@angular/core\";\r\nimport { MrdFlyOutComponent } from \"../../components/mrd-fly-out/mrd-fly-out.component\";\r\n\r\n/**\r\n * Diese Directive kann verwendet werden, um das, die Komponente umgebende, FlyOut zu schließen.\r\n * Wird ein Wert übergebene, wird dieser über die Events onClose und afterClosed der FlyOut-Komponente zurückgegeben.\r\n *\r\n * @class MrdFlyOutCloseDirective\r\n */\r\n@Directive({\r\n    selector: '[mrdFlyOutClose]'\r\n})\r\nexport class MrdFlyOutCloseDirective {\r\n\r\n  /**\r\n   * Setzt den Wert, der über die Events onClose und afterClosed der FlyOut-Komponente zurückgegeben wird.\r\n   * Default: undefined\r\n   *\r\n   * @memberof MrdFlyOutCloseDirective\r\n   */\r\n  @Input() public set mrdFlyOutClose(value: any) {\r\n    this.value = value === '' ? undefined : value;\r\n  }\r\n\r\n  /**\r\n   * Der Rückgabewert, der über die Events onClose und afterClosed der FlyOut-Komponente zurückgegeben wird.\r\n   *\r\n   * @private\r\n   * @type {*}\r\n   * @memberof MrdFlyOutCloseDirective\r\n   */\r\n  private value: any;\r\n\r\nconstructor(\r\n    // Wir injecten die MrdFlyOutComponent, um die closeDirectiveClicked-Methode aufrufen zu können\r\n    @Inject(ComponentRef<MrdFlyOutComponent>) public componentRef: ComponentRef<MrdFlyOutComponent>\r\n  ) {}\r\n\r\n  /**\r\n   * Der Hostlistener, wenn das Element der Directive geklickt wird.\r\n   * Falls die Komponente innerhalb eines MrdFlyOuts liegt,\r\n   * wird die closeDirectiveClicked-Methode der FlyOut-Komponente mit dem übergebenen Rückgabewert aufgerufen.\r\n   */\r\n  @HostListener('click', ['$event']) onClick() {\r\n    this.componentRef?.instance.closeDirectiveClicked(this.value);\r\n  };\r\n}\r\n\r\n","import { NgModule } from \"@angular/core\";\r\nimport { MrdFlyOutComponent } from \"./components/mrd-fly-out/mrd-fly-out.component\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { MrdButtonModule } from \"../mrd-button/mrd-button.module\";\r\nimport { MrdFlyOutCloseDirective } from \"./common/directive/mrd-fly-out-close.directive\";\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MrdFlyOutComponent,\r\n    MrdFlyOutCloseDirective\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MrdButtonModule\r\n  ],\r\n  exports: [\r\n    MrdFlyOutComponent,\r\n    MrdFlyOutCloseDirective\r\n  ]\r\n})\r\nexport class MrdFlyOutModule { }\r\n","import { AfterViewInit, booleanAttribute, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChildren, EventEmitter, Input, numberAttribute, Output, QueryList } from '@angular/core';\r\nimport { BaseObject, SubscriptionHandler } from 'mrd-core';\r\nimport { colorAttribute, colorThemeAttribute } from './../../../../common/transforms/color-transform';\r\nimport { sizeAttribute } from './../../../../common/transforms/size-transform';\r\nimport { MrdButtonComponent } from './../../../mrd-button/components/mrd-button/mrd-button.component';\r\nimport { MrdConfigModel } from './../../../../common/model/config.model';\r\nimport { ConfigUtil } from './../../../../common/util/config.util';\r\nimport * as _ from 'underscore';\r\n\r\n@Component({\r\n  selector: 'mrd-button-toggle-group',\r\n  templateUrl: './mrd-button-toggle-group.component.html',\r\n  styleUrls: ['./mrd-button-toggle-group.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MrdButtonToggleGroupComponent extends BaseObject implements AfterViewInit {\r\n\r\n  @ContentChildren(MrdButtonComponent) buttons: QueryList<MrdButtonComponent>;\r\n\r\n  @Input({transform: booleanAttribute}) public rounded: boolean = false;\r\n  @Input({transform: booleanAttribute}) public disabled: boolean = false;\r\n  @Input({transform: booleanAttribute}) public multiple: boolean = false;\r\n\r\n  @Input({transform: numberAttribute}) public set selectedIndex(index: number|number[]) {\r\n    if (this.multiple && !Array.isArray(index)) {\r\n      index = [index];\r\n    }\r\n    this._selectedIndex = index;\r\n    if (this.buttons) {\r\n      this.buttons.forEach((b, i) => {\r\n        if (this.multiple) {\r\n          if ((index as number[]).includes(i) && !b.toggleSelected) {\r\n            b.toggleSelected = true;\r\n            b.updateStyle();\r\n          } else if (!(index as number[]).includes(i) && b.toggleSelected) {\r\n            b.toggleSelected = false;\r\n            b.updateStyle();\r\n          }\r\n        } else if (i === index && !b.toggleSelected) {\r\n          b.toggleSelected = true;\r\n          b.updateStyle();\r\n        } else if (i !== index && b.toggleSelected) {\r\n          b.toggleSelected = false;\r\n          b.updateStyle();\r\n        }\r\n      });\r\n    }\r\n    \r\n    this.indexChange.emit(index);\r\n    this.cdr.detectChanges();\r\n  }\r\n  public get selectedIndex(): number|number[] {\r\n    return this._selectedIndex;\r\n  }\r\n  private _selectedIndex: number|number[] = 0;\r\n\r\n  /**\r\n   * Gibt an, ob die ButtonGroup das Theme \"primary\" hat.\r\n   *\r\n   * Hierdurch wird die Hintergrundfarbe des Buttons auf die primäre Farbe des Themes gesetzt.\r\n   *\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({transform: booleanAttribute}) public primary: boolean = false;\r\n\r\n  /**\r\n   * Gibt an, ob die ButtonGroup das Theme \"accent\" hat.\r\n   *\r\n   * Hierdurch wird die Hintergrundfarbe des Buttons auf die Akzentfarbe des Themes gesetzt.\r\n   *\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({transform: booleanAttribute}) public accent: boolean = false;\r\n\r\n  /**\r\n   * Gibt an, ob die ButtonGroup das Theme \"warn\" hat.\r\n   *\r\n   * Hierdurch wird die Hintergrundfarbe des Buttons auf die Warnfarbe des Themes gesetzt.\r\n   *\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({transform: booleanAttribute}) public warn: boolean = false;\r\n\r\n  /**\r\n   * Setzt die Grundfarbe des Buttons.\r\n   *\r\n   * Diese wird je nach Style des Buttons als Hintergrundfarbe oder Textfarbe verwendet.\r\n   *\r\n   * Es können Hex-, RGB- oder RGBA-Werte, sowie \"primary\", \"accent\" oder \"warn\" angegeben werden.\r\n   *\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({alias: 'color', transform: colorThemeAttribute}) public customTextColor: string;\r\n\r\n  /**\r\n   * Setzt die Hintergrundfarbe des Buttons.\r\n   *\r\n   * Es können Hex-, RGB- oder RGBA-Werte angegeben werden.\r\n   *\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({alias: 'backgroundColor', transform: colorAttribute}) public customBgColor: string;\r\n\r\n  /**\r\n   * Gibt an, ob die benutzerdefinierte Textfarbe nicht durch ein defniertes Thema überschrieben werden soll.\r\n   *\r\n   * @type {boolean}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({transform: booleanAttribute}) public keepCustomTextColor: boolean = false;\r\n  /**\r\n   * Gibt an, ob die benutzerdefinierte Hintergrundfarbe nicht durch ein definiertes Thema überschrieben werden soll.\r\n   *\r\n   * @type {boolean}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({transform: booleanAttribute}) public keepCustomBgColor: boolean = false;\r\n\r\n  @Input({alias: 'unselectedBgColor', transform: colorAttribute}) public customToggleUnselectedColor: string;\r\n\r\n  @Input({alias: 'unselectedTextColor', transform: colorAttribute}) public customToggleUnselectedTextColor: string;\r\n\r\n  @Input({alias: 'selectedBgColor', transform: colorAttribute}) public customToggleSelectedColor: string;\r\n\r\n  @Input({alias: 'selectedTextColor', transform: colorAttribute}) public customToggleSelectedTextColor: string;\r\n\r\n  /**\r\n   * Die Mindesthöhe des Buttons.\r\n   *\r\n   * @type {string | number}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({transform: sizeAttribute}) public minHeight: string;\r\n  /**\r\n   * Die Schriftgröße des Buttons.\r\n   *\r\n   * @type {string | number}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({transform: sizeAttribute}) public fontSize: string;\r\n\r\n  /**\r\n   * Der Radius der Ecken des Buttons.\r\n   *\r\n   * @type {string | number}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({transform: sizeAttribute}) public borderRadius: string;\r\n\r\n  /**\r\n   * Das Klick-Event durch den Nutzer.\r\n   *\r\n   * @type {EventEmitter<Event>}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Output() public indexChange: EventEmitter<number|number[]> = new EventEmitter<number|number[]>();\r\n\r\n\r\n  /**\r\n   * Die Konfiguration des Mrd-Buttons.\r\n   *\r\n   * @private\r\n   * @type {MrdConfigModel}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  private _config: MrdConfigModel = ConfigUtil.getConfig();\r\n\r\n  // public activeIndex: number|number[] = 0;\r\n\r\n  constructor(\r\n    protected cdr: ChangeDetectorRef\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.multiple && !Array.isArray(this.selectedIndex)) {\r\n      this.selectedIndex = [this.selectedIndex];\r\n    }\r\n    this.buttons.forEach((button: MrdButtonComponent, index: number) => {\r\n      button.elementRef.nativeElement.style.width = `calc(${100 / this.buttons.length}% + 28px)`;\r\n      // button.flat = true;\r\n      button.primary = this.primary;\r\n      button.accent = this.accent;\r\n      button.warn = this.warn;\r\n      button.customTextColor ??= this.customTextColor;\r\n      button.customBgColor ??= this.customBgColor;\r\n      button.keepCustomTextColor ||= this.keepCustomTextColor;\r\n      button.keepCustomBgColor ||= this.keepCustomBgColor;\r\n      button.customToggleUnselectedColor ??= this.customToggleUnselectedColor;\r\n      button.customToggleUnselectedTextColor ??= this.customToggleUnselectedTextColor;\r\n      button.customToggleSelectedTextColor ??= this.customToggleSelectedTextColor;\r\n      button.minHeight ??= this.minHeight;\r\n      button.fontSize ??= this.fontSize;\r\n\r\n      button.borderRadius = this.borderRadius ?? this.rounded ? '50px' : '4px';\r\n      \r\n      button.toggleSelected = this.multiple ? (this.selectedIndex as number[]).includes(index) : this.selectedIndex === index;\r\n      \r\n      button.updateStyle();\r\n\r\n      this.watch(button.click.asObservable(), new SubscriptionHandler((event: Event) => {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        if (this.multiple) {\r\n          this.selectedIndex = (this.selectedIndex as number[]).includes(index) ? (this.selectedIndex as number[]).filter(i => i !== index) : [...(this.selectedIndex as number[]), index];\r\n        } else {\r\n          this.selectedIndex = index;\r\n        }\r\n        // this.activeIndex = index;\r\n        // button.toggleSelected = this.multiple ? !button.toggleSelected : true;\r\n        // if (!this.multiple) {\r\n        //   this.buttons.forEach((b, i) => {\r\n        //     if (i !== index) {\r\n        //       b.toggleSelected = false;\r\n        //       b.updateStyle();\r\n        //     }\r\n        //   });\r\n        // }\r\n        // button.updateStyle();\r\n        this.indexChange.emit(this.selectedIndex);\r\n        this.cdr.detectChanges();\r\n      }));\r\n    });\r\n    this.cdr.detectChanges();\r\n  }\r\n}\r\n","<div class=\"flex flex-row justify-center\">\r\n  <ng-content></ng-content>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MrdButtonToggleGroupComponent } from './components/mrd-button-toggle-group/mrd-button-toggle-group.component';\r\nimport { MrdButtonModule } from '../mrd-button/mrd-button.module';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MrdButtonToggleGroupComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MrdButtonModule\r\n  ],\r\n  exports: [\r\n    MrdButtonToggleGroupComponent\r\n  ]\r\n})\r\nexport class MrdButtonToggleModule { }\r\n","<div class=\"mrd-checkbox-container\" [ngClass]=\"{'mrd-checkbox-disabled': formControl?.disabled || disabled}\" (click)=\"toggle()\"\r\n  [mrdToolTip]=\"tooltipText\" [showToolTip]=\"tooltip && !tooltipDisabled\" [position]=\"tooltipPosition\" [showOnTruncatedElement]=\"tooltipIfTruncated ? checkboxlabel : undefined\"\r\n  [style.--box-height]=\"checkboxHeight\" \r\n  [style.--box-width]=\"checkboxWidth\"\r\n  [style.--bg-color]=\"bgColor\"\r\n  [style.--bg-color-hover]=\"bgColorHover\"\r\n  [style.--bg-color-checked]=\"bgColorChecked\"\r\n  [style.--bg-color-checked-hover]=\"bgColorCheckedHover\"\r\n  [style.--color]=\"color\"\r\n  [style.--color-hover]=\"colorHover\"\r\n  [style.--color-checked]=\"colorChecked\"\r\n  [style.--color-checked-hover]=\"colorCheckedHover\"\r\n  [style.--border]=\"border\"\r\n  [style.--border-hover]=\"borderHover\"\r\n  [style.--border-checked]=\"borderChecked\"\r\n  [style.--border-checked-hover]=\"borderCheckedHover\"\r\n  [class.rounded]=\"rounded\"\r\n  [class.checked]=\"checked\"\r\n  >\r\n  <span class=\"mrd-checkbox-box\" *ngIf=\"!customIcons\">\r\n    <ng-container *ngIf=\"checked\">\r\n      <svg fill=\"#ffffff\" width=\"16px\" height=\"16px\" viewBox=\"-4 0 32 32\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" stroke=\"#000000\" stroke-width=\"0.00032\">\r\n        <g id=\"SVGRepo_bgCarrier\" stroke-width=\"0\"></g>\r\n        <g id=\"SVGRepo_tracerCarrier\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></g>\r\n        <g id=\"SVGRepo_iconCarrier\"> <title>check</title> <path d=\"M19.375 5.063l-9.5 13.625-6.563-4.875-3.313 4.594 11.188 8.531 12.813-18.375z\"></path></g>\r\n      </svg>\r\n    </ng-container>\r\n  </span>\r\n  <div class=\"mrd-checkbox-custom\" [ngClass]=\"{'isHover': !customHoverIcons}\" *ngIf=\"customIcons\">\r\n    <ng-content *ngIf=\"checked\" select=\"[icon-checked]\"></ng-content>\r\n    <ng-content *ngIf=\"!checked\" select=\"[icon-unchecked]\"></ng-content>\r\n  </div>\r\n  <div class=\"mrd-checkbox-custom-hover\" *ngIf=\"customHoverIcons\">\r\n    <ng-content *ngIf=\"checked\" select=\"[icon-checked-hover]\"></ng-content>\r\n    <ng-content *ngIf=\"!checked\" select=\"[icon-unchecked-hover]\"></ng-content>\r\n  </div>\r\n  \r\n  \r\n  <span #checkboxlabel class=\"mrd-checkbox-label\"\r\n    [class.singleLine]=\"singleLine\"\r\n    [class.ellipsis]=\"ellipsis\"\r\n  ><ng-content></ng-content></span>\r\n</div>\r\n","import { AfterViewChecked, AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, Output, ViewChild, booleanAttribute } from '@angular/core';\r\nimport { AccessableFormControl, Util } from 'mrd-core';\r\nimport { sizeAttribute } from '../../../../common/transforms/size-transform';\r\nimport { colorAttribute, colorThemeAttribute } from '../../../../common/transforms/color-transform';\r\nimport { MrdBaseColorTheme, MrdConfigModel } from '../../../../common/model/config.model';\r\nimport { ConfigUtil } from '../../../../common/util/config.util';\r\nimport * as _ from 'underscore';\r\n\r\n@Component({\r\n  selector: 'mrd-checkbox',\r\n  templateUrl: './mrd-checkbox.component.html',\r\n  styleUrls: ['./mrd-checkbox.component.scss'],\r\n  host: {\r\n    \"[style.max-width]\": \"fitContent ? 'fit-content' : '100%'\",\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MrdCheckboxComponent implements AfterViewInit, AfterViewChecked {\r\n\r\n  @ViewChild('checkboxlabel') public label: ElementRef<HTMLElement>;\r\n\r\n  @Input() public formControl: AccessableFormControl;\r\n\r\n  // @Input({transform: booleanAttribute}) public fill: boolean = false;\r\n  // @Input({transform: booleanAttribute}) public outline: boolean = false;\r\n  @Input({transform: booleanAttribute}) public rounded: boolean = false;\r\n\r\n  // @Input({transform: booleanAttribute}) public primary: boolean = false;\r\n  // @Input({transform: booleanAttribute}) public accent: boolean = false;\r\n  // @Input({transform: booleanAttribute}) public warn: boolean = false;\r\n\r\n  @Input({transform: colorAttribute}) public color: string = '#000000';\r\n  @Input({transform: colorAttribute}) public colorHover: string = '#000000';\r\n  @Input({transform: colorAttribute}) public colorChecked: string = '#000000';\r\n  @Input({transform: colorAttribute}) public colorCheckedHover: string = '#000000';\r\n  @Input({transform: colorAttribute}) public bgColor: string = 'transparent';\r\n  @Input({transform: colorAttribute}) public bgColorHover: string = 'transparent';\r\n  @Input({transform: colorAttribute}) public bgColorChecked: string = 'transparent';\r\n  @Input({transform: colorAttribute}) public bgColorCheckedHover: string = 'transparent'; \r\n  @Input() public border: string = 'none';\r\n  @Input() public borderHover: string = 'none';\r\n  @Input() public borderChecked: string = 'none';\r\n  @Input() public borderCheckedHover: string = 'none';\r\n\r\n  @Input({transform: booleanAttribute}) public checked: boolean = false;\r\n  @Input({transform: booleanAttribute}) public disabled: boolean = false;\r\n  @Input({transform: booleanAttribute}) public customIcons: boolean = false;\r\n  @Input({transform: booleanAttribute}) public customHoverIcons: boolean = false;\r\n\r\n  @Input({transform: sizeAttribute}) public checkboxSize: string = '16px';\r\n  @Input({transform: sizeAttribute}) public checkboxHeight: string;\r\n  @Input({transform: sizeAttribute}) public checkboxWidth: string;\r\n\r\n  @Input({alias: 'single-line', transform: booleanAttribute}) public singleLine: boolean = false;\r\n  @Input({alias: 'fit-content', transform: booleanAttribute}) public fitContent: boolean = false;\r\n  @Input({transform: booleanAttribute}) public ellipsis: boolean = false;\r\n\r\n  @Input({transform: booleanAttribute}) public tooltip: boolean = false;\r\n  @Input({transform: booleanAttribute}) public tooltipIfTruncated: boolean = false;\r\n  @Input() public set tooltipText(value: string) {\r\n    if (Util.isDefined(value)) {\r\n      this.customTooltipText = true;\r\n      this._tooltipText = value;\r\n    } else if (Util.isDefined(this.label)) {\r\n      this._tooltipText = this.label.nativeElement.innerText;\r\n    }\r\n  }\r\n  public get tooltipText(): string {\r\n    return this._tooltipText;\r\n  }\r\n  private _tooltipText: string;\r\n  private customTooltipText: boolean = false;\r\n  @Input() public tooltipPosition: 'top' | 'bottom' | 'left' | 'right' = 'bottom';\r\n  @Input({transform: booleanAttribute}) public tooltipDisabled: boolean = false;\r\n\r\n  @Output() public checkedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  private config: MrdConfigModel = ConfigUtil.getConfig();\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef\r\n  ) { }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (Util.isDefined(this.formControl) && Util.isDefined(this.formControl.value)) {\r\n      this.checked = !!this.formControl.value;\r\n    }\r\n    if (this.tooltipIfTruncated) {\r\n      this.tooltip = true;\r\n    }\r\n    if (this.tooltip && !Util.isDefined(this.tooltipText)) {\r\n      this._tooltipText = this.label.nativeElement.innerText;\r\n    }\r\n    if (!Util.isDefined(this.checkboxHeight)) {\r\n      this.checkboxHeight = this.checkboxSize;\r\n    }\r\n    if (!Util.isDefined(this.checkboxWidth)) {\r\n      this.checkboxWidth = this.checkboxSize;\r\n    }\r\n\r\n    this.cdr.detectChanges();\r\n    // ['checkbox', 'fill', 'selected', 'primary', 'text'];\r\n    // ['checkbox', 'selected', 'primary', 'text'];\r\n    // ['baseColor', 'primary'];\r\n    // if (this.primary) {\r\n    //   this.color = _.isObject(this.config.baseColors.primary) ? (this.config.baseColors.primary as MrdBaseColorTheme).text : this.config.baseColors.primary as string;\r\n    // } else if (this.accent) {\r\n    //   this.color = this.config.accentColor;\r\n    // } else if (this.warn) {\r\n    //   this.color = this.config.warnColor;\r\n    // }\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    if (this.tooltip && Util.isDefined(this.label) && !this.customTooltipText && (!Util.isDefined(this.tooltipText) || this.tooltipText !== this.label.nativeElement.innerText)) {\r\n      this._tooltipText = this.label.nativeElement.innerText;\r\n    }\r\n  }\r\n\r\n  // private initBaseStyle(): void {\r\n\r\n  // }\r\n\r\n  public toggle(): void {\r\n    if (this.disabled || (Util.isDefined(this.formControl) && this.formControl.disabled)) {\r\n      return;\r\n    }\r\n    this.checked = !this.checked;\r\n    if (Util.isDefined(this.formControl)) {\r\n      this.formControl.setValue(this.checked);\r\n    }\r\n    this.checkedChange.emit(this.checked);\r\n    this.cdr.detectChanges();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MrdCheckboxComponent } from './components/mrd-checkbox/mrd-checkbox.component';\r\nimport { MrdTooltipModule } from '../mrd-tooltip/mrd-tooltip.module';\r\n\r\n/**\r\n * Dieses Modul stellt den Mrd-Checkbox zur Verfügung.\r\n *\r\n * @export MrdCheckboxComponent\r\n * @class MrdCheckboxModule\r\n */\r\n@NgModule({\r\n  declarations: [MrdCheckboxComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MrdTooltipModule\r\n  ],\r\n  exports: [MrdCheckboxComponent]\r\n})\r\nexport class MrdCheckboxModule { }\r\n","<div class=\"mrd-chip-container\">\r\n  <div class=\"mrd-chip-content\">\r\n    <mrd-icon *ngIf=\"prefixIcon\" [svgIcon]=\"prefixIcon\"></mrd-icon>\r\n    <div #chipText class=\"mrd-chip-text\" [mrdToolTip]=\"chipTextValue\" showIfTruncated>\r\n      <ng-content></ng-content>\r\n    </div>\r\n    <mrd-icon *ngIf=\"suffixIcon\" [svgIcon]=\"suffixIcon\"></mrd-icon>\r\n  </div>\r\n\r\n  <mrd-button icon-button fullIcon diameter=\"1em\" (click)=\"closeClicked()\">\r\n    <mrd-icon svgIcon=\"mrd_close_grey\"></mrd-icon>\r\n  </mrd-button>\r\n</div>\r\n","import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'mrd-chip',\r\n  templateUrl: './mrd-chip.component.html',\r\n  styleUrls: ['./mrd-chip.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MrdChipComponent implements AfterViewInit {\r\n\r\n  @ViewChild('chipText') public chipText: ElementRef<HTMLElement> | undefined;\r\n\r\n  @Input('prefixIcon') prefixIcon: string;\r\n  @Input('suffixIcon') suffixIcon: string;\r\n\r\n  @Output() close: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  public chipTextValue: string;\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef\r\n  ) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.chipText) {\r\n      this.chipTextValue = this.chipText.nativeElement.innerText;\r\n    }\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  public closeClicked(): void {\r\n    this.close.emit();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MrdChipComponent } from './components/mrd-chip/mrd-chip.component';\r\nimport { MrdIconModule } from '../mrd-icon/mrd-icon.module';\r\nimport { MrdButtonModule } from '../mrd-button/mrd-button.module';\r\nimport { MrdTooltipModule } from '../mrd-tooltip/mrd-tooltip.module';\r\n\r\n/**\r\n * Dieses Modul stellt den Mrd-Chip zur Verfügung.\r\n *\r\n * @export MrdChipComponent\r\n * @class MrdChipModule\r\n */\r\n@NgModule({\r\n  declarations: [MrdChipComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MrdIconModule,\r\n    MrdButtonModule,\r\n    MrdTooltipModule\r\n  ],\r\n  exports: [MrdChipComponent]\r\n})\r\nexport class MrdChipModule { }\r\n","<input #baseInput\r\n  (click)=\"inputClicked($event)\"\r\n  (focus)=\"focus($event)\"\r\n  (blur)=\"blur($event)\"\r\n  [value]=\"value\"\r\n  (input)=\"input($event)\"\r\n  [disabled]=\"formControl?.disabled || disabled\"\r\n  [placeholder]=\"placeholder\"\r\n  [style.pointer-events]=\"readonly ? 'none' : 'auto'\"\r\n  [style.text-align]=\"textEnd ? 'end' : centered ? 'center' : 'start'\"\r\n  *ngIf=\"!textarea\"\r\n  >\r\n<input #dateInput\r\n  *ngIf=\"date\"\r\n  [style.width]=\"customDateToggle ? '0' : '20px'\"\r\n  [style.padding]=\"'0'\"\r\n  type=\"date\"\r\n  (input)=\"input($event)\"\r\n>\r\n<textarea #textArea\r\n  (click)=\"inputClicked($event)\"\r\n  (focus)=\"focus($event)\"\r\n  (blur)=\"blur($event)\"\r\n  [value]=\"value\"\r\n  (input)=\"input($event)\"\r\n  [disabled]=\"formControl?.disabled || disabled\"\r\n  [placeholder]=\"placeholder\"\r\n  [style.pointer-events]=\"readonly ? 'none' : 'auto'\"\r\n  *ngIf=\"textarea\"\r\n  rows=\"1\"\r\n  [ngStyle]=\"{'line-height': lineHeight + 'px'}\"\r\n></textarea>\r\n","import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, Directive, ElementRef, EventEmitter, Host, HostListener, Input, Output, ViewChild, booleanAttribute, numberAttribute } from '@angular/core';\r\nimport moment from 'moment';\r\nimport { Moment } from 'moment';\r\nimport { AccessableFormControl, BaseObject, SubscriptionHandler, Util } from 'mrd-core';\r\n\r\n@Component({\r\n  selector: 'mrd-input',\r\n  templateUrl: './mrd-input.component.html',\r\n  styleUrls: ['./mrd-input.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MrdInputComponent extends BaseObject implements AfterViewInit {\r\n\r\n  private static readonly DEFAULT_MAX_LENGTH: number = 512;\r\n  private static readonly DEFAULT_MIN_ROWS: number = 1;\r\n  private static readonly DEFAULT_MAX_ROWS: number = 2;\r\n  private static readonly DEFAULT_LINE_HEIGHT: number = 24;\r\n\r\n  private static readonly DATE_REGEX: RegExp = /(\\d{2}).(\\d{2}).(\\d{4})/;\r\n  private static readonly DATE_REGEX_INPUT: RegExp = /(\\d{4})-(\\d{2})-(\\d{2})/;\r\n\r\n  @ViewChild('baseInput') public baseInputElement: ElementRef<HTMLInputElement>;\r\n  @ViewChild('textArea') public textAreaElement: ElementRef<HTMLTextAreaElement>;\r\n  @ViewChild('dateInput') public dateInputElement: ElementRef<HTMLInputElement>;\r\n\r\n  @Input('mrdFormControl') formControl: AccessableFormControl;\r\n  @Input() public placeholder: string = ' ';\r\n\r\n  @Input() public value: string = '';\r\n\r\n  @Input({transform: numberAttribute}) public maxLength: number;\r\n  @Input({transform: numberAttribute}) public minRows: number = MrdInputComponent.DEFAULT_MIN_ROWS;\r\n  @Input({transform: numberAttribute}) public maxRows: number = MrdInputComponent.DEFAULT_MAX_ROWS;\r\n  @Input({transform: numberAttribute}) public lineHeight: number = MrdInputComponent.DEFAULT_LINE_HEIGHT;\r\n\r\n  @Input({transform: booleanAttribute}) public disabled: boolean = false;\r\n  @Input({transform: booleanAttribute}) public readonly: boolean = false;\r\n  @Input({transform: booleanAttribute}) public required: boolean = false;\r\n  @Input({transform: booleanAttribute}) public textarea: boolean = false;\r\n  @Input({transform: booleanAttribute}) public date: boolean = false;\r\n\r\n  @Input({transform: booleanAttribute}) public customDateToggle: boolean = false;\r\n\r\n  @Input({alias: 'text-centered', transform: booleanAttribute}) public centered: boolean = false;\r\n  @Input({alias: 'text-end', transform: booleanAttribute}) public textEnd: boolean = false;\r\n\r\n  @Input() public datePickerToggle: HTMLElement;\r\n\r\n  @Output() touched: EventEmitter<void> = new EventEmitter<void>();\r\n  @Output() focused: EventEmitter<void> = new EventEmitter<void>();\r\n  @Output() blurred: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  @Output() valueChange: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.maxLength !== undefined && Number.isNaN(this.maxLength)) {\r\n      this.maxLength = MrdInputComponent.DEFAULT_MAX_LENGTH;\r\n    }\r\n    if (this.minRows !== undefined && Number.isNaN(this.minRows)) {\r\n      this.minRows = MrdInputComponent.DEFAULT_MIN_ROWS;\r\n    }\r\n    if (this.maxRows !== undefined && Number.isNaN(this.maxRows)) {\r\n      this.maxRows = MrdInputComponent.DEFAULT_MAX_ROWS;\r\n    }\r\n    if (this.lineHeight !== undefined && Number.isNaN(this.lineHeight)) {\r\n      this.lineHeight = MrdInputComponent.DEFAULT_LINE_HEIGHT;\r\n    }\r\n    if (this.textarea && Util.isDefined(this.textAreaElement) && Util.isDefined(this.maxLength)) {\r\n      this.textAreaElement.nativeElement.maxLength = this.maxLength;\r\n      this.calculateTextAreaHeight();\r\n    }\r\n    if (this.date && Util.isDefined(this.formControl) && !this.formControl.convertTo) {\r\n      this.formControl.convertTo = (value: Moment) => {\r\n        return Util.isDefined(value) && moment.isMoment(value) ? value.format('DD.MM.YYYY') : value;\r\n      }\r\n    }\r\n\r\n    if (Util.isDefined(this.formControl) && Util.isDefined(this.formControl.value)) {\r\n      this.value = this.formControl.value;\r\n      this.cdr.detectChanges();\r\n    }\r\n\r\n    if (Util.isDefined(this.formControl)) {\r\n      this.watch(this.formControl.valueChanges, new SubscriptionHandler(() => this.formControlChanged()));\r\n    }\r\n  }\r\n\r\n  private formControlChanged(): void {\r\n    if (this.textarea) {\r\n      if (Util.isDefined(this.textAreaElement)) {\r\n        this.calculateTextAreaHeight();\r\n      }\r\n    }\r\n    if (Util.isDefined(this.formControl.control.value)) {\r\n      this.value = this.date ? this.formControl.value : this.formControl.control.value;\r\n    } else {\r\n      this.value = null;\r\n    }\r\n    this.valueChange.emit(this.value);\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  public input(event: InputEvent): void {\r\n    let targetValue = (event.target as HTMLInputElement).value;\r\n    if (this.textarea) {\r\n      if (Util.isDefined(this.textAreaElement)) {\r\n        this.calculateTextAreaHeight();\r\n      }\r\n    }\r\n\r\n    if (Util.isDefined(this.formControl)) {\r\n      let dateMatch = MrdInputComponent.DATE_REGEX.test(targetValue);\r\n      let dateInputMatch = MrdInputComponent.DATE_REGEX_INPUT.test(targetValue);\r\n\r\n      this.formControl.setValue(this.date && (dateMatch || dateInputMatch) ? (dateMatch ? moment(targetValue, 'DD.MM.YYYY').utc(true) : moment(targetValue, 'YYYY-MM-DD').utc(true)) : targetValue);\r\n      \r\n      if (this.date && dateInputMatch) {\r\n        this.baseInputElement.nativeElement.focus();\r\n      }\r\n    } else {\r\n      this.value = targetValue;\r\n      this.valueChange.emit(this.value);\r\n    }\r\n    \r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  private calculateTextAreaHeight(): void {\r\n    this.textAreaElement.nativeElement.style.height = 'auto';\r\n    this.textAreaElement.nativeElement.style.height =\r\n      this.textAreaElement.nativeElement.scrollHeight > (this.maxRows * this.lineHeight) ?\r\n        (this.maxRows * this.lineHeight) + 'px' :\r\n        this.textAreaElement.nativeElement.scrollHeight < (this.minRows * this.lineHeight) ?\r\n        (this.minRows * this.lineHeight) + 'px' :\r\n        this.textAreaElement.nativeElement.scrollHeight + 'px';\r\n  }\r\n\r\n  public inputClicked(event: MouseEvent): void {\r\n    this.touched.emit();\r\n  }\r\n\r\n  public focus(event: FocusEvent): void {\r\n    this.focused.emit();\r\n  }\r\n\r\n  public blur(event: FocusEvent): void {\r\n    if (this.formControl && this.date && this.formControl.control.value && this.formControl.control.value !== '') {\r\n      if (!moment.isMoment(this.formControl.control.value)) {\r\n        let momentDate = moment(this.formControl.control.value, 'DD.MM.YYYY').utc(true);\r\n        if (momentDate.isValid()) {\r\n          this.formControl.setValue(momentDate);\r\n        }\r\n      }\r\n    }\r\n    this.blurred.emit();\r\n  }\r\n\r\n  public toggleClicked(): void {\r\n    this.dateInputElement.nativeElement.showPicker();\r\n  }\r\n}\r\n\r\n\r\n@Directive({\r\n  selector: '[mrdDatePickerToggle]'\r\n})\r\nexport class MrdDatePickerToggle implements AfterViewInit {\r\n\r\n  @Input('mrdDatePickerToggle') public mrdDatePickerToggle: MrdInputComponent;\r\n\r\n  constructor(\r\n    private elementRef: ElementRef\r\n  ) {}\r\n\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.elementRef.nativeElement.closest('mrd-icon')) {\r\n      this.elementRef.nativeElement.style.cursor = 'pointer';\r\n      this.elementRef.nativeElement.style.width = '20px';\r\n      this.elementRef.nativeElement.style.height = '20px';\r\n    }\r\n  }\r\n\r\n  @HostListener('click', ['$event'])\r\n  public onClick(event: MouseEvent): void {\r\n    if (Util.isDefined(this.mrdDatePickerToggle)) {\r\n      this.mrdDatePickerToggle.toggleClicked();\r\n    }\r\n  }\r\n}","<div class=\"mrd-label-content\" [ngClass]=\"{'mrd-label-floating': float === 'always' || floating.value, 'mrd-label-hidden': float === 'never' && floating.value, 'mrd-label-top': labelTop}\">\r\n  <ng-content></ng-content><ng-container *ngIf=\"required.value\">&nbsp;*</ng-container>\r\n</div>\r\n","import { booleanAttribute, ChangeDetectionStrategy, ChangeDetectorRef, Component, Input } from '@angular/core';\r\nimport { BasePushStrategyObject, ObservableValue, SubscriptionHandler } from 'mrd-core';\r\n\r\n@Component({\r\n  selector: 'mrd-label',\r\n  templateUrl: './mrd-label.component.html',\r\n  styleUrls: ['./mrd-label.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MrdLabelComponent extends BasePushStrategyObject {\r\n\r\n  @Input({transform: booleanAttribute}) public labelTop: boolean = false;\r\n\r\n  @Input() public float: 'always' | 'auto' | 'never' = 'auto';\r\n  public floating: ObservableValue<boolean> = new ObservableValue(false);\r\n\r\n  public required: ObservableValue<boolean> = new ObservableValue(false);\r\n\r\n  constructor(\r\n    protected cdr: ChangeDetectorRef\r\n  ) {\r\n    super();\r\n    this.watch(this.floating.changed, new SubscriptionHandler(() => this.cdr.detectChanges()));\r\n    this.watch(this.required.changed, new SubscriptionHandler(() => this.cdr.detectChanges()));\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, numberAttribute } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'mrd-error',\r\n  templateUrl: './mrd-error.component.html',\r\n  styleUrls: ['./mrd-error.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MrdErrorComponent {\r\n\r\n  @Input({transform: numberAttribute}) public ellipsis: number;\r\n\r\n  private _error: string = '';\r\n\r\n  public set error(value: string) {\r\n    this._error = value;\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  public get error(): string {\r\n    return this._error;\r\n  }\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef\r\n  ) { }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.ellipsis !== undefined && Number.isNaN(this.ellipsis)) {\r\n      this.ellipsis = 1;\r\n    }\r\n    this.cdr.detectChanges();\r\n  }\r\n}\r\n","<span class=\"mrd-error-container\"\r\n  [ngClass]=\"{'mrd-error-ellipsis': ellipsis > 0}\"\r\n  [ngStyle]=\"{'-webkit-line-clamp': ellipsis > 0 ? ellipsis : ''}\"\r\n  [mrdToolTip]=\"error\" showIfTruncated>\r\n  {{error}}\r\n</span>\r\n","<div class=\"mrd-select-option-item\" [ngClass]=\"{'selected': selected, 'filtered': filtered, 'focused': focused}\" (click)=\"optionClick()\">\r\n  <span>\r\n    <div *ngIf=\"multiple && !noCheckbox\" class=\"mrd-select-option-checkbox-wrapper\">\r\n      <!-- <span class=\"mrd-select-option-checkbox\" [ngClass]=\"{'selected': selected}\">\r\n        <ng-container *ngIf=\"selected\">\r\n          <svg fill=\"#ffffff\" width=\"16px\" height=\"16px\" viewBox=\"-4 0 32 32\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" stroke=\"#000000\" stroke-width=\"0.00032\">\r\n            <g id=\"SVGRepo_bgCarrier\" stroke-width=\"0\"></g>\r\n            <g id=\"SVGRepo_tracerCarrier\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></g>\r\n            <g id=\"SVGRepo_iconCarrier\"> <title>check</title> <path d=\"M19.375 5.063l-9.5 13.625-6.563-4.875-3.313 4.594 11.188 8.531 12.813-18.375z\"></path></g>\r\n          </svg>\r\n        </ng-container>\r\n      </span> -->\r\n      <mrd-checkbox [checked]=\"selected\"></mrd-checkbox>\r\n    </div>\r\n    <ng-content select=\"mrd-icon:not([icon-end]), [mrd-icon]:not([icon-end])\"></ng-content>\r\n    <span #optionValue class=\"mrd-select-option-value-text\"><ng-content></ng-content></span>\r\n    <ng-content select=\"mrd-icon[icon-end], [mrd-icon][icon-end]\"></ng-content>\r\n  </span>\r\n</div>\r\n","import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, Host, Input, Output, ViewChild, booleanAttribute } from '@angular/core';\r\nimport { MrdSelectComponent } from '../mrd-select/mrd-select.component';\r\n\r\n@Component({\r\n  selector: 'mrd-select-option',\r\n  templateUrl: './mrd-select-option.component.html',\r\n  styleUrls: ['./mrd-select-option.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MrdSelectOptionComponent implements AfterViewInit {\r\n\r\n  @ViewChild('optionValue') public optionValue: ElementRef<HTMLElement> | undefined;\r\n\r\n  @Input() public value: any;\r\n\r\n  @Input({transform: booleanAttribute}) public noCheckbox: boolean = false;\r\n\r\n  @Output() public optionClicked: EventEmitter<MrdSelectOptionChange> = new EventEmitter<MrdSelectOptionChange>();\r\n\r\n  public optionLabel: string;\r\n\r\n  public _selected: boolean = false;\r\n  public _filtered: boolean = false;\r\n  public _focused: boolean = false;\r\n\r\n  public multiple: boolean = false;\r\n\r\n  constructor(\r\n    private elementRef: ElementRef,\r\n    @Host() private select: MrdSelectComponent,\r\n    private cdr: ChangeDetectorRef\r\n  ) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    this.multiple = this.select.multiple;\r\n    if (this.optionValue) {\r\n      this.optionLabel = this.optionValue.nativeElement.innerText;\r\n    }\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  public optionClick(): void {\r\n    this.optionClicked.emit({key: this.value, value: this.optionValue?.nativeElement.innerText || '', option: this, checked: !this.selected});\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  public set selected(value: boolean) {\r\n    this._selected = value;\r\n    this.cdr.detectChanges();\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  public get selected(): boolean {\r\n    return this._selected;\r\n  }\r\n\r\n  public set filtered(value: boolean) {\r\n    this._filtered = value;\r\n    this.cdr.detectChanges();\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  public get filtered(): boolean {\r\n    return this._filtered;\r\n  }\r\n\r\n  public set focused(value: boolean) {\r\n    this._focused = value;\r\n    this.cdr.detectChanges();\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  public get focused(): boolean {\r\n    return this._focused;\r\n  }\r\n}\r\n\r\n\r\nexport interface MrdSelectOptionChange {\r\n  key: any;\r\n  value: string;\r\n  option: MrdSelectOptionComponent;\r\n  checked?: boolean;\r\n}\r\n","import { Component, EventEmitter, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'mrd-select-custom-trigger',\r\n  templateUrl: './mrd-select-custom-trigger.component.html',\r\n  styleUrls: ['./mrd-select-custom-trigger.component.scss']\r\n})\r\nexport class MrdSelectCustomTriggerComponent {\r\n\r\n  @Output() public triggerClick: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  public triggerClicked(): void {\r\n    this.triggerClick.emit();\r\n  }\r\n}\r\n","<span (click)=\"triggerClicked()\"><ng-content></ng-content></span>\r\n","<div #selectContainer class=\"mrd-select-container\" [ngClass]=\"{'mrd-select-disabled': formControl?.disabled}\">\r\n  <ng-container *ngIf=\"autoComplete\">\r\n    <input\r\n    (click)=\"triggerClicked()\"\r\n    [value]=\"value\"\r\n    (input)=\"autoCompleteInput($event)\"\r\n    (keydown)=\"onKeyDown($event)\"\r\n  >\r\n  </ng-container>\r\n\r\n  <ng-container *ngIf=\"!autoComplete\">\r\n    <ng-container *ngIf=\"customTrigger\">\r\n      <ng-content select=\"mrd-select-custom-trigger\"></ng-content>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"!customTrigger\">\r\n      <ng-container *ngIf=\"!chipSelection\">\r\n        <div class=\"mrd-select-trigger\" (click)=\"triggerClicked()\">\r\n          <span [mrdToolTip]=\"value\" showIfTruncated>{{value}}</span>\r\n          <svg fill=\"currentColor\" width=\"14px\" height=\"14px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <g id=\"SVGRepo_bgCarrier\" stroke-width=\"0\"></g>\r\n            <g id=\"SVGRepo_tracerCarrier\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"#CCCCCC\" stroke-width=\"0.048\"></g>\r\n            <g id=\"SVGRepo_iconCarrier\"><path d=\"M11.178 19.569a.998.998 0 0 0 1.644 0l9-13A.999.999 0 0 0 21 5H3a1.002 1.002 0 0 0-.822 1.569l9 13z\"></path></g>\r\n          </svg>\r\n        </div>\r\n      </ng-container>\r\n      <ng-container *ngIf=\"chipSelection\">\r\n        <div class=\"mrd-chip-container\">\r\n          <div class=\"mrd-chip-values\" *ngIf=\"chipSelection\">\r\n            <ng-container *ngIf=\"selectedOptions && selectedOptions.length > 0\">\r\n              <mrd-chip *ngFor=\"let option of selectedOptions\"\r\n                (close)=\"chipClosed(option)\"\r\n                [prefixIcon]=\"chipPrefixIcon\"\r\n                [suffixIcon]=\"chipSuffixIcon\"\r\n                >{{option.optionLabel}}</mrd-chip>\r\n            </ng-container>\r\n            <div class=\"mrd-select-trigger-chip\" (click)=\"triggerClicked()\">\r\n              <svg fill=\"currentColor\" width=\"14px\" height=\"14px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <g id=\"SVGRepo_bgCarrier\" stroke-width=\"0\"></g>\r\n                <g id=\"SVGRepo_tracerCarrier\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"#CCCCCC\" stroke-width=\"0.048\"></g>\r\n                <g id=\"SVGRepo_iconCarrier\"><path d=\"M11.178 19.569a.998.998 0 0 0 1.644 0l9-13A.999.999 0 0 0 21 5H3a1.002 1.002 0 0 0-.822 1.569l9 13z\"></path></g>\r\n              </svg>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ng-container>\r\n    </ng-container>\r\n  </ng-container>\r\n</div>\r\n\r\n<ng-template\r\n  cdk-connected-overlay\r\n  [cdkConnectedOverlayHasBackdrop]=\"true\"\r\n  cdkConnectedOverlayBackdropClass=\"cdk-overlay-transparent-backdrop\"\r\n  cdkConnectedOverlayPanelClass=\"mrd-select-options-overlay\"\r\n  [cdkConnectedOverlayOrigin]=\"selectContainer\"\r\n  [cdkConnectedOverlayOpen]=\"showOptions.value\"\r\n  [cdkConnectedOverlayPositions]=\"_positions\"\r\n  [cdkConnectedOverlayMinWidth]=\"optionsMinWidth\"\r\n  (backdropClick)=\"showOptions.value = false\"\r\n>\r\n  <div class=\"mrd-select-options-container\">\r\n    <mrd-select-option *ngIf=\"searchSelection\" class=\"mrd-select-search-option\" noCheckbox>\r\n      <input\r\n        placeholder=\"Suche\"\r\n        [value]=\"searchText\"\r\n        (input)=\"searchInput($event)\"\r\n        (click)=\"$event.stopPropagation()\"\r\n        (keydown)=\"onKeyDown($event)\"\r\n      >\r\n    </mrd-select-option>\r\n    <div class=\"mrd-select-options-scroll\">\r\n      <mrd-select-option *ngIf=\"nullable\" noCheckbox [value]=\"null\" (optionClicked)=\"removeSelected()\">{{multiple ? 'Auswahl löschen' : '-'}}</mrd-select-option>\r\n      <mrd-select-option *ngIf=\"searchSelection && searchText.length > 0 && showNoOptionsOnSearch\" noCheckbox>Keine Einträge gefunden</mrd-select-option>\r\n      <ng-content select=\"mrd-select-option\"></ng-content>\r\n    </div>\r\n  </div>\r\n</ng-template>","import { AfterContentInit, AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, ContentChildren, ElementRef, EventEmitter, Input, OnInit, Output, QueryList, ViewChild, booleanAttribute } from '@angular/core';\r\nimport { AccessableFormArray, AccessableFormControl, BasePushStrategyObject, ObservableValue, SubscriptionHandler, Util } from 'mrd-core';\r\nimport { MrdSelectOptionChange, MrdSelectOptionComponent } from '../mrd-select-option/mrd-select-option.component';\r\nimport { Observable, Subject, Subscription, defer, merge, startWith, switchMap } from 'rxjs';\r\nimport { MrdSelectCustomTriggerComponent } from '../mrd-select-custom-trigger/mrd-select-custom-trigger.component';\r\nimport { ConnectedPosition } from '@angular/cdk/overlay';\r\n\r\n@Component({\r\n  selector: 'mrd-select',\r\n  templateUrl: './mrd-select.component.html',\r\n  styleUrls: ['./mrd-select.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MrdSelectComponent extends BasePushStrategyObject implements OnInit, AfterContentInit, AfterViewInit {\r\n\r\n  @ViewChild('selectContainer') selectContainer: ElementRef;\r\n\r\n  @ContentChildren(MrdSelectOptionComponent) options: QueryList<MrdSelectOptionComponent>;\r\n\r\n  @ContentChild(MrdSelectCustomTriggerComponent) customTrigger: MrdSelectCustomTriggerComponent;\r\n\r\n  private _initialized = new Subject();\r\n  readonly optionSelectionChanges: Observable<any> = defer(() => {\r\n    const options = this.options;\r\n\r\n    if (options) {\r\n      return options.changes.pipe(\r\n        startWith(options),\r\n        switchMap(() => merge(...options.map(option => option.optionClicked))),\r\n      );\r\n    }\r\n\r\n    return this._initialized.pipe(switchMap(() => this.optionSelectionChanges));\r\n  });\r\n\r\n  @Input('mrdFormControl') formControl: AccessableFormControl;\r\n  @Input('mrdFormArray') formArrayControl: AccessableFormArray<any>;\r\n  @Input() public identifier: string = 'id';\r\n  @Input() public items: any[] = [];\r\n  @Input({transform: booleanAttribute}) autoComplete: boolean = false;\r\n  @Input({transform: booleanAttribute}) searchSelection: boolean = false;\r\n  @Input({transform: booleanAttribute}) chipSelection: boolean = false;\r\n  @Input({transform: booleanAttribute}) nullable: boolean = false;\r\n  @Input({transform: booleanAttribute})\r\n  get multiple(): boolean {\r\n    return this._multiple;\r\n  }\r\n  set multiple(value: boolean) {\r\n    this._multiple = value;\r\n  }\r\n  private _multiple: boolean = false;\r\n\r\n  @Input() public chipPrefixIcon: string;\r\n  @Input() public chipSuffixIcon: string;\r\n\r\n  @Output() touched: EventEmitter<void> = new EventEmitter<void>();\r\n  @Output() focused: EventEmitter<void> = new EventEmitter<void>();\r\n  @Output() blurred: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  public showOptions: ObservableValue<boolean> = new ObservableValue<boolean>(false);\r\n  public optionsVisible: boolean = false;\r\n  public _showNoOptionsOnSearch: boolean = false;\r\n\r\n  public value: string = '';\r\n  public searchText: string = '';\r\n\r\n  public optionsWidthExceeded: boolean = false;\r\n  public optionsHeightExceeded: boolean = false;\r\n\r\n  private optionChangeSubscription: Subscription;\r\n\r\n  _positions: ConnectedPosition[] = [\r\n    {\r\n      originX: 'start',\r\n      originY: 'bottom',\r\n      overlayX: 'start',\r\n      overlayY: 'top',\r\n    },\r\n    {\r\n      originX: 'end',\r\n      originY: 'bottom',\r\n      overlayX: 'end',\r\n      overlayY: 'top',\r\n    },\r\n    {\r\n      originX: 'start',\r\n      originY: 'top',\r\n      overlayX: 'start',\r\n      overlayY: 'bottom'\r\n    },\r\n    {\r\n      originX: 'end',\r\n      originY: 'top',\r\n      overlayX: 'end',\r\n      overlayY: 'bottom'\r\n    },\r\n  ];\r\n\r\n  constructor(\r\n    private elementRef: ElementRef,\r\n    protected cdr: ChangeDetectorRef\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this.watch(this.showOptions.changed, new SubscriptionHandler((value: boolean) => {\r\n    //   if (value) {\r\n    //     setTimeout(() => {\r\n    //       let optionsContainer = this.elementRef.nativeElement.querySelector('.mrd-select-options-container');\r\n    //       let optionsContainerRight = optionsContainer.getBoundingClientRect().right;\r\n    //       let optionsContainerBottom = optionsContainer.getBoundingClientRect().bottom;\r\n    //       let windowWidth = window.innerWidth;\r\n    //       if (optionsContainerRight > windowWidth) {\r\n    //         this.optionsWidthExceeded = true;\r\n    //       } else {\r\n    //         this.optionsWidthExceeded = false;\r\n    //       }\r\n    //       let windowHeight = window.innerHeight;\r\n    //       if (optionsContainerBottom > windowHeight) {\r\n    //         this.optionsHeightExceeded = true;\r\n    //       } else {\r\n    //         this.optionsHeightExceeded = false;\r\n    //       }\r\n    //       this.optionsVisible = true;\r\n    //       this.cdr.markForCheck();\r\n    //     });\r\n    //   } else {\r\n    //     this.optionsWidthExceeded = false;\r\n    //     this.optionsHeightExceeded = false;\r\n    //     this.optionsVisible = false;\r\n    //   }\r\n    // }));\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._initialized.next(null);\r\n    this._initialized.complete();\r\n\r\n    this.watch(this.options.changes.pipe(startWith(null)), new SubscriptionHandler(() => {\r\n      this._resetOptions();\r\n      if (Util.isDefined(this.formArrayControl) && Util.isDefined(this.formArrayControl.value)) {\r\n        let selectedValues = (this.formArrayControl.value).map(value => value[this.identifier]);\r\n        this.options.forEach(option => {\r\n          if (selectedValues.includes(option.value)) {\r\n            option.optionClick();\r\n          }\r\n        });\r\n      }\r\n    }));\r\n\r\n    if (Util.isDefined(this.customTrigger)) {\r\n      this.watch(this.customTrigger.triggerClick, new SubscriptionHandler(() => {\r\n        this.triggerClicked();\r\n      }));\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (Util.isDefined(this.formControl) && Util.isDefined(this.formArrayControl)) {\r\n      throw new Error('Es kann nur ein FormControl oder ein FormArrayControl verwendet werden.');\r\n    }\r\n\r\n    if (Util.isDefined(this.formControl)) {\r\n      this.watch(this.formControl.valueChanges, new SubscriptionHandler(() => this.formControlChanged()));\r\n    }\r\n    if (Util.isDefined(this.formArrayControl)) {\r\n      this.watch(this.formArrayControl.control.valueChanges, new SubscriptionHandler(() => this.formArrayControlChanged()));\r\n    }\r\n\r\n    if (Util.isDefined(this.formControl) && Util.isDefined(this.formControl.value)) {\r\n      if (!this.multiple) {\r\n        this.options.find(option => option.value === this.formControl.value)?.optionClick();\r\n      } else {\r\n        let selectedValues = this.formControl.value as any[];\r\n        this.options.forEach(option => {\r\n          if (selectedValues.includes(option.value)) {\r\n            option.optionClick();\r\n          }\r\n        });\r\n      }\r\n    }\r\n    if (Util.isDefined(this.formArrayControl) && Util.isDefined(this.formArrayControl.value)) {\r\n      let selectedValues = (this.formArrayControl.value).map(value => value[this.identifier]);\r\n      this.options.forEach(option => {\r\n        if (selectedValues.includes(option.value)) {\r\n          option.optionClick();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private formControlChanged(): void {\r\n    if (this.autoComplete) {\r\n      this.value = this.formControl.value;\r\n      this.options.forEach(option => {\r\n        option.focused = false;\r\n        if ((option.optionValue?.nativeElement.innerText || '').toLowerCase().indexOf(this.value?.toLowerCase()) > -1) {\r\n          option.filtered = false;\r\n        } else {\r\n          option.filtered = true;\r\n        }\r\n      });\r\n      if (this.value.length > 0) {\r\n        let filteredOptions = this.options.filter(option => !option.filtered);\r\n        if (filteredOptions.length > 0) {\r\n          filteredOptions[0].focused = true;\r\n        }\r\n        this.showNoOptionsOnSearch = filteredOptions.length === 0;\r\n      }\r\n    } else {\r\n      if (!Util.isDefined(this.formControl.value)) {\r\n        this.value = '';\r\n        this.options.forEach(option => option.selected = false);\r\n      } else {\r\n        if (!this.multiple) {\r\n          this.options.forEach(option => option.selected = false);\r\n          let option = this.options.find(option => option.value === this.formControl.value);\r\n          if (Util.isDefined(option)) {\r\n            option.selected = true;\r\n            this.value = option.optionValue?.nativeElement.innerText || '';\r\n          }\r\n        } else {\r\n          let selectedValues = this.formControl.value as any[];\r\n          this.options.forEach(option => {\r\n            if (selectedValues.includes(option.value)) {\r\n              option.selected = true;\r\n            } else {\r\n              option.selected = false;\r\n            }\r\n          });\r\n          let selectedOptions = this.options.filter(option => option.selected);\r\n          this.value = selectedOptions.length === 0 ? '' : selectedOptions.map(option => option.optionValue?.nativeElement.innerText || '').join(', ');\r\n        }\r\n      }\r\n    }\r\n    this.cdr.markForCheck();\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  private formArrayControlChanged(): void {\r\n    if (this.autoComplete) {\r\n      // TODO: Implement\r\n    } else {\r\n      if (!Util.isDefined(this.formArrayControl.control.value) || (this.formArrayControl.control.value as any[]).length === 0) {\r\n        this.value = '';\r\n        this.options.forEach(option => option.selected = false);\r\n      } else {\r\n        let selectedValues = (this.formArrayControl.control.value as any[]).map(value => value[this.identifier]);\r\n        this.options.forEach(option => {\r\n          if (selectedValues.includes(option.value)) {\r\n            option.selected = true;\r\n          } else {\r\n            option.selected = false;\r\n          }\r\n        });\r\n        let selectedOptions = this.options.filter(option => option.selected);\r\n        this.value = selectedOptions.length === 0 ? '' : selectedOptions.map(option => option.optionValue?.nativeElement.innerText || '').join(', ');\r\n      }\r\n    }\r\n    this.cdr.markForCheck();\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  private _resetOptions(): void {\r\n    if (Util.isDefined(this.optionChangeSubscription) && !this.optionChangeSubscription.closed) {\r\n      this.optionChangeSubscription.unsubscribe();\r\n    }\r\n    this.optionChangeSubscription = this.watch(this.optionSelectionChanges, new SubscriptionHandler((event: MrdSelectOptionChange) => {\r\n      if (Util.isDefined(event)) {\r\n        if (!this.multiple) {\r\n          this.options.forEach(option => option.selected = false);\r\n        }\r\n        this.options.forEach(option => option.focused = false);\r\n        this.searchText = '';\r\n        this.showNoOptionsOnSearch = false;\r\n        if (Util.isDefined(event.option) && !this.autoComplete) {\r\n          event.option.selected = this.multiple ? event.checked : true;\r\n          this.cdr.markForCheck();\r\n          this.cdr.detectChanges();\r\n        }\r\n        if (!this.multiple) {\r\n          if (Util.isDefined(this.formControl) && this.formControl.value !== event.key) {\r\n            this.formControl.setValue(event.key);\r\n          } else {\r\n            this.value = event.value;\r\n          }\r\n          this.showOptions.value = false;\r\n        } else {\r\n          let selectedOptions = this.options.filter(option => option.selected);\r\n          if (Util.isDefined(this.formControl)) {\r\n            this.formControl.setValue(selectedOptions.length === 0 ? null : selectedOptions.map(option => option.value));\r\n          }\r\n          if (Util.isDefined(this.formArrayControl)) {\r\n            this.formArrayControl.reset(selectedOptions.length === 0 ? [] : selectedOptions.map(option => this.items.find(item => item[this.identifier] === option.value)));\r\n          }\r\n          // this.value = selectedOptions.length === 0 ? '' : selectedOptions.map(option => option.optionValue?.nativeElement.innerText || '').join(', ');\r\n        }\r\n      }\r\n      this.cdr.detectChanges();\r\n    }));\r\n  }\r\n\r\n  public removeSelected(): void {\r\n    // this.options.forEach(option => option.selected = false);\r\n    if (Util.isDefined(this.formControl)) {\r\n      this.formControl.setValue(null);\r\n    }\r\n    if (Util.isDefined(this.formArrayControl)) {\r\n      this.formArrayControl.reset([]);\r\n    }\r\n    // this.value = '';\r\n    if (!this.multiple) {\r\n      this.showOptions.value = false;\r\n    }\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  public chipClosed(option: MrdSelectOptionComponent): void {\r\n    option.selected = false;\r\n    let selectedOptions = this.options.filter(option => option.selected);\r\n    if (Util.isDefined(this.formControl)) {\r\n      this.formControl.setValue(selectedOptions.length === 0 ? null : selectedOptions.map(option => option.value));\r\n    }\r\n    if (Util.isDefined(this.formArrayControl)) {\r\n      this.formArrayControl.reset(selectedOptions.length === 0 ? [] : selectedOptions.map(option => this.items.find(item => item[this.identifier] === option.value)));\r\n    }\r\n    // this.value = selectedOptions.length === 0 ? '' : selectedOptions.map(option => option.optionValue?.nativeElement.innerText || '').join(', ');\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  public autoCompleteInput(event: InputEvent): void {\r\n    if (Util.isDefined(this.formControl)) {\r\n      this.formControl.setValue((event.target as HTMLInputElement).value);\r\n    }\r\n    // this.value = (event.target as HTMLInputElement).value;\r\n    // this.options.forEach(option => {\r\n    //   option.focused = false;\r\n    //   if ((option.optionValue?.nativeElement.innerText || '').toLowerCase().indexOf(this.value.toLowerCase()) > -1) {\r\n    //     option.filtered = false;\r\n    //   } else {\r\n    //     option.filtered = true;\r\n    //   }\r\n    // });\r\n    // if (this.value.length > 0) {\r\n    //   let filteredOptions = this.options.filter(option => !option.filtered);\r\n    //   if (filteredOptions.length > 0) {\r\n    //     filteredOptions[0].focused = true;\r\n    //   }\r\n    //   this.showNoOptionsOnSearch = filteredOptions.length === 0;\r\n    // }\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  public searchInput(event: InputEvent): void {\r\n    this.searchText = (event.target as HTMLInputElement).value;\r\n    this.options.forEach(option => {\r\n      option.focused = false;\r\n      if ((option.optionValue?.nativeElement.innerText || '').toLowerCase().indexOf(this.searchText.toLowerCase()) > -1) {\r\n        option.filtered = false;\r\n      } else {\r\n        option.filtered = true;\r\n      }\r\n    });\r\n    if (this.searchText.length > 0) {\r\n      let filteredOptions = this.options.filter(option => !option.filtered);\r\n      if (filteredOptions.length > 0) {\r\n        filteredOptions[0].focused = true;\r\n      }\r\n      this.showNoOptionsOnSearch = filteredOptions.length === 0;\r\n    }\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  public onKeyDown(event: KeyboardEvent): void {\r\n    let filteredOptions = this.options.filter(option => !option.filtered);\r\n    if (event.key === 'Enter') {\r\n      let selectedOption = filteredOptions.find(option => option.focused);\r\n      if (Util.isDefined(selectedOption)) {\r\n        selectedOption.optionClick();\r\n      }\r\n    }\r\n    if (event.key === 'ArrowDown') {\r\n      let focusedOption = filteredOptions.find(option => option.focused);\r\n      if (Util.isDefined(focusedOption)) {\r\n        let focusedOptionIndex = filteredOptions.findIndex((option) => option.focused);\r\n        if (focusedOptionIndex > -1 && focusedOptionIndex < filteredOptions.length - 2) {\r\n          focusedOption.focused = false;\r\n          filteredOptions[focusedOptionIndex + 1].focused = true;\r\n        }\r\n      } else {\r\n        filteredOptions[0].focused = true;\r\n      }\r\n      this.cdr.markForCheck();\r\n    }\r\n    if (event.key === 'ArrowUp') {\r\n      let focusedOption = filteredOptions.find(option => option.focused);\r\n      if (Util.isDefined(focusedOption)) {\r\n        let focusedOptionIndex = filteredOptions.findIndex((option) => option.focused);\r\n        if (focusedOptionIndex > 0) {\r\n          focusedOption.focused = false;\r\n          filteredOptions[focusedOptionIndex - 1].focused = true;\r\n        }\r\n      } else {\r\n        filteredOptions[filteredOptions.length - 1].focused = true;\r\n      }\r\n      this.cdr.markForCheck();\r\n    }\r\n  }\r\n\r\n  public triggerClicked(): void {\r\n    if ((!Util.isDefined(this.formControl) || !this.formControl.disabled) && (!Util.isDefined(this.formArrayControl) || !this.formArrayControl.control.disabled)) {\r\n      this.touched.emit();\r\n      this.focused.emit();\r\n      this.showOptions.value = true;\r\n      setTimeout(() => {\r\n        let selectedOption = document.querySelector('.mrd-select-options-overlay .mrd-select-options-scroll .mrd-select-option-item.selected');\r\n        if (Util.isDefined(selectedOption)) {\r\n          selectedOption.scrollIntoView({behavior: 'smooth', block: 'nearest', inline: 'nearest'});\r\n        }\r\n      }, 10);\r\n      this.cdr.markForCheck();\r\n    }\r\n  }\r\n\r\n  public get selectedOptions(): MrdSelectOptionComponent[] {\r\n    return this.options.filter(option => option.selected);\r\n  }\r\n\r\n  public set showNoOptionsOnSearch(value: boolean) {\r\n    this._showNoOptionsOnSearch = value;\r\n    this.cdr.markForCheck();\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  public get showNoOptionsOnSearch(): boolean {\r\n    return this._showNoOptionsOnSearch;\r\n  }\r\n\r\n  public focus(event: FocusEvent): void {\r\n    this.focused.emit();\r\n  }\r\n\r\n  public blur(event: FocusEvent): void {\r\n    this.blurred.emit();\r\n  }\r\n\r\n  public get optionsMinWidth(): string {\r\n    return this.selectContainer ? `${this.selectContainer.nativeElement.getBoundingClientRect().width}px` : 'auto';\r\n  }\r\n}\r\n","import { ColorUtil } from './../../../../common/util/color.util';\r\nimport { AfterViewInit, booleanAttribute, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, Input, OnDestroy } from '@angular/core';\r\nimport { MrdInputComponent } from '../mrd-input/mrd-input.component';\r\nimport { MrdLabelComponent } from '../mrd-label/mrd-label.component';\r\nimport { BaseObject, SubscriptionHandler, Util } from 'mrd-core';\r\nimport { MrdErrorComponent } from '../mrd-error/mrd-error.component';\r\nimport { MrdSelectComponent } from '../mrd-select/mrd-select.component';\r\nimport { ConfigUtil } from '../../../../common/util/config.util';\r\nimport { MrdConfigModel } from '../../../../common/model/config.model';\r\nimport { sizeAttribute } from '../../../../common/transforms/size-transform';\r\nimport { colorAttribute } from '../../../../common/transforms/color-transform';\r\n\r\n@Component({\r\n  selector: 'mrd-form-field',\r\n  host: {\r\n    \"[style.font-family]\": \"config?.baseFont.family\"\r\n  },\r\n  templateUrl: './mrd-form-field.component.html',\r\n  styleUrls: ['./mrd-form-field.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MrdFormFieldComponent extends BaseObject implements AfterViewInit, OnDestroy {\r\n\r\n  private config: MrdConfigModel = ConfigUtil.getConfig();\r\n\r\n  @ContentChild(MrdInputComponent) input: MrdInputComponent;\r\n  @ContentChild(MrdSelectComponent) select: MrdSelectComponent;\r\n  @ContentChild(MrdLabelComponent) label: MrdLabelComponent;\r\n  @ContentChild(MrdErrorComponent) error: MrdErrorComponent;\r\n\r\n  // @Input() public appearance: 'standard' | 'outline' = 'standard';\r\n  @Input({transform: booleanAttribute}) public outline: boolean = false;\r\n  @Input({transform: booleanAttribute}) public fill: boolean = false;\r\n\r\n  @Input({transform: booleanAttribute}) public dark: boolean = false;\r\n\r\n  @Input() public requiredAsterisk: boolean = true;\r\n\r\n  @Input({transform: booleanAttribute}) public rounded: boolean = false;\r\n  @Input({transform: sizeAttribute}) public borderRadius: string;\r\n  @Input({alias: 'text-centered', transform: booleanAttribute}) public centered: boolean = false;\r\n  @Input({alias: 'text-end', transform: booleanAttribute}) public textEnd: boolean = false;\r\n\r\n  @Input({transform: colorAttribute}) public fillColor: string;\r\n\r\n  public disabled: boolean = false;\r\n  public focused: boolean = false;\r\n  public hasError: boolean = false;\r\n\r\n  public focusColor: string = this.config.formField?.focusColor ?? this.config.baseColors.primary as string;\r\n  public focusColorDark: string = this.config.formField?.focusColorDark ?? ColorUtil.changeColorBrightnessPercent(this.config.baseColors.primary as string, 10);\r\n  public focusColorOutline: string = this.config.formField?.focusColorOutline ?? ColorUtil.changeColorOpacity(this.config.baseColors.primary as string, 40);\r\n  public errorColor: string = this.config.formField?.errorColor ?? this.config.baseColors.warn as string;\r\n  public errorColorDark: string = this.config.formField?.erroColorDark ?? ColorUtil.changeColorBrightnessPercent(this.config.baseColors.warn as string, 10);\r\n  public errorColorOutline: string = this.config.formField?.errorColorOutline ?? ColorUtil.changeColorOpacity(this.config.baseColors.warn as string, 40);\r\n\r\n  private timeouts: any[] = [];\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    super.ngOnDestroy();\r\n    this.timeouts.forEach((timeout) => clearTimeout(timeout));\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.borderRadius = this.borderRadius ?? this.rounded ? this.config.formField?.borderRadiusRounded : this.config.formField?.borderRadius;\r\n    this.fillColor = this.fillColor ?? this.config.formField?.fill?.backgroundColor;\r\n\r\n    if (Util.isDefined(this.input)) {\r\n      this.input.centered = this.centered;\r\n      this.input.textEnd = this.textEnd;\r\n      if (Util.isDefined(this.input.formControl)) {\r\n        this.watch(this.input.formControl.valueChanges, new SubscriptionHandler(() => {\r\n          if (Util.isDefined(this.error)) {\r\n            this.error.error = Util.isDefined(this.input.formControl.error) ? this.input.formControl.error.error : '';\r\n          }\r\n          this.hasError = Util.isDefined(this.input.formControl.error);\r\n          this.input.formControl.markAsDirty();\r\n          this.cdr.markForCheck();\r\n        }));\r\n        this.watch(this.input.formControl.control.statusChanges, new SubscriptionHandler(() => {\r\n          if (this.requiredAsterisk && Util.isDefined(this.label) && this.input.formControl.required) {\r\n            this.timeouts.push(setTimeout(() => this.label.required.value = true, 1));\r\n          } else if (Util.isDefined(this.label)) {\r\n            this.timeouts.push(setTimeout(() => this.label.required.value = false, 1));\r\n          }\r\n          this.disabled = this.input.formControl.disabled;\r\n          this.cdr.markForCheck();\r\n        }));\r\n        if (Util.isDefined(this.error) && this.input.formControl.touched) {\r\n          this.error.error = Util.isDefined(this.input.formControl.error) ? this.input.formControl.error.error : '';\r\n          this.hasError = Util.isDefined(this.input.formControl.error);\r\n        }\r\n        if (this.requiredAsterisk && Util.isDefined(this.label) && this.input.formControl.required) {\r\n          this.timeouts.push(setTimeout(() => this.label.required.value = true, 1));\r\n        }\r\n        this.disabled = this.input.formControl.disabled;\r\n        if (Util.isDefined(this.input.formControl.value)) {\r\n          this.input.formControl.control.updateValueAndValidity({emitEvent: false});\r\n          if (Util.isDefined(this.error)) {\r\n            this.error.error = Util.isDefined(this.input.formControl.error) ? this.input.formControl.error.error : '';\r\n          }\r\n          this.hasError = Util.isDefined(this.input.formControl.error);\r\n        }\r\n        this.cdr.detectChanges();\r\n      }\r\n      if (Util.isDefined(this.label)) {\r\n        if ((Util.isDefined(this.input.formControl) && Util.isDefined(this.input.formControl.value) && this.input.formControl.value !== '') ||\r\n          (Util.isDefined(this.input.value) && this.input.value !== '')) {\r\n          this.label.floating.value = true;\r\n        }\r\n        if (this.input.textarea) {\r\n          this.label.labelTop = true;\r\n          this.cdr.detectChanges();\r\n        }\r\n      }\r\n      this.input.touched.subscribe(() => {\r\n        if (Util.isDefined(this.input.formControl)) {\r\n          this.input.formControl.markAsTouched();\r\n        }\r\n        this.cdr.markForCheck();\r\n      });\r\n      this.input.focused.subscribe(() => {\r\n        this.focused = true;\r\n        if (Util.isDefined(this.label)) {\r\n          this.label.floating.value = true;\r\n        }\r\n        this.cdr.markForCheck();\r\n      });\r\n\r\n      this.input.blurred.subscribe(() => {\r\n        this.focused = false;\r\n        if (Util.isDefined(this.label)) {\r\n          if (Util.isDefined(this.input.formControl)) {\r\n            if (!Util.isDefined(this.input.formControl.value) || this.input.formControl.value === '') {\r\n              this.label.floating.value = false;\r\n            }\r\n          } else if (!Util.isDefined(this.input.value) || this.input.value === '') {\r\n            this.label.floating.value = false;\r\n          }\r\n        }\r\n        if (Util.isDefined(this.input.formControl)) {\r\n          this.input.formControl.control.updateValueAndValidity({emitEvent: false});\r\n          if (Util.isDefined(this.error)) {\r\n            this.error.error = Util.isDefined(this.input.formControl.error) ? this.input.formControl.error.error : '';\r\n          }\r\n          this.hasError = Util.isDefined(this.input.formControl.error);\r\n        }\r\n        this.cdr.markForCheck();\r\n      });\r\n    }\r\n\r\n    if (Util.isDefined(this.select)) {\r\n      if (Util.isDefined(this.select.formControl)) {\r\n        this.watch(this.select.formControl.valueChanges, new SubscriptionHandler(() => {\r\n          if (Util.isDefined(this.error)) {\r\n            this.error.error = Util.isDefined(this.select.formControl.error) ? this.select.formControl.error.error : '';\r\n          }\r\n          this.hasError = Util.isDefined(this.select.formControl.error);\r\n          if (Util.isDefined(this.label)) {\r\n            if (Util.isDefined(this.select.formControl.value) && this.select.formControl.value !== '') {\r\n              this.label.floating.value = true;\r\n            } else {\r\n              this.label.floating.value = false;\r\n            }\r\n          }\r\n          this.select.formControl.markAsDirty();\r\n          this.cdr.markForCheck();\r\n        }));\r\n        this.watch(this.select.formControl.control.statusChanges, new SubscriptionHandler(() => {\r\n          if (this.requiredAsterisk && Util.isDefined(this.label) && this.select.formControl.required) {\r\n            this.timeouts.push(setTimeout(() => this.label.required.value = true, 1));\r\n          } else {\r\n            this.timeouts.push(setTimeout(() => this.label.required.value = false, 1));\r\n          }\r\n          this.disabled = this.select.formControl.disabled;\r\n          this.cdr.markForCheck();\r\n        }));\r\n        if (Util.isDefined(this.error) && this.select.formControl.touched) {\r\n          this.error.error = Util.isDefined(this.select.formControl.error) ? this.select.formControl.error.error : '';\r\n        }\r\n        if (this.requiredAsterisk && Util.isDefined(this.label) && this.select.formControl.required) {\r\n          this.timeouts.push(setTimeout(() => this.label.required.value = true, 1));\r\n        }\r\n        this.disabled = this.select.formControl.disabled;\r\n        if (Util.isDefined(this.select.formControl.value)) {\r\n          this.select.formControl.control.updateValueAndValidity({emitEvent: false});\r\n          if (Util.isDefined(this.error)) {\r\n            this.error.error = Util.isDefined(this.select.formControl.error) ? this.select.formControl.error.error : '';\r\n          }\r\n          this.hasError = Util.isDefined(this.select.formControl.error);\r\n        }\r\n        this.cdr.detectChanges();\r\n      }\r\n\r\n      if (Util.isDefined(this.select.formArrayControl)) {\r\n        this.watch(this.select.formArrayControl.control.valueChanges, new SubscriptionHandler(() => {debugger\r\n          if (Util.isDefined(this.error)) {\r\n            this.error.error = Util.isDefined(this.select.formArrayControl.error) ? this.select.formArrayControl.error.error : '';\r\n          }\r\n          this.hasError = Util.isDefined(this.select.formArrayControl.error);\r\n          if (Util.isDefined(this.label)) {\r\n            if (Util.isDefined(this.select.formArrayControl.control.value) && this.select.formArrayControl.control.value.length > 0) {\r\n              this.label.floating.value = true;\r\n            } else {\r\n              this.label.floating.value = false;\r\n            }\r\n          }\r\n          this.select.formArrayControl.markAsDirty();\r\n          this.cdr.markForCheck();\r\n        }));\r\n        this.watch(this.select.formArrayControl.control.statusChanges, new SubscriptionHandler(() => {\r\n          if (this.requiredAsterisk && Util.isDefined(this.label) && this.select.formArrayControl.required) {\r\n            this.timeouts.push(setTimeout(() => this.label.required.value = true, 1));\r\n          } else {\r\n            this.timeouts.push(setTimeout(() => this.label.required.value = false, 1));\r\n          }\r\n          this.disabled = this.select.formArrayControl.control.disabled;\r\n          this.cdr.markForCheck();\r\n        }));\r\n        if (Util.isDefined(this.error) && this.select.formArrayControl.touched) {\r\n          this.error.error = Util.isDefined(this.select.formArrayControl.error) ? this.select.formArrayControl.error.error : '';\r\n        }\r\n        if (this.requiredAsterisk && Util.isDefined(this.label) && this.select.formArrayControl.required) {\r\n          this.timeouts.push(setTimeout(() => this.label.required.value = true, 1));\r\n        }\r\n        this.disabled = this.select.formArrayControl.control.disabled;\r\n        if (this.select.formArrayControl.value.length > 0) {\r\n          this.select.formArrayControl.control.updateValueAndValidity({emitEvent: false});\r\n          if (Util.isDefined(this.error)) {\r\n            this.error.error = Util.isDefined(this.select.formArrayControl.error) ? this.select.formArrayControl.error.error : '';\r\n          }\r\n          this.hasError = Util.isDefined(this.select.formArrayControl.error);\r\n        }\r\n        this.cdr.detectChanges();\r\n      }\r\n\r\n      if (Util.isDefined(this.label)) {\r\n        if ((Util.isDefined(this.select.formControl) && Util.isDefined(this.select.formControl.value) && this.select.formControl.value !== '') ||\r\n          (Util.isDefined(this.select.value) && this.select.value !== '')) {\r\n          this.label.floating.value = true;\r\n        }\r\n        if ((Util.isDefined(this.select.formArrayControl) && Util.isDefined(this.select.formArrayControl.value) && this.select.formArrayControl.value.length > 0) ||\r\n          (Util.isDefined(this.select.value) && this.select.value.length > 0)) {\r\n          this.label.floating.value = true;\r\n        }\r\n      }\r\n      this.select.touched.subscribe(() => {\r\n        if (this.select.autoComplete && Util.isDefined(this.select.formControl)) {\r\n          this.select.formControl.markAsTouched();\r\n        }\r\n        if (this.select.autoComplete && Util.isDefined(this.select.formArrayControl)) {\r\n          this.select.formArrayControl.markAsTouched();\r\n        }\r\n      });\r\n      this.select.focused.subscribe(() => {\r\n        this.focused = true;\r\n        if (this.select.autoComplete && Util.isDefined(this.label)) {\r\n          this.label.floating.value = true;\r\n        }\r\n        this.cdr.detectChanges();\r\n      });\r\n      this.select.blurred.subscribe(() => {\r\n        this.focused = false;\r\n        if (Util.isDefined(this.label)) {\r\n          if ((!Util.isDefined(this.select.formControl) || !Util.isDefined(this.select.formControl.value) || this.select.formControl.value === '') &&\r\n            (!Util.isDefined(this.select.value) || this.select.value === '')) {\r\n            this.label.floating.value = false;\r\n          }\r\n          if ((!Util.isDefined(this.select.formArrayControl) || !Util.isDefined(this.select.formArrayControl.value) || this.select.formArrayControl.value.length === 0) &&\r\n            (!Util.isDefined(this.select.value) || this.select.value.length === 0)) {\r\n            this.label.floating.value = false;\r\n          }\r\n        }\r\n        if (Util.isDefined(this.select.formControl)) {\r\n          this.select.formControl.control.updateValueAndValidity({emitEvent: false});\r\n          if (Util.isDefined(this.error)) {\r\n            this.error.error = Util.isDefined(this.select.formControl.error) ? this.select.formControl.error.error : '';\r\n          }\r\n          this.hasError = Util.isDefined(this.select.formControl.error);\r\n        }\r\n        if (Util.isDefined(this.select.formArrayControl)) {\r\n          this.select.formArrayControl.control.updateValueAndValidity({emitEvent: false});\r\n          if (Util.isDefined(this.error)) {\r\n            this.error.error = Util.isDefined(this.select.formArrayControl.error) ? this.select.formArrayControl.error.error : '';\r\n          }\r\n          this.hasError = Util.isDefined(this.select.formArrayControl.error);\r\n        }\r\n        this.cdr.markForCheck();\r\n      });\r\n    }\r\n    this.cdr.markForCheck();\r\n  }\r\n}\r\n","<div class=\"mrd-form-field-container\"\r\n  [ngClass]=\"{'mrd-form-field-container-fill': fill, 'mrd-form-field-container-outline': outline}\"\r\n  [style.--focus-color]=\"focusColor\"\r\n  [style.--error-color]=\"errorColor\"\r\n  [style.--focus-color-dark]=\"focusColorDark\"\r\n  [style.--error-color-dark]=\"errorColorDark\"\r\n  [style.--focus-color-outline]=\"focusColorOutline\"\r\n  [style.--error-color-outline]=\"errorColorOutline\"\r\n  [style.--ff-border-radius]=\"borderRadius\"\r\n  [style.--ff-fill-color]=\"fillColor\"\r\n>\r\n  <div class=\"mrd-form-field-content-container\"\r\n    [ngClass]=\"{'mrd-form-field-error': hasError, 'mrd-form-field-disabled': disabled, 'mrd-form-field-focused': focused,\r\n      'mrd-form-field-content-container-outline': outline, 'mrd-form-field-content-container-fill': fill, 'mrd-form-field-dark-theme': dark}\">\r\n    <ng-content select=\"mrd-prefix\"></ng-content>\r\n    <div class=\"mrd-form-field-input-content-container\">\r\n\r\n      <ng-content select=\"mrd-input\"></ng-content>\r\n      <ng-content select=\"mrd-select\"></ng-content>\r\n      <ng-content select=\"mrd-label\"></ng-content>\r\n\r\n    </div>\r\n    <ng-content select=\"mrd-suffix\"></ng-content>\r\n  </div>\r\n  <div class=\"mrd-form-field-subcontent-container\">\r\n    <ng-content select=\"mrd-hint\"></ng-content>\r\n    <ng-content select=\"mrd-error\"></ng-content>\r\n  </div>\r\n</div>\r\n","import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, ViewChild, numberAttribute } from '@angular/core';\r\nimport { Util } from 'mrd-core';\r\n\r\n@Component({\r\n  selector: 'mrd-hint',\r\n  templateUrl: './mrd-hint.component.html',\r\n  styleUrls: ['./mrd-hint.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MrdHintComponent implements AfterViewInit {\r\n\r\n  @ViewChild('hintContent') hintContent: ElementRef;\r\n\r\n  @Input({transform: numberAttribute}) public ellipsis: number;\r\n\r\n  public tootltipText: string = '';\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef\r\n  ) { }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (Util.isDefined(this.hintContent) && Util.isDefined(this.hintContent.nativeElement) && Util.isDefined(this.hintContent.nativeElement.innerText)) {\r\n      this.tootltipText = this.hintContent.nativeElement.innerText;\r\n    }\r\n\r\n    if (this.ellipsis !== undefined && Number.isNaN(this.ellipsis)) {\r\n      this.ellipsis = 1;\r\n    }\r\n    this.cdr.detectChanges();\r\n  }\r\n}\r\n","<span class=\"mrd-hint-container\"\r\n  [ngClass]=\"{'mrd-hint-ellipsis': ellipsis > 0}\"\r\n  [ngStyle]=\"{'-webkit-line-clamp': ellipsis > 0 ? ellipsis : ''}\"\r\n  [mrdToolTip]=\"tootltipText\" showIfTruncated #hintContent>\r\n  <ng-content></ng-content>\r\n</span>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'mrd-prefix',\r\n  templateUrl: './mrd-prefix.component.html',\r\n  styleUrls: ['./mrd-prefix.component.scss']\r\n})\r\nexport class MrdPrefixComponent {\r\n\r\n}\r\n","<ng-content></ng-content>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'mrd-suffix',\r\n  templateUrl: './mrd-suffix.component.html',\r\n  styleUrls: ['./mrd-suffix.component.scss']\r\n})\r\nexport class MrdSuffixComponent {\r\n\r\n}\r\n","<ng-content></ng-content>\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MrdFormFieldComponent } from './components/mrd-form-field/mrd-form-field.component';\nimport { MrdTooltipModule } from '../mrd-tooltip/mrd-tooltip.module';\nimport { MrdErrorComponent } from './components/mrd-error/mrd-error.component';\nimport { MrdHintComponent } from './components/mrd-hint/mrd-hint.component';\nimport { MrdLabelComponent } from './components/mrd-label/mrd-label.component';\nimport { MrdPrefixComponent } from './components/mrd-prefix/mrd-prefix.component';\nimport { MrdSuffixComponent } from './components/mrd-suffix/mrd-suffix.component';\nimport { MrdDatePickerToggle, MrdInputComponent } from './components/mrd-input/mrd-input.component';\nimport { MrdSelectComponent } from './components/mrd-select/mrd-select.component';\nimport { MrdChipModule } from '../mrd-chip/mrd-chip.module';\nimport { MrdSelectOptionComponent } from './components/mrd-select-option/mrd-select-option.component';\nimport { MrdSelectCustomTriggerComponent } from './components/mrd-select-custom-trigger/mrd-select-custom-trigger.component';\nimport { MrdCheckboxModule } from '../mrd-checkbox/mrd-checkbox.module';\nimport { OverlayModule } from '@angular/cdk/overlay';\n\n\n\n@NgModule({\n  declarations: [\n    MrdFormFieldComponent, \n    MrdInputComponent,\n    MrdSelectComponent,\n    MrdSelectOptionComponent,\n    MrdSelectCustomTriggerComponent,\n    MrdErrorComponent, \n    MrdHintComponent, \n    MrdLabelComponent, \n    MrdPrefixComponent, \n    MrdSuffixComponent,\n    MrdDatePickerToggle\n  ],\n  imports: [\n    CommonModule,\n    OverlayModule,\n    MrdTooltipModule,\n    MrdChipModule,\n    MrdCheckboxModule\n  ],\n  exports: [\n    MrdFormFieldComponent, \n    MrdInputComponent,\n    MrdSelectComponent,\n    MrdSelectOptionComponent,\n    MrdSelectCustomTriggerComponent,\n    MrdErrorComponent, \n    MrdHintComponent, \n    MrdLabelComponent, \n    MrdPrefixComponent, \n    MrdSuffixComponent,\n    MrdDatePickerToggle\n  ]\n})\nexport class MrdFormFieldModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["_c0","i1","_c2","_c3","_c4","i1.MrdIconRegistryService","_c1","i1.FlyOutService","i1.MrdSelectComponent"],"mappings":"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"}