{"version":3,"file":"mrd-core-ui.mjs","sources":["../../../projects/mrd-core-ui/src/lib/common/util/config.util.ts","../../../projects/mrd-core-ui/src/lib/common/util/color.util.ts","../../../projects/mrd-core-ui/src/lib/common/transforms/color-transform.ts","../../../projects/mrd-core-ui/src/lib/common/transforms/size-transform.ts","../../../projects/mrd-core-ui/src/lib/common/transforms/time-transform.ts","../../../projects/mrd-core-ui/src/lib/common/service/mrd-icon-registry.service.ts","../../../projects/mrd-core-ui/src/lib/common/directive/hide-if-truncated/hide-if-truncated.directive.ts","../../../projects/mrd-core-ui/src/lib/common/directive/mrd-directive.module.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-progress-bar/components/mrd-progress-bar/mrd-progress-bar.component.html","../../../projects/mrd-core-ui/src/lib/modules/mrd-progress-bar/components/mrd-progress-bar/mrd-progress-bar.component.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-progress-spinner/components/mrd-progress-spinner/mrd-progress-spinner.component.html","../../../projects/mrd-core-ui/src/lib/modules/mrd-progress-spinner/components/mrd-progress-spinner/mrd-progress-spinner.component.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-tooltip/components/mrd-tooltip/mrd-tooltip.component.html","../../../projects/mrd-core-ui/src/lib/modules/mrd-tooltip/components/mrd-tooltip/mrd-tooltip.component.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-tooltip/common/directive/tool-tip-renderer/tool-tip-renderer.directive.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-button/components/mrd-button/mrd-button.component.html","../../../projects/mrd-core-ui/src/lib/modules/mrd-button/components/mrd-button/mrd-button.component.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-progress-bar/mrd-progress-bar.module.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-progress-spinner/mrd-progress-spinner.module.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-tooltip/mrd-tooltip.module.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-button/mrd-button.module.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-icon/components/mrd-icon.component.ts","../../../projects/mrd-core-ui/src/lib/modules/mrd-icon/components/mrd-icon.component.html","../../../projects/mrd-core-ui/src/lib/modules/mrd-icon/mrd-icon.module.ts","../../../projects/mrd-core-ui/src/mrd-core-ui.ts"],"sourcesContent":["import { MrdConfigModel } from \"../model/config.model\";\r\nimport * as _ from 'underscore';\r\n\r\nexport class ConfigUtil {\r\n\r\n  private static config: MrdConfigModel;\r\n\r\n  private static customConfig: MrdConfigModel;\r\n\r\n  public static setConfig(config: MrdConfigModel) {\r\n    this.config = undefined;\r\n    this.customConfig = config;\r\n    this.getConfig();\r\n  }\r\n\r\n  public static getConfig() {\r\n    if (this.config) {\r\n      return this.config;\r\n    }\r\n\r\n    let defaultConfig = this.baseConfig;\r\n\r\n    if (this.customConfig) {\r\n      this.extendObject(defaultConfig, this.customConfig);\r\n    }\r\n\r\n    this.config = defaultConfig;\r\n    return defaultConfig;\r\n  }\r\n\r\n  private static extendObject(obj: any, extObj: any): any {\r\n    for (const [key, value] of Object.entries(extObj)) {\r\n      if (_.isObject(value) && !_.isArray(value)) {\r\n        obj[key] = this.extendObject(obj[key], value);\r\n      } else {\r\n        obj[key] = value;\r\n      }\r\n    };\r\n    return obj;\r\n  }\r\n\r\n  private static get baseConfig(): MrdConfigModel {\r\n    return {\r\n      baseFont: {\r\n        // size: \"16px\",\r\n        family: \"URW Din,Lato,sans-serif\"\r\n      },\r\n      baseColors: {\r\n        primary: \"#68b022\",\r\n        accent: \"#e7e7e7\",\r\n        warn: \"#b00122\",\r\n        disabled: \"#afa6a6\"\r\n      },\r\n      formField: {\r\n        borderRadius: \"7px\",\r\n        borderRadiusRounded: \"70px\",\r\n      },\r\n      button: {\r\n        backgroundColor: \"transparent\",\r\n        textLightColor: \"#ffffff\",\r\n        textDarkColor: \"#000000\",\r\n        hoverColor: \"#d3d3d361\",\r\n        activeColor: \"#d3d3d3\",\r\n        disabled: {\r\n          text: \"#a6a6a6\",\r\n          background: \"transparent\"\r\n        },\r\n\r\n        border: \"0 unset unset\",\r\n        borderRadius: \"4px\",\r\n\r\n        minHeight: \"36px\",\r\n        fontSize: \"0.9em\",\r\n        iconSize: \"1em\",\r\n\r\n        outline: {\r\n          border: \"1px solid #d3d3d3\"\r\n        },\r\n\r\n        flat: {\r\n          backgroundColor: \"#ffffff\",\r\n          disabled: {\r\n            text: \"#a6a6a6\",\r\n            background: \"#d3d3d3\"\r\n          }\r\n        },\r\n        raised: {\r\n          backgroundColor: \"#ffffff\",\r\n          disabled: {\r\n            text: \"#a6a6a6\",\r\n            background: \"#d3d3d3\"\r\n          }\r\n        },\r\n        icon: {\r\n          borderRadius: \"50%\",\r\n          fontSize: \"1em\",\r\n          diameter: \"3em\"\r\n        },\r\n\r\n        fab: {\r\n          backgroundColor: \"#ffffff\",\r\n          disabled: {\r\n            text: \"#a6a6a6\",\r\n            background: \"#d3d3d3\"\r\n          },\r\n          borderRadius: \"50%\",\r\n          fontSize: \"1em\",\r\n          diameter: \"4em\"\r\n        },\r\n\r\n        miniFab: {\r\n          backgroundColor: \"#ffffff\",\r\n          disabled: {\r\n            text: \"#a6a6a6\",\r\n            background: \"#d3d3d3\"\r\n          },\r\n          borderRadius: \"50%\",\r\n          fontSize: \"1em\",\r\n          diameter: \"3em\"\r\n        },\r\n\r\n        toggle: {\r\n          backgroundColor: \"#ffffff\",\r\n          unselectedBgColor: \"#c8cac6\",\r\n        }\r\n      },\r\n      geoIcon: {\r\n        width: \"40px\",\r\n        height: \"40px\",\r\n        margin: \"5px\",\r\n        transitionTime: \"1s\",\r\n        mainColor: \"#000000\",\r\n        mainSelectedColor: \"#ffffff\",\r\n        mainOpacity: 0.2,\r\n        mainSelectedOpacity: 1,\r\n        backColor: \"#000000\",\r\n        backSelectedColor: \"#ffffff\",\r\n        backOpacity: 0.2,\r\n        backSelectedOpacity: 0.2,\r\n        overlayColor: \"#8ebf62\",\r\n        overlaySelectedColor: \"#ffa500\",\r\n        overlayOpacity: 1,\r\n        overlaySelectedOpacity: 1\r\n      }\r\n    }\r\n  }\r\n}\r\n","\r\nexport class ColorUtil {\r\n\r\n  public static isHexColor(color: string): boolean {\r\n    return /^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/.test(color);\r\n  }\r\n\r\n  public static isRgbColor(color: string): boolean {\r\n    return /^rgb\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3})\\)$/.test(color);\r\n  }\r\n\r\n  public static isRgbaColor(color: string): boolean {\r\n    return /^rgba\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3}), (0|1|0\\.\\d+)\\)$/.test(color);\r\n  }\r\n\r\n  public static hexToRgb(hex: string): { r: number, g: number, b: number } {\r\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return result ? {\r\n      r: parseInt(result[1], 16),\r\n      g: parseInt(result[2], 16),\r\n      b: parseInt(result[3], 16)\r\n    } : null;\r\n  }\r\n\r\n  public static hexToRgba(hex: string): { r: number, g: number, b: number, a: number } {\r\n    if (ColorUtil.hexHasAlpha(hex)) {\r\n      const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n      return result ? {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16),\r\n        a: parseInt(result[4], 16) / 255\r\n      } : null;\r\n    } else {\r\n      const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n      return result ? {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16),\r\n        a: 1\r\n      } : null;\r\n    }\r\n  }\r\n\r\n  public static hexHasAlpha(hex: string): boolean {\r\n    return /^#?([a-f\\d]{8})$/i.test(hex);\r\n  }\r\n\r\n  public static rgbToHex(r: number, g: number, b: number, a?: number): string {\r\n    return '#'+[r, g, b].map((x) => {\r\n      const hex = x.toString(16);\r\n      return hex.length === 1 ? '0' + hex : hex;\r\n    }).join('');\r\n  }\r\n\r\n  public static rgbaToHex(r: number, g: number, b: number, a: number): string {\r\n    a = !a ? 1 : a;\r\n    let alpha = ((a * 255) | 1 << 8).toString(16).slice(1)\r\n    return ColorUtil.rgbToHex(r, g, b) + alpha;\r\n  }\r\n\r\n  public static rgbStringToHex(rgb: string): string {\r\n    const result = /^rgb\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3})\\)$/.exec(rgb);\r\n    if (result) {\r\n      return ColorUtil.rgbToHex(parseInt(result[1], 10), parseInt(result[2], 10), parseInt(result[3], 10));\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public static rgbaStringToHex(rgba: string): string {\r\n    const result = /^rgba\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3}), (0|1|0\\.\\d+)\\)$/.exec(rgba);\r\n    if (result) {\r\n      return ColorUtil.rgbaToHex(parseInt(result[1], 10), parseInt(result[2], 10), parseInt(result[3], 10), parseFloat(result[4]));\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public static rgbaStringToRgb(rgba: string): { r: number, g: number, b: number, a: number } {\r\n    const result = /^rgba\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3}), (0|1|0\\.\\d+)\\)$/.exec(rgba);\r\n    if (result) {\r\n      return {\r\n        r: parseInt(result[1], 10),\r\n        g: parseInt(result[2], 10),\r\n        b: parseInt(result[3], 10),\r\n        a: result[4] ? parseFloat(result[4]) : 1\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public static shouldTextBeDark(color: string, debug?: boolean): boolean {\r\n    if (debug) {\r\n      //debugger;\r\n    }\r\n    const rgba = ColorUtil.hexToRgba(color);\r\n    if (rgba) {\r\n      const { r, g, b, a } = rgba;\r\n      const mixedColor = {\r\n        r: r * a + (1 - a) * 255,\r\n        g: g * a + (1 - a) * 255,\r\n        b: b * a + (1 - a) * 255,\r\n        a: 1\r\n      };\r\n      const brightness = Math.round(((mixedColor.r * 299) + (mixedColor.g * 587) + (mixedColor.b * 114)) / 1000);\r\n      return brightness > 125;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  public static changeColorOpacity(color: string, opacity: number): string {\r\n    if (opacity > 1) {\r\n      opacity /= 100;\r\n    }\r\n\r\n    if (ColorUtil.isRgbColor(color) || ColorUtil.isRgbaColor(color)) {\r\n      let rgba = ColorUtil.rgbaStringToRgb(color);\r\n      if (rgba) {\r\n        return `rgba(${rgba.r}, ${rgba.g}, ${rgba.b}, ${rgba.a * opacity})`;\r\n      }\r\n      return color;\r\n    }\r\n\r\n    const rgb = ColorUtil.hexToRgba(color);\r\n    if (rgb) {\r\n      return `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a * opacity})`;\r\n    }\r\n    return color;\r\n  }\r\n\r\n  public static changeColorBrightnessPercent(color: string, percent: number): string {\r\n    let rgba;\r\n    if (ColorUtil.isRgbColor(color) || ColorUtil.isRgbaColor(color)) {\r\n      rgba = ColorUtil.rgbaStringToRgb(color);\r\n    } else {\r\n      rgba = ColorUtil.hexToRgba(color);\r\n    }\r\n    if (rgba) {\r\n      if ([rgba.r, rgba.g, rgba.b].filter((c) => c === 0 || c === 255).length === 3) {\r\n        rgba.r = rgba.r === 0 ? 1 : rgba.r;\r\n        rgba.g = rgba.g === 0 ? 1 : rgba.g;\r\n        rgba.b = rgba.b === 0 ? 1 : rgba.b;\r\n      }\r\n      return ColorUtil.rgbToHex(\r\n        Math.min(255, Math.max(0, Math.round(rgba.r * (1 + percent / 100)))),\r\n        Math.min(255, Math.max(0, Math.round(rgba.g * (1 + percent / 100)))),\r\n        Math.min(255, Math.max(0, Math.round(rgba.b * (1 + percent / 100)))),\r\n        rgba.a\r\n      );\r\n    }\r\n    return color;\r\n  }\r\n}\r\n","import { ColorUtil } from \"../../common/util/color.util\";\r\n\r\nexport function colorAttribute(value: string, fallbackValue?: string): string {\r\n  if (ColorUtil.isRgbColor(value)) {\r\n    return ColorUtil.rgbStringToHex(value);\r\n  } else if (ColorUtil.isRgbaColor(value)) {\r\n    return ColorUtil.rgbaStringToHex(value);\r\n  } else if (ColorUtil.isHexColor(value)) {\r\n    return value;\r\n  } else {\r\n    console.error('Farben können nur Hex-, RGB- oder RGBA-Werte sein. (Wert: ' + value + ')');\r\n    return fallbackValue || null;\r\n  }\r\n}\r\n\r\nexport function colorThemeAttribute(value: string, fallbackValue?: string): string {\r\n  if (ColorUtil.isRgbColor(value)) {\r\n    return ColorUtil.rgbStringToHex(value);\r\n  } else if (ColorUtil.isRgbaColor(value)) {\r\n    return ColorUtil.rgbaStringToHex(value);\r\n  } else if (ColorUtil.isHexColor(value)) {\r\n    return value;\r\n  } else if (['primary', 'accent', 'warn'].includes(value)) {\r\n    this.primary = value === 'primary';\r\n    this.accent = value === 'accent';\r\n    this.warn = value === 'warn';\r\n  } else {\r\n    console.error('Farben können nur Hex-, RGB- , RGBA-Werte oder \"primary\", \"accent\" oder \"warn\" sein. (Wert: ' + value + ')');\r\n    return fallbackValue || null;\r\n  }\r\n}\r\n","export function sizeAttribute(value: string | number, fallbackValue?: string, defaultUnit?: string): string {\r\n  if (typeof value === 'number') {\r\n    return defaultUnit ? `${value}${defaultUnit}` : `${value}px`;\r\n  }\r\n  if (typeof value === 'string' && !sizeRegex.test(value)) {\r\n    let numberValue: number = parseInt(value, 10);\r\n    if (!isNaN(numberValue)) {\r\n      return defaultUnit ? `${numberValue}${defaultUnit}` : `${numberValue}px`;\r\n    }\r\n  }\r\n  return value || fallbackValue || null;\r\n}\r\n\r\nconst sizeRegex = /(\\d+)(px|em|rem|vw|vh|vmin|vmax|%)/;\r\n","export function timeAttribute(value: string | number, fallbackValue?: string, defaultUnit?: string): string {\r\n  if (typeof value === 'number') {\r\n    return defaultUnit ? `${value}${defaultUnit}` : `${value}s`;\r\n  }\r\n  if (typeof value === 'string') {\r\n    let numberValue: number = parseInt(value, 10);\r\n    if (!isNaN(numberValue)) {\r\n      return defaultUnit ? `${value}${numberValue}` : `${numberValue}s`;\r\n    }\r\n  }\r\n  return value || fallbackValue || null;\r\n}\r\n","import { DOCUMENT } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ErrorHandler, Inject, Injectable, Optional, SecurityContext } from '@angular/core';\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\nimport { finalize, map, Observable, of, share, tap } from 'rxjs';\r\n\r\nexport declare interface TrustedHTML {\r\n  __brand__: 'TrustedHTML';\r\n}\r\n\r\nexport declare interface TrustedTypePolicyFactory {\r\n  createPolicy(\r\n    policyName: string,\r\n    policyOptions: {\r\n      createHTML?: (input: string) => string;\r\n    },\r\n  ): TrustedTypePolicy;\r\n}\r\n\r\nexport declare interface TrustedTypePolicy {\r\n  createHTML(input: string): TrustedHTML;\r\n}\r\n\r\n/**\r\n * The Trusted Types policy, or null if Trusted Types are not\r\n * enabled/supported, or undefined if the policy has not been created yet.\r\n */\r\nlet policy: TrustedTypePolicy | null | undefined;\r\n\r\n/**\r\n * Returns the Trusted Types policy, or null if Trusted Types are not\r\n * enabled/supported. The first call to this function will create the policy.\r\n */\r\nfunction getPolicy(): TrustedTypePolicy | null {\r\n  if (policy === undefined) {\r\n    policy = null;\r\n    if (typeof window !== 'undefined') {\r\n      const ttWindow = window as unknown as {trustedTypes?: TrustedTypePolicyFactory};\r\n      if (ttWindow.trustedTypes !== undefined) {\r\n        policy = ttWindow.trustedTypes.createPolicy('angular#components', {\r\n          createHTML: (s: string) => s,\r\n        });\r\n      }\r\n    }\r\n  }\r\n  return policy;\r\n}\r\n\r\n/**\r\n * Unsafely promote a string to a TrustedHTML, falling back to strings when\r\n * Trusted Types are not available.\r\n * @security This is a security-sensitive function; any use of this function\r\n * must go through security review. In particular, it must be assured that the\r\n * provided string will never cause an XSS vulnerability if used in a context\r\n * that will be interpreted as HTML by a browser, e.g. when assigning to\r\n * element.innerHTML.\r\n */\r\nexport function trustedHTMLFromString(html: string): TrustedHTML {\r\n  return getPolicy()?.createHTML(html) || (html as unknown as TrustedHTML);\r\n}\r\n\r\n/** Options that can be used to configure how an icon or the icons in an icon set are presented. */\r\nexport interface IconOptions {\r\n  /** View box to set on the icon. */\r\n  viewBox?: string;\r\n\r\n  /** Whether or not to fetch the icon or icon set using HTTP credentials. */\r\n  withCredentials?: boolean;\r\n}\r\n\r\n/**\r\n * Function that will be invoked by the icon registry when trying to resolve the\r\n * URL from which to fetch an icon. The returned URL will be used to make a request for the icon.\r\n */\r\nexport type IconResolver = (\r\n  name: string,\r\n  namespace: string,\r\n) => SafeResourceUrl | SafeResourceUrlWithIconOptions | null;\r\n\r\n/** Object that specifies a URL from which to fetch an icon and the options to use for it. */\r\nexport interface SafeResourceUrlWithIconOptions {\r\n  url: SafeResourceUrl;\r\n  options: IconOptions;\r\n}\r\n\r\n/**\r\n * Configuration for an icon, including the URL and possibly the cached SVG element.\r\n * @docs-private\r\n */\r\nclass SvgIconConfig {\r\n  svgElement: SVGElement | null;\r\n\r\n  constructor(\r\n    public url: SafeResourceUrl,\r\n    public svgText: TrustedHTML | null,\r\n    public options?: IconOptions,\r\n  ) {}\r\n}\r\n/** Icon configuration whose content has already been loaded. */\r\ntype LoadedSvgIconConfig = SvgIconConfig & {svgText: TrustedHTML};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MrdIconRegistryService {\r\n\r\n  private _document: Document;\r\n\r\n  /**\r\n   * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\r\n   */\r\n  private _svgIconConfigs = new Map<string, SvgIconConfig>();\r\n\r\n  /** Cache for icons loaded by direct URLs. */\r\n  private _cachedIconsByUrl = new Map<string, SVGElement>();\r\n\r\n  /** In-progress icon fetches. Used to coalesce multiple requests to the same URL. */\r\n  private _inProgressUrlFetches = new Map<string, Observable<TrustedHTML>>();\r\n\r\n  /** Registered icon resolver functions. */\r\n  private _resolvers: IconResolver[] = [];\r\n\r\n  constructor(\r\n    @Optional() private _httpClient: HttpClient,\r\n    private _sanitizer: DomSanitizer,\r\n    @Optional() @Inject(DOCUMENT) document: any,\r\n    private readonly _errorHandler: ErrorHandler,\r\n  ) {\r\n    this._document = document;\r\n  }\r\n\r\n  /**\r\n   * Registers an icon by URL in the default namespace.\r\n   * @param iconName Name under which the icon should be registered.\r\n   * @param url\r\n   */\r\n  addSvgIcon(iconName: string, url: SafeResourceUrl, options?: IconOptions): this {\r\n    return this.addSvgIconInNamespace('', iconName, url, options);\r\n  }\r\n\r\n  /**\r\n   * Registers an icon by URL in the specified namespace.\r\n   * @param namespace Namespace in which the icon should be registered.\r\n   * @param iconName Name under which the icon should be registered.\r\n   * @param url\r\n   */\r\n  addSvgIconInNamespace(\r\n    namespace: string,\r\n    iconName: string,\r\n    url: SafeResourceUrl,\r\n    options?: IconOptions,\r\n  ): this {\r\n    return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig(url, null, options));\r\n  }\r\n\r\n  /**\r\n   * Returns an Observable that produces the icon (as an `<svg>` DOM element) from the given URL.\r\n   * The response from the URL may be cached so this will not always cause an HTTP request, but\r\n   * the produced element will always be a new copy of the originally fetched icon. (That is,\r\n   * it will not contain any modifications made to elements previously returned).\r\n   *\r\n   * @param safeUrl URL from which to fetch the SVG icon.\r\n   */\r\n  getSvgIconFromUrl(safeUrl: SafeResourceUrl): Observable<SVGElement> {\r\n    const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\r\n\r\n    if (!url) {\r\n      throw Error(`Failed to sanitize URL: ${safeUrl}`);\r\n    }\r\n\r\n    const cachedIcon = this._cachedIconsByUrl.get(url);\r\n\r\n    if (cachedIcon) {\r\n      return of(cloneSvg(cachedIcon));\r\n    }\r\n\r\n    return this._loadSvgIconFromConfig(new SvgIconConfig(safeUrl, null)).pipe(\r\n      tap(svg => this._cachedIconsByUrl.set(url!, svg)),\r\n      map(svg => cloneSvg(svg)),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns an Observable that produces the icon (as an `<svg>` DOM element) with the given name\r\n   * and namespace. The icon must have been previously registered with addIcon or addIconSet;\r\n   * if not, the Observable will throw an error.\r\n   *\r\n   * @param name Name of the icon to be retrieved.\r\n   * @param namespace Namespace in which to look for the icon.\r\n   */\r\n  getNamedSvgIcon(name: string, namespace: string = ''): Observable<SVGElement> {\r\n    const key = iconKey(namespace, name);\r\n    let config = this._svgIconConfigs.get(key);\r\n\r\n    // Return (copy of) cached icon if possible.\r\n    if (config) {\r\n      return this._getSvgFromConfig(config);\r\n    }\r\n\r\n    // Otherwise try to resolve the config from one of the resolver functions.\r\n    config = this._getIconConfigFromResolvers(namespace, name);\r\n\r\n    if (config) {\r\n      this._svgIconConfigs.set(key, config);\r\n      return this._getSvgFromConfig(config);\r\n    }\r\n\r\n    // See if we have any icon sets registered for the namespace.\r\n    // const iconSetConfigs = this._iconSetConfigs.get(namespace);\r\n\r\n    // if (iconSetConfigs) {\r\n    //   return this._getSvgFromIconSetConfigs(name, iconSetConfigs);\r\n    // }\r\n    throw Error(`IconName not Fountd ${key}`);\r\n  }\r\n\r\n  /**\r\n   * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\r\n   */\r\n  private _getSvgFromConfig(config: SvgIconConfig): Observable<SVGElement> {\r\n    if (config.svgText) {\r\n      // We already have the SVG element for this icon, return a copy.\r\n      return of(cloneSvg(this._svgElementFromConfig(config as LoadedSvgIconConfig)));\r\n    } else {\r\n      // Fetch the icon from the config's URL, cache it, and return a copy.\r\n      return this._loadSvgIconFromConfig(config).pipe(map(svg => cloneSvg(svg)));\r\n    }\r\n  }\r\n\r\n  /** Tries to create an icon config through the registered resolver functions. */\r\n  private _getIconConfigFromResolvers(namespace: string, name: string): SvgIconConfig | undefined {\r\n    for (let i = 0; i < this._resolvers.length; i++) {\r\n      const result = this._resolvers[i](name, namespace);\r\n\r\n      if (result) {\r\n        return isSafeUrlWithOptions(result)\r\n          ? new SvgIconConfig(result.url, null, result.options)\r\n          : new SvgIconConfig(result, null);\r\n      }\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\r\n   * from it.\r\n   */\r\n  private _loadSvgIconFromConfig(config: SvgIconConfig): Observable<SVGElement> {\r\n    return this._fetchIcon(config).pipe(\r\n      tap(svgText => (config.svgText = svgText)),\r\n      map(() => this._svgElementFromConfig(config as LoadedSvgIconConfig)),\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Creates a DOM element from the given SVG string.\r\n   */\r\n  private _svgElementFromString(str: TrustedHTML): SVGElement {\r\n    const div = this._document.createElement('DIV');\r\n    div.innerHTML = str as unknown as string;\r\n    const svg = div.querySelector('svg') as SVGElement;\r\n\r\n    if (!svg) {\r\n      throw Error('<svg> tag not found');\r\n    }\r\n\r\n    return svg;\r\n  }\r\n\r\n  /**\r\n   * Converts an element into an SVG node by cloning all of its children.\r\n   */\r\n  // private _toSvgElement(element: Element): SVGElement {\r\n  //   const svg = this._svgElementFromString(trustedHTMLFromString('<svg></svg>'));\r\n  //   const attributes = element.attributes;\r\n\r\n  //   // Copy over all the attributes from the `symbol` to the new SVG, except the id.\r\n  //   for (let i = 0; i < attributes.length; i++) {\r\n  //     const {name, value} = attributes[i];\r\n\r\n  //     if (name !== 'id') {\r\n  //       svg.setAttribute(name, value);\r\n  //     }\r\n  //   }\r\n\r\n  //   for (let i = 0; i < element.childNodes.length; i++) {\r\n  //     if (element.childNodes[i].nodeType === this._document.ELEMENT_NODE) {\r\n  //       svg.appendChild(element.childNodes[i].cloneNode(true));\r\n  //     }\r\n  //   }\r\n\r\n  //   return svg;\r\n  // }\r\n\r\n  /**\r\n   * Sets the default attributes for an SVG element to be used as an icon.\r\n   */\r\n  private _setSvgAttributes(svg: SVGElement, options?: IconOptions): SVGElement {\r\n    svg.setAttribute('fit', '');\r\n    svg.setAttribute('height', '100%');\r\n    svg.setAttribute('width', '100%');\r\n    svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\r\n    svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.\r\n\r\n    if (options && options.viewBox) {\r\n      svg.setAttribute('viewBox', options.viewBox);\r\n    }\r\n\r\n    return svg;\r\n  }\r\n\r\n  /**\r\n   * Returns an Observable which produces the string contents of the given icon. Results may be\r\n   * cached, so future calls with the same URL may not cause another HTTP request.\r\n   */\r\n  private _fetchIcon(iconConfig: SvgIconConfig): Observable<TrustedHTML> {\r\n    const {url: safeUrl, options} = iconConfig;\r\n    const withCredentials = options?.withCredentials ?? false;\r\n\r\n    if (!this._httpClient) {\r\n      throw Error('Could not fetch icon, HttpClient is not available.');\r\n    }\r\n\r\n    // TODO: add an ngDevMode check\r\n    if (safeUrl == null) {\r\n      throw Error(`Cannot fetch icon from URL \"${safeUrl}\".`);\r\n    }\r\n\r\n    const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\r\n\r\n    // TODO: add an ngDevMode check\r\n    if (!url) {\r\n      throw Error(`Failed to sanitize URL: ${safeUrl}`);\r\n    }\r\n\r\n    // Store in-progress fetches to avoid sending a duplicate request for a URL when there is\r\n    // already a request in progress for that URL. It's necessary to call share() on the\r\n    // Observable returned by http.get() so that multiple subscribers don't cause multiple XHRs.\r\n    const inProgressFetch = this._inProgressUrlFetches.get(url);\r\n\r\n    if (inProgressFetch) {\r\n      return inProgressFetch;\r\n    }\r\n\r\n    const req = this._httpClient.get(url, {responseType: 'text', withCredentials}).pipe(\r\n      map(svg => {\r\n        // Security: This SVG is fetched from a SafeResourceUrl, and is thus\r\n        // trusted HTML.\r\n        return trustedHTMLFromString(svg);\r\n      }),\r\n      finalize(() => this._inProgressUrlFetches.delete(url)),\r\n      share(),\r\n    );\r\n\r\n    this._inProgressUrlFetches.set(url, req);\r\n    return req;\r\n  }\r\n\r\n  /**\r\n   * Registers an icon config by name in the specified namespace.\r\n   * @param namespace Namespace in which to register the icon config.\r\n   * @param iconName Name under which to register the config.\r\n   * @param config Config to be registered.\r\n   */\r\n  private _addSvgIconConfig(namespace: string, iconName: string, config: SvgIconConfig): this {\r\n    this._svgIconConfigs.set(iconKey(namespace, iconName), config);\r\n    return this;\r\n  }\r\n\r\n  /** Parses a config's text into an SVG element. */\r\n  private _svgElementFromConfig(config: LoadedSvgIconConfig): SVGElement {\r\n    if (!config.svgElement) {\r\n      const svg = this._svgElementFromString(config.svgText);\r\n      this._setSvgAttributes(svg, config.options);\r\n      config.svgElement = svg;\r\n    }\r\n\r\n    return config.svgElement;\r\n  }\r\n}\r\n\r\n/** Clones an SVGElement while preserving type information. */\r\nfunction cloneSvg(svg: SVGElement): SVGElement {\r\n  return svg.cloneNode(true) as SVGElement;\r\n}\r\n\r\n/** Returns the cache key to use for an icon namespace and name. */\r\nfunction iconKey(namespace: string, name: string) {\r\n  return namespace + ':' + name;\r\n}\r\n\r\nfunction isSafeUrlWithOptions(value: any): value is SafeResourceUrlWithIconOptions {\r\n  return !!(value.url && value.options);\r\n}\r\n","import { AfterViewInit, Directive, ElementRef, EventEmitter, Input, OnChanges, OnDestroy, Output, booleanAttribute } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[hideIfTruncated]'\r\n})\r\nexport class HideIfTruncatedDirective implements AfterViewInit, OnChanges, OnDestroy {\r\n\r\n  @Input({transform: booleanAttribute}) hideIfTruncated: boolean = true;\r\n  @Input({transform: booleanAttribute}) checkChildrenForAttribute: boolean = false;\r\n  @Input() hideOnTruncatedElement: HTMLElement;\r\n  @Input() requiredHideAttribute: string;\r\n  @Input() displayState: string = 'block';\r\n  @Input() parentResizeElement: HTMLElement;\r\n\r\n  @Output() hiddenChanged: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  private mutationObserver: MutationObserver;\r\n  private resizeObserver: ResizeObserver;\r\n\r\n  private blockNextResizeEvent: boolean = false;\r\n  private resizeTimeout: any;\r\n\r\n  constructor(\r\n    private elementRef: ElementRef<HTMLElement>\r\n  ) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.hideIfTruncated) {\r\n      this.mutationObserver = new MutationObserver(() => {\r\n        this.ngOnChanges();\r\n      });\r\n      this.mutationObserver.observe(this.elementRef.nativeElement, {childList: true, subtree: true, characterData: true});\r\n\r\n      if (this.parentResizeElement) {\r\n        this.resizeObserver = new ResizeObserver((event) => {\r\n          // if (this.blockNextResizeEvent) {\r\n          //   this.blockNextResizeEvent = false;\r\n          //   return;\r\n          // }\r\n          if (this.resizeTimeout) {\r\n            clearTimeout(this.resizeTimeout);\r\n          }\r\n          this.elementRef.nativeElement.style.display = this.displayState;\r\n          this.resizeTimeout = setTimeout(() => this.ngOnChanges(), 10);\r\n        });\r\n        this.resizeObserver.observe(this.parentResizeElement);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    if (this.hideIfTruncated) {\r\n\r\n      const element = this.elementRef.nativeElement;\r\n      if (element.scrollWidth <= element.clientWidth) {\r\n        element.style.display = this.displayState;\r\n        this.hiddenChanged.emit(false);\r\n      } else {\r\n        element.style.display = 'none';\r\n        this.hiddenChanged.emit(true);\r\n      }\r\n\r\n      if (this.checkChildrenForAttribute) {\r\n        // const element = this.elementRef.nativeElement;\r\n        const children = element.children;\r\n        for (let i = 0; i < children.length; i++) {\r\n          if (children[i].getAttribute(this.requiredHideAttribute) !== null && (children[i] as HTMLElement).style) {\r\n            if (this.hideOnTruncatedElement) {\r\n              (children[i] as HTMLElement).style.display = this.hideOnTruncatedElement.style.display !== 'none' && this.hideOnTruncatedElement.scrollWidth <= this.hideOnTruncatedElement.clientWidth ? this.displayState : 'none';\r\n            } else {\r\n              (children[i] as HTMLElement).style.display = element.style.display === 'none' || children[i].scrollWidth <= children[i].clientWidth ? this.displayState : 'none';\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      this.blockNextResizeEvent = true;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.mutationObserver) {\r\n      this.mutationObserver.disconnect();\r\n    }\r\n    if (this.resizeObserver) {\r\n      this.resizeObserver.disconnect();\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { HideIfTruncatedDirective } from \"./hide-if-truncated/hide-if-truncated.directive\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    HideIfTruncatedDirective\r\n  ],\r\n  exports: [\r\n    HideIfTruncatedDirective\r\n  ]\r\n})\r\nexport class MrdDirectiveModule { }\r\n","<div class=\"mrd-progressbar-container\"\r\n  [style.--progress-bar-color]=\"color\" [style.--progress-bar-bg-color]=\"bgColor\">\r\n  <div class=\"mrd-progressbar indeterminate\" *ngIf=\"mode === 'indeterminate'\"></div>\r\n  <div class=\"mrd-progressbar determinate\" *ngIf=\"mode === 'determinate'\" [ngStyle]=\"{'transform': 'translateX(' + value + '%)'}\"></div>\r\n</div>\r\n","import { ColorUtil } from './../../../../common/util/color.util';\r\nimport { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, numberAttribute } from '@angular/core';\r\nimport { MrdConfigModel } from './../../../../common/model/config.model';\r\nimport { ConfigUtil } from './../../../../common/util/config.util';\r\n\r\n@Component({\r\n  selector: 'mrd-progress-bar',\r\n  templateUrl: './mrd-progress-bar.component.html',\r\n  styleUrls: ['./mrd-progress-bar.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MrdProgressBarComponent implements AfterViewInit {\r\n\r\n  private config: MrdConfigModel = ConfigUtil.getConfig();\r\n\r\n  @Input() public set mode(mode: 'determinate' | 'indeterminate') {\r\n    this._mode = mode;\r\n  }\r\n  public get mode(): 'determinate' | 'indeterminate' {\r\n    return this._mode;\r\n  }\r\n  private _mode: 'determinate' | 'indeterminate' = 'indeterminate';\r\n\r\n  @Input({transform: numberAttribute}) public set value(value: number) {\r\n    this._value = Math.max(0, Math.min(100, value || 0));\r\n  }\r\n  public get value(): number {\r\n    return this.mode === 'determinate' ? this._value - 100 : -100;\r\n  }\r\n  private _value: number = 0;\r\n\r\n  @Input() public set color(color: string) {\r\n    if (color === 'primary') {\r\n      color = this.config.baseColors.primary as string;\r\n    }\r\n    if (color === 'accent') {\r\n      color = this.config.baseColors.accent as string;\r\n    }\r\n    if (color === 'warn') {\r\n      color = this.config.baseColors.warn as string;\r\n    }\r\n    this._color = color;\r\n    this._bgColor = ColorUtil.changeColorOpacity(color, 20);\r\n  }\r\n  public get color(): string {\r\n    return this._color;\r\n  }\r\n  private _color: string = this.config.baseColors.primary as string;\r\n  private _bgColor: string = ColorUtil.changeColorOpacity(this.config.baseColors.primary as string, 20);\r\n\r\n  public get bgColor(): string {\r\n    return this._bgColor;\r\n  }\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef\r\n  ) {}\r\n\r\n  public ngAfterViewInit(): void {\r\n    this.cdr.detectChanges();\r\n  }\r\n}\r\n","<ng-template #circle>\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" focusable=\"false\" class=\"mrd-spinner-indeterminate-circle-svg\" [attr.viewBox]=\"viewBox\">\r\n    <circle cx=\"50%\" cy=\"50%\" class=\"mrd-spinner-indeterminate-circle-svg-circle\" [attr.r]=\"circleRadius\"\r\n      [style.stroke-dasharray.px]=\"strokeCircumference\" [style.stroke-width.%]=\"circleStrokeWidth\" [style.stroke-dashoffset.px]=\"strokeCircumference / 2\"\r\n      ></circle>\r\n  </svg>\r\n</ng-template>\r\n\r\n<div class=\"mrd-spinner-indeterminate-container\" aria-hidden=\"true\" *ngIf=\"mode === 'indeterminate'\" [style.--spinner-color]=\"color\">\r\n  <div class=\"mrd-spinner-indeterminate-spinners\">\r\n    <div class=\"mrd-spinner-indeterminate-part mrd-spinner-indeterminate-part-left\">\r\n      <ng-container [ngTemplateOutlet]=\"circle\"></ng-container>\r\n    </div>\r\n    <div class=\"mrd-spinner-indeterminate-gap-part\">\r\n      <ng-container [ngTemplateOutlet]=\"circle\"></ng-container>\r\n    </div>\r\n    <div class=\"mrd-spinner-indeterminate-part mrd-spinner-indeterminate-part-right\">\r\n      <ng-container [ngTemplateOutlet]=\"circle\"></ng-container>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"mrd-progess-spinner-determinate-container\" aria-hidden=\"true\" *ngIf=\"mode === 'determinate'\" [style.--spinner-color]=\"color\">\r\n  <svg class=\"mrd-spinner-indeterminate-circle-svg\" [attr.viewBox]=\"viewBox\"\r\n       xmlns=\"http://www.w3.org/2000/svg\" focusable=\"false\">\r\n    <circle [attr.r]=\"circleRadius\"\r\n            [style.stroke-dasharray.px]=\"strokeCircumference\"\r\n            [style.stroke-dashoffset.px]=\"strokeDashOffset\"\r\n            [style.stroke-width.%]=\"circleStrokeWidth\"\r\n            class=\"mrd-spinner-determinate-circle-svg-circle\"\r\n            cx=\"50%\" cy=\"50%\"/>\r\n  </svg>\r\n</div>\r\n\r\n<div class=\"mrd-progress-spinner-label\" *ngIf=\"showLabel\">\r\n  {{labelText}}<span class=\"mrd-progress-spinner-label-dots\">{{dots}}</span>\r\n</div>\r\n","import { AfterViewInit, Component, Input, OnDestroy, booleanAttribute, numberAttribute } from '@angular/core';\r\nimport { MrdConfigModel } from './../../../../common/model/config.model';\r\nimport { ConfigUtil } from './../../../../common/util/config.util';\r\n\r\n@Component({\r\n  selector: 'mrd-progress-spinner',\r\n  host: {\r\n    '[style.width.px]': 'diameter',\r\n    '[style.height.px]': 'diameter',\r\n    '[style.margin-bottom.em]': 'showLabel ? 1.5 : 0'\r\n  },\r\n  templateUrl: './mrd-progress-spinner.component.html',\r\n  styleUrls: ['./mrd-progress-spinner.component.scss']\r\n})\r\nexport class MrdProgressSpinnerComponent implements AfterViewInit, OnDestroy {\r\n\r\n  private config: MrdConfigModel = ConfigUtil.getConfig();\r\n\r\n  @Input() public mode: 'determinate' | 'indeterminate' = 'indeterminate';\r\n\r\n  @Input() public set color(color: string) {\r\n    if (color === 'primary') {\r\n      color = this.config.baseColors.primary as string;\r\n    }\r\n    if (color === 'accent') {\r\n      color = this.config.baseColors.accent as string;\r\n    }\r\n    if (color === 'warn') {\r\n      color = this.config.baseColors.warn as string;\r\n    }\r\n    this._color = color;\r\n  }\r\n  public get color(): string {\r\n    return this._color;\r\n  }\r\n  private _color: string = this.config.baseColors.primary as string;\r\n\r\n  @Input({transform: numberAttribute})\r\n  get value(): number {\r\n    return this.mode === 'determinate' ? this._value : 0;\r\n  }\r\n  set value(v: number) {\r\n    this._value = Math.max(0, Math.min(100, v || 0));\r\n  }\r\n  private _value = 0;\r\n\r\n  @Input({transform: numberAttribute})\r\n  get diameter(): number {\r\n    return this._diameter;\r\n  }\r\n  set diameter(size: number) {\r\n    this._diameter = size || 0;\r\n  }\r\n  private _diameter = 100;\r\n\r\n  @Input({transform: numberAttribute})\r\n  get strokeWidth(): number {\r\n    return this._strokeWidth ?? this.diameter / 10;\r\n  }\r\n  set strokeWidth(value: number) {\r\n    this._strokeWidth = value || 0;\r\n  }\r\n  private _strokeWidth: number;\r\n\r\n  @Input({transform: booleanAttribute}) public showLabel: boolean = false;\r\n\r\n  @Input() public set labelText(label: string) {\r\n    this._labelText = label;\r\n  }\r\n  public get labelText(): string {\r\n    return this._labelText || '';\r\n  }\r\n  private _labelText: string = 'Lade Daten';\r\n\r\n  public dots: string = '';\r\n  private interval: any;\r\n\r\n  public get circleRadius(): number {\r\n    return (this.diameter - this.strokeWidth) / 2;\r\n  }\r\n\r\n  public get strokeCircumference(): number {\r\n    return 2 * Math.PI * this.circleRadius;\r\n  }\r\n\r\n  public get strokeDashOffset() {\r\n    if (this.mode === 'determinate') {\r\n      return (this.strokeCircumference * (100 - this._value)) / 100;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public get circleStrokeWidth() {\r\n    if (this.diameter === 110) {\r\n      debugger;\r\n    }\r\n    return (this.strokeWidth / this.diameter) * 100;\r\n  }\r\n\r\n  public get viewBox() {\r\n    const viewBox = this.circleRadius * 2 + this.strokeWidth;\r\n    return `0 0 ${viewBox} ${viewBox}`;\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.showLabel) {\r\n      this.interval = setInterval( () => {\r\n        if (this.dots.length === 3) {\r\n          this.dots = '';\r\n        } else {\r\n          this.dots = this.dots + '.';\r\n        }\r\n      }, 700);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.interval) {\r\n      clearInterval(this.interval);\r\n    }\r\n  }\r\n}\r\n","<div>\r\n  <div [ngClass]=\"{'mrd-tooltip-container': defaultStyle}\">\r\n    <ng-template #simpleText>\r\n      {{text}}\r\n    </ng-template>\r\n    <ng-container *ngTemplateOutlet=\"contentTemplate || simpleText\">\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit, TemplateRef } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'mrd-tooltip',\r\n  templateUrl: './mrd-tooltip.component.html',\r\n  styleUrls: ['./mrd-tooltip.component.scss']\r\n})\r\nexport class MrdTooltipComponent implements OnInit {\r\n\r\n  /**\r\n   * This is simple text which is to be shown in the tooltip\r\n   */\r\n   @Input() text: string;\r\n\r\n   /**\r\n    * This provides finer control on the content to be visible on the tooltip\r\n    * This template will be injected in ToolTipRenderer directive in the consumer template\r\n    * <ng-template #template>\r\n    *  content.....\r\n    * </ng-template>\r\n    */\r\n   @Input() contentTemplate: TemplateRef<any>;\r\n\r\n   @Input() defaultStyle: boolean = true;\r\n\r\n   constructor() { }\r\n\r\n   ngOnInit() {\r\n   }\r\n}\r\n","import { MrdTooltipComponent } from './../../../components/mrd-tooltip/mrd-tooltip.component';\r\nimport { ComponentRef, Directive, HostListener, Input, TemplateRef, ElementRef, booleanAttribute, numberAttribute } from '@angular/core';\r\nimport { ComponentPortal } from '@angular/cdk/portal';\r\nimport { Overlay, OverlayPositionBuilder, OverlayRef } from '@angular/cdk/overlay';\r\n\r\n@Directive({\r\n  selector: '[mrdToolTip]',\r\n  exportAs: 'mrdToolTip'\r\n})\r\nexport class ToolTipRendererDirective {\r\n\r\n  /**\r\n   * Gibt an, ob der Tooltip angezeigt werden soll\r\n   *\r\n   * @memberof ToolTipRendererDirective\r\n   */\r\n  @Input() set showToolTip(value) {\r\n    this._showToolTip = value;\r\n    this.ngOnInit();\r\n  };\r\n  private _showToolTip: boolean = true;\r\n\r\n  /**\r\n   * Der Text, der im Tooltip angezeigt werden soll\r\n   *\r\n   * @type {string}\r\n   * @memberof ToolTipRendererDirective\r\n   */\r\n  @Input(`mrdToolTip`) text: string;\r\n\r\n  /**\r\n   * Ein eigenes Template, das im Tooltip angezeigt werden soll\r\n   *\r\n   * @type {TemplateRef<any>}\r\n   * @memberof ToolTipRendererDirective\r\n   */\r\n  @Input() contentTemplate: TemplateRef<any>;\r\n\r\n  /**\r\n   * Gibt an, ob der Standard-Style des Tooltips verwendet werden soll.\r\n   *\r\n   * Standard: true\r\n   *\r\n   * @type {boolean}\r\n   * @memberof ToolTipRendererDirective\r\n   */\r\n  @Input() defaultStyle: boolean = true;\r\n\r\n  /**\r\n   * Die Position, an der der Tooltip angezeigt werden soll.\r\n   *\r\n   * Standard: 'bottom'\r\n   *\r\n   * @type {('top' | 'bottom' | 'left' | 'right')}\r\n   * @memberof ToolTipRendererDirective\r\n   */\r\n  @Input() position: 'top' | 'bottom' | 'left' | 'right' = 'bottom';\r\n\r\n  /**\r\n   * Gibt an, ob der Tooltip nur angezeigt werden soll, wenn der Text abgeschnitten wird.\r\n   *\r\n   * Standard: false\r\n   *\r\n   * @type {boolean}\r\n   * @memberof ToolTipRendererDirective\r\n   */\r\n  @Input({transform: booleanAttribute}) showIfTruncated: boolean = false;\r\n\r\n  /**\r\n   * Wenn gesetzt, wird der Tooltip nur angezeigt, wenn der Inhalt des Elements abgeschnitten wird\r\n   *\r\n   * @type {HTMLElement}\r\n   * @memberof ToolTipRendererDirective\r\n   */\r\n  @Input() showOnTruncatedElement: HTMLElement;\r\n\r\n  /**\r\n   * Gibt an, ob der Tooltip geöffnet bleiben soll, wenn der Mauszeiger über dem Tooltip ist.\r\n   *\r\n   * Standard: false\r\n   *\r\n   * @type {boolean}\r\n   * @memberof ToolTipRendererDirective\r\n   */\r\n  @Input({transform: booleanAttribute}) keepOnTooltipHover: boolean = false;\r\n\r\n  /**\r\n   * Gibt an, wie lange gewartet werden soll, bevor der Tooltip angezeigt wird.\r\n   *\r\n   * Wert in Millisekunden\r\n   *\r\n   * Standard: 0\r\n   *\r\n   * @type {number}\r\n   * @memberof ToolTipRendererDirective\r\n   */\r\n  @Input({transform: numberAttribute}) showDelay: number = 0;\r\n  /**\r\n   * Gibt an, wie lange gewartet werden soll, bevor der Tooltip geschlossen wird.\r\n   *\r\n   * Wert in Millisekunden\r\n   *\r\n   * Standard: 0\r\n   *\r\n   * @type {number}\r\n   * @memberof ToolTipRendererDirective\r\n   */\r\n  @Input({transform: numberAttribute}) hideDelay: number = 0;\r\n\r\n  private _overlayRef: OverlayRef;\r\n\r\n  private disabled: boolean = true;\r\n\r\n  private tooltipRef: ComponentRef<MrdTooltipComponent>;\r\n\r\n  constructor(\r\n    private _overlay: Overlay,\r\n    private _overlayPositionBuilder: OverlayPositionBuilder,\r\n    private _elementRef: ElementRef\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    if (!this._showToolTip) {\r\n      return;\r\n    }\r\n\r\n    // Standardwerte sind für Position 'bottom'\r\n    let overlayY: \"top\" | \"bottom\" | \"center\" = \"top\";\r\n    let offsetY = 5;\r\n    let originY: \"top\" | \"bottom\" | \"center\" = \"bottom\";\r\n    let originX: \"start\" | \"end\" | \"center\" = \"center\";\r\n    let overlayX: \"start\" | \"end\" | \"center\" = \"center\";\r\n    let offsetX = 0;\r\n    if (this.position === \"top\") {\r\n      originY = \"top\";\r\n      overlayY = \"bottom\";\r\n      offsetY = -5;\r\n    }\r\n    if (this.position === \"left\") {\r\n      originY = \"center\";\r\n      overlayY = \"center\";\r\n      offsetY = 0;\r\n      originX = \"start\";\r\n      overlayX = \"end\";\r\n      offsetX = -5;\r\n    }\r\n    if (this.position === \"right\") {\r\n      originY = \"center\";\r\n      overlayY = \"center\";\r\n      offsetY = 0;\r\n      originX = \"end\";\r\n      overlayX = \"start\";\r\n      offsetX = 5;\r\n    }\r\n\r\n    const positionStrategy = this._overlayPositionBuilder\r\n                                  .flexibleConnectedTo(this._elementRef)\r\n                                  .withPositions([{\r\n                                                    originX: originX,\r\n                                                    originY: originY,\r\n                                                    overlayX: overlayX,\r\n                                                    overlayY: overlayY,\r\n                                                    offsetY: offsetY,\r\n                                                    offsetX: offsetX\r\n                                                }]);\r\n\r\n    this._overlayRef = this._overlay.create({ positionStrategy});\r\n\r\n  }\r\n\r\n  /**\r\n   * This method will be called whenever the mouse enters in the Host element\r\n   * i.e. where this directive is applied\r\n   * This method will show the tooltip by instantiating the CustomToolTipComponent and attaching to the overlay\r\n   */\r\n  @HostListener('mouseenter')\r\n  show() {\r\n    if (this.showIfTruncated) {\r\n      const element = this._elementRef.nativeElement;\r\n      this.disabled = element.scrollWidth <= element.clientWidth;\r\n      if (element.style.webkitLineClamp !== '' && element.classList && element.classList.value && element.classList.value.includes('ellipsis')) {\r\n        this.disabled = element.scrollHeight <= element.clientHeight;\r\n      }\r\n    } else if (this.showOnTruncatedElement) {\r\n      this.disabled = this.showOnTruncatedElement.scrollWidth <= this.showOnTruncatedElement.clientWidth;\r\n    } else {\r\n      this.disabled = false;\r\n    }\r\n    //attach the component if it has not already attached to the overlay\r\n    if (!this.disabled && this._overlayRef && !this._overlayRef.hasAttached()) {\r\n      setTimeout(() => {\r\n        this.tooltipRef = this._overlayRef.attach(new ComponentPortal(MrdTooltipComponent));\r\n        this.tooltipRef.instance.text = this.text;\r\n        this.tooltipRef.instance.contentTemplate = this.contentTemplate;\r\n        this.tooltipRef.instance.defaultStyle = this.defaultStyle;\r\n\r\n        if (this.keepOnTooltipHover) {\r\n          this.tooltipRef.location.nativeElement.onmouseleave = () => {\r\n            this.closeToolTip();\r\n          }\r\n        }\r\n      }, this.showDelay);\r\n    }\r\n  }\r\n\r\n  private isMouseOverTooltip(event: MouseEvent): boolean {\r\n    // Überprüfe, ob der Mauszeiger sich über dem Tooltip befindet\r\n    if (!this.tooltipRef) {\r\n      return false;\r\n    }\r\n    const tooltipRect = this.tooltipRef.location.nativeElement.getBoundingClientRect();\r\n    return (\r\n      event.clientX + 10 >= tooltipRect.left &&\r\n      event.clientX - 10 <= tooltipRect.right &&\r\n      event.clientY + 10 >= tooltipRect.top &&\r\n      event.clientY - 10 <= tooltipRect.bottom\r\n    );\r\n  }\r\n\r\n  /**\r\n   * This method will be called when the mouse goes out of the host element\r\n   * i.e. where this directive is applied\r\n   * This method will close the tooltip by detaching the overlay from the view\r\n   */\r\n  @HostListener('mouseleave', ['$event'])\r\n  hide(event?: MouseEvent) {\r\n    if (this.tooltipRef && this.keepOnTooltipHover && event) {\r\n      setTimeout(() => {\r\n        if (!this.isMouseOverTooltip(event)) {\r\n          this.closeToolTip();\r\n        } else {\r\n          this.tooltipRef.location.nativeElement.onmouseleave = () => {\r\n            this.closeToolTip();\r\n          }\r\n        }\r\n      }, 200);\r\n    } else {\r\n      this.closeToolTip();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroy lifecycle event handler\r\n   * This method will make sure to close the tooltip\r\n   */\r\n  ngOnDestroy() {\r\n    this.closeToolTip();\r\n  }\r\n\r\n  /**\r\n   * This method will close the tooltip by detaching the component from the overlay\r\n   */\r\n  private closeToolTip() {\r\n    if (this._overlayRef) {\r\n      setTimeout(() => {\r\n        this._overlayRef.detach();\r\n      }, this.hideDelay);\r\n    }\r\n  }\r\n}\r\n","<!-- Der eigentlich HTML-Button -->\r\n<button class=\"mrd-button-container\"\r\n  #buttonContainer\r\n  [style.--bg-color]=\"bgColor\"\r\n  [style.--text-color]=\"textColor\"\r\n  [style.--disabled-text-color]=\"disabledTextColor\"\r\n  [style.--disabled-bg-color]=\"disabledBgColor\"\r\n  [style.--border-width]=\"borderWidth\"\r\n  [style.--border-color]=\"borderColor\"\r\n  [style.--border-style]=\"borderStyle\"\r\n  [style.--border-radius]=\"borderRadius\"\r\n  [style.--min-height]=\"minHeight\"\r\n  [style.--font-size]=\"fontSize\"\r\n  [style.--diameter]=\"diameter\"\r\n  [style.--icon-size]=\"iconSize\"\r\n  [style.--unselected-color]=\"toggleUnselectedColor\"\r\n\r\n  (click)=\"onClick($event)\"\r\n\r\n  [ngStyle]=\"{'min-width': fitContent ? 'fit-content' : 'unset'}\"\r\n  [ngClass]=\"{'mrd-icon-button': icon, 'mrd-raised-button': raised, 'mrd-outline-button': outline,\r\n    'mrd-flat-button': flat, 'mrd-fab-button': fab, 'mrd-mini-fab-button': miniFab, 'mrd-toggle-button': toggle,\r\n    'mrd-toggle-selected': toggleSelected, 'disabled': disabled}\"\r\n\r\n  [mrdToolTip]=\"tooltipText\" [showOnTruncatedElement]=\"tooltipIfTruncated ? mrdButtonTextContent : undefined\" [showToolTip]=\"showTooltip\">\r\n  <div class=\"mrd-button-background\">\r\n    <!-- Ein Overlay über dem Button welches den Hover- und Active-Effekt anzeigt -->\r\n    <div class=\"mrd-button-focus\" [style.--hover-color]=\"hoverColor\" [style.--active-color]=\"activeColor\"></div>\r\n  </div>\r\n  <!-- Ein Overlay über dem Button welches den Hover- und Active-Effekt anzeigt -->\r\n  <!-- <div class=\"mrd-button-focus\" [style.--hover-color]=\"hoverColor\" [style.--active-color]=\"activeColor\"></div> -->\r\n  <!-- Der Content des Buttons -->\r\n  <span class=\"mrd-button-content\" [ngClass]=\"{'isCollapsed': isCollapsed}\">\r\n    <!-- Icons links vom Text -->\r\n    <span class=\"mrd-button-icon-content\" [ngClass]=\"{'full-icon': fullIcon}\" [hideIfTruncated]=\"collapse\" displayState=\"flex\" requiredHideAttribute=\"icon-collapse\"\r\n      checkChildrenForAttribute [hideOnTruncatedElement]=\"mrdButtonTextContent\" [parentResizeElement]=\"this.elementRef.nativeElement\"><ng-content select=\"mrd-icon:not([icon-end]), [mrd-icon]:not([icon-end])\"></ng-content></span>\r\n    <!-- Der Text des Buttons -->\r\n    <span class=\"mrd-button-text-content\" (hiddenChanged)=\"buttonCollapsed($event)\" [hideIfTruncated]=\"collapse\" #mrdButtonTextContent [parentResizeElement]=\"this.elementRef.nativeElement\"><ng-content select=\":not([mrd-icon]):not(mrd-icon)\"></ng-content></span>\r\n    <!-- Icons rechts vom Text -->\r\n    <span class=\"mrd-button-icon-content\" [ngClass]=\"{'full-icon': fullIcon}\" [hideIfTruncated]=\"collapse\" displayState=\"flex\" requiredHideAttribute=\"icon-collapse\"\r\n      checkChildrenForAttribute [hideOnTruncatedElement]=\"mrdButtonTextContent\" [parentResizeElement]=\"this.elementRef.nativeElement\"><ng-content select=\"mrd-icon[icon-end], [mrd-icon][icon-end]\"></ng-content></span>\r\n  </span>\r\n  <!-- Die Progress-Bar eines Buttons (nicht für Icon-, Fab- und Mini-Fab-Buttons) -->\r\n  <mrd-progress-bar class=\"mrd-button-progress-bar\"\r\n    *ngIf=\"!disabled && !icon && !fab && !miniFab && (isLoading || loading?.value || loadingProgress?.value || loadingProgress?.value === 0)\"\r\n    [value]=\"loadingProgress?.value\" [mode]=\"loadingProgress ? 'determinate' : 'indeterminate'\" [color]=\"progressColor\"></mrd-progress-bar>\r\n  <!-- Der Progress-Spinner eines Buttons (nur für Icon-, Fab- und Mini-Fab-Buttons) -->\r\n  <mrd-progress-spinner class=\"mrd-button-progress-spinner\"\r\n    *ngIf=\"!disabled && (icon || fab || miniFab) && (isLoading || loading?.value || loadingProgress?.value || loadingProgress?.value === 0)\"\r\n    [value]=\"loadingProgress?.value\" [mode]=\"loadingProgress ? 'determinate' : 'indeterminate'\" [color]=\"progressColor\"></mrd-progress-spinner>\r\n</button>\r\n","import { MrdBorder } from './../../../../common/model/config.model';\r\nimport { BasePushStrategyObject, ObservableValue, Util } from 'mrd-core';\r\nimport { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, Output,ViewChild, booleanAttribute } from '@angular/core';\r\nimport { ColorUtil } from './../../../../common/util/color.util';\r\nimport { MrdConfigModel } from './../../../../common/model/config.model';\r\nimport { ConfigUtil } from './../../../../common/util/config.util';\r\nimport * as _ from 'underscore';\r\nimport { MrdBaseColorTheme } from './../../../../common/model/config.model';\r\nimport { colorAttribute, colorThemeAttribute } from './../../../../common/transforms/color-transform';\r\nimport { sizeAttribute } from './../../../../common/transforms/size-transform';\r\n/**\r\n * Dieses Komponente stellt den Mrd-Button zur Verfügung.\r\n *\r\n * Der Button kann mittels der entsprechenden Attribute in folgenden Stilen dargestellt werden:\r\n * - Standard-Button (default)\r\n * - Icon-Button (Attributname: icon-button)\r\n * - Raised-Button (Attributname: raised-button)\r\n * - Outline-Button (Attributname: outline-button)\r\n * - Flat-Button (Attributname: flat-button)\r\n * - Fab-Button (Attributname: fab-button)\r\n * - MiniFab-Button (Attributname: miniFab-button)\r\n *\r\n * Weiterhin können die standard Themes (primary, accent, warn) für die Hintergrund- bzw. Textfarbe festgelegt werden (je nach Style).\r\n *\r\n * Für weitere Anpassungen siehe die Informationen der einzelnen Attribute oder die Dokumentation.\r\n *\r\n * @class MrdButtonComponent\r\n * @extends {BasePushStrategyObject}\r\n * @implements {AfterViewInit}\r\n */\r\n@Component({\r\n  selector: 'mrd-button',\r\n  host: {\r\n   '[style.min-width]': 'fitContent ? \"fit-content\" : \"unset\"',\r\n   '[style.margin]': 'toggle ? \"0 -16px\" : \"unset\"',\r\n   '[style.transition]': 'toggle ? \"transform 0.2s\" : \"unset\"',\r\n   '[class.active]': 'toggle && toggleActive'\r\n  },\r\n  templateUrl: './mrd-button.component.html',\r\n  styleUrls: ['./mrd-button.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MrdButtonComponent extends BasePushStrategyObject implements AfterViewInit {\r\n\r\n  /**\r\n   * Referenz auf das Text-Element des Buttons.\r\n   *\r\n   * @type {ElementRef<HTMLElement>}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @ViewChild('mrdButtonTextContent', {static: true}) mrdButtonTextContent: ElementRef<HTMLElement>;\r\n\r\n  /**\r\n   * Gibt an, ob der Button ein Icon-Button ist.\r\n   *\r\n   * Der Content des Buttons sollte nur ein Icon sein.\r\n   * Der Button hat standardmäßig einen transparenten Hintergrund und die Farbe des Icons ist schwarz.\r\n   *\r\n   * @type {boolean}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({alias: 'icon-button', transform: booleanAttribute}) icon: boolean = false;\r\n\r\n  /**\r\n   * Gibt an, ob der Button ein Raised-Button ist.\r\n   *\r\n   * Raised-Buttons haben einen Schatten.\r\n   * Der Button hat standardmäßig einen weißen Hintergrund und die Textfarbe schwarz.\r\n   *\r\n   * @type {boolean}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({alias: 'raised-button', transform: booleanAttribute}) raised: boolean = false;\r\n  /**\r\n   * Gibt an, ob der Button ein Outline-Button ist.\r\n   *\r\n   * Outline-Buttons haben standardmäßig einen transparenten Hintergrund und einen grauen Rand, sowie einen schwarzen Text.\r\n   *\r\n   * @type {boolean}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({alias: 'outline-button', transform: booleanAttribute}) outline: boolean = false;\r\n  /**\r\n   * Gibt an, ob der Button ein Flat-Button ist.\r\n   *\r\n   * Flat-Buttons haben standardmäßig einen weißen Hintergrund und die Textfarbe ist schwarz.\r\n   *\r\n   * @type {boolean}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({alias: 'flat-button', transform: booleanAttribute}) flat: boolean = false;\r\n  /**\r\n   * Gibt an, ob der Button ein Fab-Button ist.\r\n   *\r\n   * Fab-Buttons sind kreisförmige Buttons.\r\n   * Standardmäßig haben sie einen weißen Hintergrund und die Iconfarbe ist schwarz, außerdem besitzen sie einen Schatten.\r\n   *\r\n   * @type {boolean}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({alias: 'fab-button', transform: booleanAttribute}) fab: boolean = false;\r\n  /**\r\n   * Gibt an, ob der Button ein MiniFab-Button ist.\r\n   *\r\n   * MiniFab-Buttons sind kreisförmige Buttons von der Größe eines Icon-Buttons.\r\n   * Standardmäßig haben sie einen weißen Hintergrund und die Iconfarbe ist schwarz, außerdem besitzen sie einen Schatten.\r\n   *\r\n   * @type {boolean}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({alias: 'miniFab-button', transform: booleanAttribute}) miniFab: boolean = false;\r\n\r\n  @Input({alias: 'toggle-button', transform: booleanAttribute}) toggle: boolean = false;\r\n\r\n  @Input({alias: 'selected', transform: booleanAttribute}) toggleSelected: boolean = false;\r\n\r\n  /**\r\n   * Gibt an, ob der Button das Theme \"primary\" hat.\r\n   *\r\n   * Hierdurch wird die Hintergrundfarbe des Buttons auf die primäre Farbe des Themes gesetzt.\r\n   *\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({transform: booleanAttribute}) public primary: boolean = false;\r\n\r\n  /**\r\n   * Gibt an, ob der Button das Theme \"accent\" hat.\r\n   *\r\n   * Hierdurch wird die Hintergrundfarbe des Buttons auf die Akzentfarbe des Themes gesetzt.\r\n   *\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({transform: booleanAttribute}) public accent: boolean = false;\r\n\r\n  /**\r\n   * Gibt an, ob der Button das Theme \"warn\" hat.\r\n   *\r\n   * Hierdurch wird die Hintergrundfarbe des Buttons auf die Warnfarbe des Themes gesetzt.\r\n   *\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({transform: booleanAttribute}) public warn: boolean = false;\r\n\r\n  /**\r\n   * Gibt an, ob der Button deaktiviert ist.\r\n   *\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({transform: booleanAttribute}) public disabled: boolean = false;\r\n\r\n  /**\r\n   * Eine ObservableValue, die übergeben werden kann, um zu bestimmen,\r\n   * ob der Button einen Ladebalken/Ladespinner anzeigen soll.\r\n   *\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input() public loading: ObservableValue<boolean>;\r\n  /**\r\n   * Ein boolean, der bestimmt, ob der Button einen Ladebalken/Ladespinner anzeigen soll.\r\n   *\r\n   * @type {boolean}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({transform: booleanAttribute}) public isLoading: boolean = false;\r\n  /**\r\n   * Eine ObservableValue, die übergeben werden kann, um den Fortschritt des Ladebalkens/Ladespinners zu bestimmen.\r\n   *\r\n   * @type {ObservableValue<number>}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input() public loadingProgress: ObservableValue<number>;\r\n\r\n  /**\r\n   * Setzt die Grundfarbe des Buttons.\r\n   *\r\n   * Diese wird je nach Style des Buttons als Hintergrundfarbe oder Textfarbe verwendet.\r\n   *\r\n   * Es können Hex-, RGB- oder RGBA-Werte, sowie \"primary\", \"accent\" oder \"warn\" angegeben werden.\r\n   *\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({alias: 'color', transform: colorThemeAttribute}) public customTextColor: string;\r\n\r\n  /**\r\n   * Setzt die Hintergrundfarbe des Buttons.\r\n   *\r\n   * Es können Hex-, RGB- oder RGBA-Werte angegeben werden.\r\n   *\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({alias: 'backgroundColor', transform: colorAttribute}) public customBgColor: string;\r\n\r\n  /**\r\n   * Gibt an, ob die benutzerdefinierte Textfarbe nicht durch ein defniertes Thema überschrieben werden soll.\r\n   *\r\n   * @type {boolean}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({transform: booleanAttribute}) public keepCustomTextColor: boolean = false;\r\n  /**\r\n   * Gibt an, ob die benutzerdefinierte Hintergrundfarbe nicht durch ein definiertes Thema überschrieben werden soll.\r\n   *\r\n   * @type {boolean}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({transform: booleanAttribute}) public keepCustomBgColor: boolean = false;\r\n\r\n  @Input({transform: colorAttribute}) public customToggleUnselectedColor: string;\r\n\r\n  @Input({transform: colorAttribute}) public customToggleUnselectedTextColor: string;\r\n\r\n  @Input({transform: colorAttribute}) public customToggleSelectedTextColor: string;\r\n\r\n  /**\r\n   * Setzt die Farbe des Ladebalkens/Ladespinners.\r\n   *\r\n   * Es können Hex-, RGB- oder RGBA-Werte angegeben werden.\r\n   *\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({transform: colorAttribute}) public progressColor: string;\r\n\r\n  /**\r\n   * Gibt an, ob der Button-Text verschwindet, wenn er zu lang ist und ausgepunktet werden würde.\r\n   *\r\n   * @type {boolean}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({transform: booleanAttribute}) public collapse: boolean = false;\r\n  /**\r\n   * Gibt an, zu welchem Style der Button kollabieren soll.\r\n   * Mögliche Werte: \"icon\", \"fab\", \"miniFab\"\r\n   *\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input() public set collapseTo(value: string) {\r\n    if (this._collapseTo === value) {\r\n      return;\r\n    }\r\n    if (value === MrdButtonAppearance.ICON || value === MrdButtonAppearance.FAB || value === MrdButtonAppearance.MINI_FAB) {\r\n      this._collapseTo = value;\r\n      this.collapse = true;\r\n    } else if (value) {\r\n      throw Error('Das Attribut collapseTo kann nur \"icon\", \"fab\" oder \"miniFab\" sein.');\r\n    }\r\n  }\r\n  public get collapseTo(): string {\r\n    return this._collapseTo;\r\n  }\r\n  private _collapseTo: string;\r\n\r\n  /**\r\n   * Sorgt dafür, dass der Button immer mindestens so breit ist, wie sein Inhalt.\r\n   *\r\n   * @type {boolean}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({alias: 'fit-content', transform: booleanAttribute}) public fitContent: boolean = false;\r\n\r\n  /**\r\n   * Gibt an, ob der Button einen Tooltip anzeigen soll.\r\n   *\r\n   * Der Tooltip-Text wird standardmäßig aus dem Inhalt des Buttons ohne durch [mrd-icon] gekennzeichnete Icons generiert.\r\n   *\r\n   * @type {boolean}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({alias: 'tooltip', transform: booleanAttribute}) public showTooltip: boolean = false;\r\n  /**\r\n   * Der Text des Tooltips.\r\n   *\r\n   * @type {string}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input() public tooltipText: string;\r\n  /**\r\n   * Gibt an, ob der Tooltip nur angezeigt werden soll, wenn der Button-Text ausgepunktet wird.\r\n   *\r\n   * @type {boolean}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({transform: booleanAttribute}) public set tooltipIfTruncated(value: boolean) {\r\n    this.showTooltip = value || this.showTooltip;\r\n    this._tooltipIfTruncated = value;\r\n  }\r\n  public get tooltipIfTruncated(): boolean {\r\n    return this._tooltipIfTruncated;\r\n  }\r\n  private _tooltipIfTruncated: boolean = false;\r\n\r\n  /**\r\n   * Die Mindesthöhe des Buttons.\r\n   *\r\n   * Wird eine Zahl angegeben, wird diese als Pixelwert interpretiert.\r\n   *\r\n   * @type {string | number}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({transform: sizeAttribute}) public minHeight: string;\r\n  /**\r\n   * Die Schriftgröße des Buttons.\r\n   *\r\n   * Wird eine Zahl angegeben, wird diese als Pixelwert interpretiert.\r\n   *\r\n   * @type {string | number}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({transform: sizeAttribute}) public fontSize: string;\r\n  /**\r\n   * Der Durchmesser für Icon-, Fab- und MiniFab-Buttons.\r\n   *\r\n   * Wird eine Zahl angegeben, wird diese als Pixelwert interpretiert.\r\n   *\r\n   * @type {string | number}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({transform: sizeAttribute}) public diameter: string;\r\n  /**\r\n   * Die Größe des Icons.\r\n   *\r\n   * Wird eine Zahl angegeben, wird diese als Pixelwert interpretiert.\r\n   *\r\n   * @type {string | number}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({transform: sizeAttribute}) public iconSize: string;\r\n\r\n  @Input({transform: booleanAttribute}) public fullIcon: boolean = false;\r\n  /**\r\n   * Der Radius der Ecken des Buttons.\r\n   *\r\n   * Wird eine Zahl angegeben, wird diese als Pixelwert interpretiert.\r\n   *\r\n   * @type {string | number}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Input({transform: sizeAttribute}) public borderRadius: string;\r\n\r\n  /**\r\n   * Das Klick-Event durch den Nutzer.\r\n   *\r\n   * @type {EventEmitter<Event>}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  @Output() public click: EventEmitter<Event> = new EventEmitter<Event>();\r\n\r\n\r\n  /**\r\n   * Die Konfiguration des Mrd-Buttons.\r\n   *\r\n   * @private\r\n   * @type {MrdConfigModel}\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  private _config: MrdConfigModel = ConfigUtil.getConfig();\r\n\r\n  public isCollapsed: boolean = false;\r\n  private uncollapsedAppearance: MrdButtonAppearance;\r\n\r\n  private buttonPrimary: string | MrdBaseColorTheme;\r\n  private buttonAccent: string | MrdBaseColorTheme;\r\n  private buttonWarn: string | MrdBaseColorTheme;\r\n  private buttonDisabled: MrdBaseColorTheme;\r\n  private buttonProgress: string;\r\n\r\n  public bgColor: string;\r\n  private textLightColor: string;\r\n  private textDarkColor: string;\r\n  public textColor: string;\r\n  public hoverColor: string;\r\n  public activeColor: string;\r\n  public disabledTextColor: string;\r\n  public disabledBgColor: string;\r\n  public toggleUnselectedColor: string;\r\n\r\n  public borderWidth: string;\r\n  public borderStyle: string;\r\n  public borderColor: string;\r\n\r\n\r\n  constructor(\r\n    protected cdr: ChangeDetectorRef,\r\n    public elementRef: ElementRef<HTMLElement>\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (Util.isDefined(this.loading)) {\r\n      this.markForCheckIf(this.loading.changed)\r\n    }\r\n    if (Util.isDefined(this.loadingProgress)) {\r\n      this.markForCheckIf(this.loadingProgress.changed)\r\n    }\r\n\r\n    this.initBaseStyle();\r\n\r\n    this.updateStyle();\r\n\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  public updateStyle(): void {\r\n    let themesCount = [this.primary, this.accent, this.warn].filter((value) => value).length;\r\n    if (themesCount > 1) {\r\n      throw Error('Ein MrdButton kann nur ein Thema haben. Setze \"primary\", \"accent\" oder \"warn\" als Thema.');\r\n    }\r\n    let appearanceCount = [this.icon, this.raised, this.outline, this.flat, this.fab, this.miniFab, this.toggle].filter((value) => value).length;\r\n    if (appearanceCount > 1) {\r\n      throw Error('Ein MrdButton kann nur einen Style haben. Setze \"icon-button\", \"raised-button\", \"outline-button\", \"flat-button\", \"fab-button\", \"miniFab-button\" oder keinen Style.');\r\n    }\r\n\r\n    // Falls irgendeine Farbe/Thema gesetzt ist, wird die Hintergrund- und Textfarbe des Buttons anhand dieser und des Styles gesetzt.\r\n    if (this.primary || this.accent || this.warn || this.customBgColor || this.customTextColor) {\r\n      // Wenn 'keepCustomBgColor' gesetzt ist, dann wird 'customBgColor' als 'baseColor' verwendet\r\n      let baseColor: string = this.keepCustomBgColor && !!this.customBgColor ? this.customBgColor :\r\n        // Sonst wenn ein Theme gesetzt ist, wird die entsprechende Farbe des Themes verwendet\r\n        this.primary ? _.isObject(this.buttonPrimary) ? (this.buttonPrimary as MrdBaseColorTheme).background : this.buttonPrimary as string :\r\n        this.accent ? _.isObject(this.buttonAccent) ? (this.buttonAccent as MrdBaseColorTheme).background : this.buttonAccent as string :\r\n        this.warn ? _.isObject(this.buttonWarn) ? (this.buttonWarn as MrdBaseColorTheme).background : this.buttonWarn as string :\r\n        // Sonst wenn 'customBgColor' gesetzt ist, wird 'customBgColor' verwendet, sonst 'customTextColor'\r\n        !!this.customBgColor ? this.customBgColor : this.customTextColor;\r\n\r\n      // Wenn 'keepCustomTextColor' gesetzt ist, dann wird 'customTextColor' als 'baseTextColor' verwendet\r\n      let baseTextColor = this.keepCustomTextColor && !!this.customTextColor ? this.customTextColor :\r\n        // Sonst wenn ein Theme gesetzt ist, wird die entsprechende Farbe des Themes verwendet\r\n        this.primary ? _.isObject(this.buttonPrimary) ? (this.buttonPrimary as MrdBaseColorTheme).text : this.buttonPrimary as string :\r\n        this.accent ? _.isObject(this.buttonAccent) ? (this.buttonAccent as MrdBaseColorTheme).text : this.buttonAccent as string :\r\n        this.warn ? _.isObject(this.buttonWarn) ? (this.buttonWarn as MrdBaseColorTheme).text : this.buttonWarn as string :\r\n        // Sonst wenn 'customTextColor' gesetzt ist, wird 'customTextColor' verwendet, sonst 'textDarkColor'\r\n        !!this.customTextColor ? this.customTextColor : this.textDarkColor;\r\n\r\n      // 'bgColor' wird auf 'baseColor' gesetzt\r\n      this.bgColor = baseColor;\r\n      // Wenn 'keepCustomTextColor' oder kein Thema und 'customBgColor', und 'customTextColor' gesetzt sind, wird 'textColor' auf 'customTextColor' gesetzt\r\n      this.textColor = (this.keepCustomTextColor || (themesCount === 0 && this.customBgColor)) && !!this.customTextColor ? this.customTextColor :\r\n        // Sonst wenn ein Thema und 'keepCustomBgColor' gesetzt ist, wird 'baseTextColor' verwendet\r\n        (themesCount === 1 && this.keepCustomBgColor) ? baseTextColor :\r\n        // Sonst, wenn die Appearance nicht Toggle ist oder der Toggle-Button selektiert ist,\r\n        // wird anhand der 'baseColor' entschieden, ob 'textDarkColor' oder 'textLightColor' verwendet wird\r\n        this.toggle ? this.toggleSelected && this.customToggleSelectedTextColor ? this.customToggleSelectedTextColor :\r\n          !this.toggleSelected && this.customToggleUnselectedTextColor ? this.customToggleUnselectedTextColor :\r\n        /*!this.toggle ||*/ this.toggleSelected ? ColorUtil.shouldTextBeDark(baseColor) ? this.textDarkColor : this.textLightColor :\r\n        ColorUtil.shouldTextBeDark(this.toggleUnselectedColor) ? this.textDarkColor : this.textLightColor :\r\n        // Wenn die Appearance Toggle ist und der Button nicht selektiert ist und 'customToggleUnselectedTextColor' gesetzt ist,\r\n        // wird diese verwendet\r\n        // this.customToggleUnselectedTextColor ? this.customToggleUnselectedTextColor :\r\n        // Sonst wird anhand von 'toggleUnselectedColor' entschieden, ob 'textDarkColor' oder 'textLightColor' verwendet wird\r\n        ColorUtil.shouldTextBeDark(baseColor) ? this.textDarkColor : this.textLightColor;\r\n        // Sonst wird 'toggleUnselectedTextColor' verwendet\r\n      // 'hoverColor' wird auf 20% transparente Version von 'baseColor' gesetzt\r\n      this.hoverColor = ColorUtil.changeColorOpacity(baseColor, 20);\r\n      // 'activeColor' wird auf 30% transparente Version von 'baseColor' mit 10% hellerer Farbe gesetzt\r\n      this.activeColor = ColorUtil.changeColorOpacity(ColorUtil.changeColorBrightnessPercent(baseColor, 10), 30);\r\n    }\r\n\r\n    // Für den Standard-Style, Outline-Style und Icon-Style\r\n    if (appearanceCount === 0 || this.outline || this.icon) {\r\n      // Wenn ein Thema und 'keepCustomBgColor' nicht gesetz ist ODER\r\n      // keine 'customBgColor', aber 'customTextColor' gesetzt sind...\r\n      if ((themesCount === 1 && !this.keepCustomBgColor) || (!this.customBgColor && this.customTextColor)) {\r\n        // ... wird 'textColor', falls nicht durch 'keepCustomTextColor' und 'customTextColor' fest, auf 'bgColor' gesetzt\r\n        this.textColor = (this.keepCustomTextColor && !!this.customTextColor) ? this.customTextColor : this.bgColor;\r\n        // ... wird 'bgColor', falls nicht durch 'keepCustomBgColor' und 'customBgColor' fest, auf die Standard-Hintergrundfarbe gesetzt\r\n        this.bgColor = (this.keepCustomBgColor && !!this.customBgColor) ? this.customBgColor : this._config.button.backgroundColor;\r\n      }\r\n    }\r\n\r\n    // Falls keine 'progressColor' gesetzt ist...\r\n    if (!this.progressColor) {\r\n      // ... und wir ein Theme oder eine benutzerdefinierte Textfarbe oder Hintergrundfarbe haben...\r\n      if (themesCount === 1 || this.customTextColor || this.customBgColor) {\r\n        // ... wird 'progressColor' für den Standard-Style, Outline-Style und Icon-Style auf 'textColor' gesetzt,\r\n        // ansonsten auf 20% hellere Version von 'bgColor'\r\n        if (appearanceCount === 0 || this.outline || this.icon) {\r\n          this.progressColor = this.textColor;\r\n        } else {\r\n          this.progressColor = ColorUtil.changeColorBrightnessPercent(this.bgColor, 20);\r\n        }\r\n      } else {\r\n        // Ohne Theme und benutzerdefinierte Farben wird 'progressColor' auf die Grund-Progress-Color gesetzt\r\n        this.progressColor = this.buttonProgress;\r\n      }\r\n    }\r\n\r\n    // Falls kein explizieter 'tooltipText' gesetzt ist, wird der Text des Buttons als Tooltip-Text verwendet\r\n    if (this.mrdButtonTextContent && !this.tooltipText) {\r\n      this.tooltipText = this.mrdButtonTextContent.nativeElement.textContent;\r\n    }\r\n\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  /**\r\n   * Setzt die Standard-Styles anhand der Konfiguration und der gesetzten Attribute.\r\n   *\r\n   * @private\r\n   * @memberof MrdButtonComponent\r\n   */\r\n  private initBaseStyle(): void {\r\n    let appearance: MrdButtonAppearance = this.icon ? MrdButtonAppearance.ICON : this.raised ? MrdButtonAppearance.RAISED :\r\n      this.outline ? MrdButtonAppearance.OUTLINE : this.flat ? MrdButtonAppearance.FLAT : this.fab ? MrdButtonAppearance.FAB :\r\n      this.miniFab ? MrdButtonAppearance.MINI_FAB : this.toggle ? MrdButtonAppearance.TOGGLE : null;//MrdButtonAppearance.DEFAULT;\r\n    this.uncollapsedAppearance = this.uncollapsedAppearance !== undefined ? this.uncollapsedAppearance : appearance;\r\n\r\n    this.buttonPrimary = this._config.button[appearance]?.primary || this._config.button.primary || this._config.baseColors.primary;\r\n    this.buttonAccent = this._config.button[appearance]?.accent || this._config.button.accent || this._config.baseColors.accent;\r\n    this.buttonWarn = this._config.button[appearance]?.warn || this._config.button.warn || this._config.baseColors.warn;\r\n    this.buttonDisabled = this._config.button[appearance]?.disabled || this._config.button.disabled\r\n    this.buttonProgress = this._config.button[appearance]?.progressColor || this._config.button?.progressColor ||\r\n      (_.isObject(this.buttonPrimary) ? (this.buttonPrimary as MrdBaseColorTheme).text : this.buttonPrimary as string);\r\n\r\n    this.bgColor = this._config.button[appearance]?.backgroundColor || this._config.button.backgroundColor;\r\n    this.textLightColor = this._config.button[appearance]?.textLightColor || this._config.button.textLightColor;\r\n    this.textDarkColor = this._config.button[appearance]?.textDarkColor || this._config.button.textDarkColor;\r\n    this.textColor = this.textDarkColor;\r\n    this.hoverColor = this._config.button[appearance]?.hoverColor || this._config.button.hoverColor;\r\n    this.activeColor = this._config.button[appearance]?.activeColor || this._config.button.activeColor;\r\n    this.disabledTextColor = this.buttonDisabled.text;\r\n    this.disabledBgColor = this.buttonDisabled.background;\r\n    this.toggleUnselectedColor = this.customToggleUnselectedColor || this._config.button[appearance]?.unselectedBgColor;\r\n\r\n    if (this._config.button[appearance]?.border) {\r\n      if (_.isObject(this._config.button[appearance].border)) {\r\n        this.borderWidth = (this._config.button[appearance].border as MrdBorder).width;\r\n        this.borderStyle = (this._config.button[appearance].border as MrdBorder).style;\r\n        this.borderColor = (this._config.button[appearance].border as MrdBorder).color;\r\n      } else {\r\n        let border =  (this._config.button[appearance].border as string).split(' ')\r\n        this.borderWidth = border[0];\r\n        this.borderStyle = border[1];\r\n        this.borderColor = border[2];\r\n      }\r\n    } else {\r\n      this.borderWidth = _.isObject(this._config.button.border) ? (this._config.button.border as MrdBorder)?.width : (this._config.button.border as string).split(' ')[0];\r\n      this.borderStyle = _.isObject(this._config.button.border) ? (this._config.button.border as MrdBorder)?.style : (this._config.button.border as string).split(' ')[1];\r\n      this.borderColor = _.isObject(this._config.button.border) ? (this._config.button.border as MrdBorder)?.color : (this._config.button.border as string).split(' ')[2];\r\n    }\r\n\r\n    this.minHeight = this.minHeight || this.diameter || this._config.button[appearance]?.minHeight || this._config.button.minHeight;\r\n    this.fontSize = this.fontSize || this._config.button[appearance]?.fontSize || this._config.button.fontSize;\r\n    this.diameter = this.diameter || this._config.button[appearance]?.diameter || this._config.button.diameter;\r\n    this.iconSize = this.iconSize || this._config.button[appearance]?.iconSize || this._config.button.iconSize;\r\n    this.borderRadius = this.borderRadius || this._config.button[appearance]?.borderRadius || this._config.button.borderRadius;\r\n  }\r\n\r\n  /**\r\n   * Callback, wenn sich der Collabs-Status des Buttons ändert.\r\n   *\r\n   * @param isCollapsed Gibt an, ob der Button kollabiert ist.\r\n   */\r\n  public buttonCollapsed(isCollapsed: boolean): void {\r\n    // Wir reagieren nur, wenn sich der Status ändert\r\n    if (this.isCollapsed !== isCollapsed) {\r\n      this.isCollapsed = isCollapsed;\r\n      // Wenn 'collapseTo' gesetzt ist, wird der Button entsprechend umgestylt\r\n      if (Util.isDefined(this.collapseTo)) {\r\n        // Diese Werte müssen zurückgesetzt werden, da sie für den neuen Style neu gesetzt werden müssen\r\n        this.borderRadius = undefined;\r\n        this.fontSize = undefined;\r\n        this.minHeight = undefined;\r\n        this.diameter = undefined;\r\n        this.iconSize = undefined;\r\n        if (isCollapsed) {\r\n          this.icon = this.collapseTo === MrdButtonAppearance.ICON ? true : false;\r\n          this.raised = false;\r\n          this.outline = false;\r\n          this.flat = false;\r\n          this.fab = this.collapseTo === MrdButtonAppearance.FAB ? true : false;\r\n          this.miniFab = this.collapseTo === MrdButtonAppearance.MINI_FAB ? true : false;\r\n          this.ngAfterViewInit();\r\n        } else {\r\n          this.icon = this.uncollapsedAppearance === MrdButtonAppearance.ICON ? true : false;\r\n          this.raised = this.uncollapsedAppearance === MrdButtonAppearance.RAISED ? true : false;\r\n          this.outline = this.uncollapsedAppearance === MrdButtonAppearance.OUTLINE ? true : false;\r\n          this.flat = this.uncollapsedAppearance === MrdButtonAppearance.FLAT ? true : false;\r\n          this.fab = this.uncollapsedAppearance === MrdButtonAppearance.FAB ? true : false;\r\n          this.miniFab = this.uncollapsedAppearance === MrdButtonAppearance.MINI_FAB ? true : false;\r\n          this.ngAfterViewInit();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public onClick(event: Event): void {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    this.click.emit(event);\r\n  }\r\n}\r\n\r\nenum MrdButtonAppearance {\r\n  // DEFAULT = null,\r\n  ICON = 'icon',\r\n  RAISED = 'raised',\r\n  OUTLINE = 'outline',\r\n  FLAT = 'flat',\r\n  FAB = 'fab',\r\n  MINI_FAB = 'miniFab',\r\n  TOGGLE = 'toggle'\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MrdProgressBarComponent } from './components/mrd-progress-bar/mrd-progress-bar.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MrdProgressBarComponent\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    MrdProgressBarComponent\r\n  ]\r\n})\r\nexport class MrdProgressBarModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MrdProgressSpinnerComponent } from './components/mrd-progress-spinner/mrd-progress-spinner.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MrdProgressSpinnerComponent\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    MrdProgressSpinnerComponent\r\n  ]\r\n})\r\nexport class MrdProgressSpinnerModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MrdTooltipComponent } from './components/mrd-tooltip/mrd-tooltip.component';\r\nimport { ToolTipRendererDirective } from './common/directive/tool-tip-renderer/tool-tip-renderer.directive';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MrdTooltipComponent,\r\n    ToolTipRendererDirective\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    ToolTipRendererDirective\r\n  ]\r\n})\r\nexport class MrdTooltipModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MrdButtonComponent } from './components/mrd-button/mrd-button.component';\r\nimport { MrdProgressBarModule } from '../mrd-progress-bar/mrd-progress-bar.module';\r\nimport { MrdProgressSpinnerModule } from '../mrd-progress-spinner/mrd-progress-spinner.module';\r\nimport { MrdTooltipModule } from '../mrd-tooltip/mrd-tooltip.module';\r\nimport { MrdDirectiveModule } from '../../common/directive/mrd-directive.module';\r\n\r\n/**\r\n * Dieses Modul stellt den Mrd-Button zur Verfügung.\r\n *\r\n * @export MrdButtonComponent\r\n * @class MrdButtonModule\r\n */\r\n@NgModule({\r\n  declarations: [MrdButtonComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MrdProgressBarModule,\r\n    MrdProgressSpinnerModule,\r\n    MrdTooltipModule,\r\n    MrdDirectiveModule\r\n  ],\r\n  exports: [MrdButtonComponent]\r\n})\r\nexport class MrdButtonModule { }\r\n","import { DOCUMENT } from '@angular/common';\r\nimport { Component, ElementRef, ErrorHandler, Inject, inject, InjectionToken, Input } from '@angular/core';\r\nimport { Subscription, take } from 'rxjs';\r\nimport { MrdIconRegistryService } from '../../../common/service/mrd-icon-registry.service';\r\n\r\n\r\n/**\r\n * Injection token used to provide the current location to `MatIcon`.\r\n * Used to handle server-side rendering and to stub out during unit tests.\r\n * @docs-private\r\n */\r\nexport const MRD_ICON_LOCATION = new InjectionToken<MrdIconLocation>('mrd-icon-location', {\r\n  providedIn: 'root',\r\n  factory: MRD_ICON_LOCATION_FACTORY,\r\n});\r\n\r\n/**\r\n * Stubbed out location for `MatIcon`.\r\n * @docs-private\r\n */\r\nexport interface MrdIconLocation {\r\n  getPathname: () => string;\r\n}\r\n\r\n/** @docs-private */\r\nexport function MRD_ICON_LOCATION_FACTORY(): MrdIconLocation {\r\n  const _document = inject(DOCUMENT);\r\n  const _location = _document ? _document.location : null;\r\n\r\n  return {\r\n    // Note that this needs to be a function, rather than a property, because Angular\r\n    // will only resolve it once, but we want the current path on each call.\r\n    getPathname: () => (_location ? _location.pathname + _location.search : ''),\r\n  };\r\n}\r\n\r\n/** SVG attributes that accept a FuncIRI (e.g. `url(<something>)`). */\r\nconst funcIriAttributes = [\r\n  'clip-path',\r\n  'color-profile',\r\n  'src',\r\n  'cursor',\r\n  'fill',\r\n  'filter',\r\n  'marker',\r\n  'marker-start',\r\n  'marker-mid',\r\n  'marker-end',\r\n  'mask',\r\n  'stroke',\r\n];\r\n/** Selector that can be used to find all elements that are using a `FuncIRI`. */\r\nconst funcIriAttributeSelector = funcIriAttributes.map(attr => `[${attr}]`).join(', ');\r\n\r\n/** Regex that can be used to extract the id out of a FuncIRI. */\r\nconst funcIriPattern = /^url\\(['\"]?#(.*?)['\"]?\\)$/;\r\n\r\n\r\n@Component({\r\n  selector: 'mrd-icon',\r\n  templateUrl: './mrd-icon.component.html',\r\n  styleUrls: ['./mrd-icon.component.scss']\r\n})\r\nexport class MrdIconComponent {\r\n\r\n  /** Name of the icon in the SVG icon set. */\r\n  @Input()\r\n  get svgIcon(): string {\r\n    return this._svgIcon;\r\n  }\r\n  set svgIcon(value: string) {\r\n    if (value !== this._svgIcon) {\r\n      if (value) {\r\n        this._updateSvgIcon(value);\r\n      } else if (this._svgIcon) {\r\n        this._clearSvgElement();\r\n      }\r\n      this._svgIcon = value;\r\n    }\r\n  }\r\n  private _svgIcon: string;\r\n\r\n  _svgName: string | null;\r\n  _svgNamespace: string | null;\r\n\r\n  /** Keeps track of the current page path. */\r\n  private _previousPath?: string;\r\n\r\n  /** Keeps track of the elements and attributes that we've prefixed with the current path. */\r\n  private _elementsWithExternalReferences?: Map<Element, {name: string; value: string}[]>;\r\n\r\n  /** Subscription to the current in-progress SVG icon request. */\r\n  private _currentIconFetch = Subscription.EMPTY;\r\n\r\n  constructor(\r\n    private _elementRef: ElementRef<HTMLElement>,\r\n    @Inject(MRD_ICON_LOCATION) private _location: MrdIconLocation,\r\n    private _errorHandler: ErrorHandler,\r\n    private _iconRegistry: MrdIconRegistryService,\r\n  ) {}\r\n\r\n  private _setSvgElement(svg: SVGElement) {\r\n    this._clearSvgElement();\r\n\r\n    // Note: we do this fix here, rather than the icon registry, because the\r\n    // references have to point to the URL at the time that the icon was created.\r\n    const path = this._location.getPathname();\r\n    this._previousPath = path;\r\n    this._cacheChildrenWithExternalReferences(svg);\r\n    this._prependPathToReferences(path);\r\n    this._elementRef.nativeElement.appendChild(svg);\r\n  }\r\n\r\n  private _clearSvgElement() {\r\n    const layoutElement: HTMLElement = this._elementRef.nativeElement;\r\n    let childCount = layoutElement.childNodes.length;\r\n\r\n    if (this._elementsWithExternalReferences) {\r\n      this._elementsWithExternalReferences.clear();\r\n    }\r\n\r\n    // Remove existing non-element child nodes and SVGs, and add the new SVG element. Note that\r\n    // we can't use innerHTML, because IE will throw if the element has a data binding.\r\n    while (childCount--) {\r\n      const child = layoutElement.childNodes[childCount];\r\n\r\n      // 1 corresponds to Node.ELEMENT_NODE. We remove all non-element nodes in order to get rid\r\n      // of any loose text nodes, as well as any SVG elements in order to remove any old icons.\r\n      if (child.nodeType !== 1 || child.nodeName.toLowerCase() === 'svg') {\r\n        child.remove();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Prepends the current path to all elements that have an attribute pointing to a `FuncIRI`\r\n   * reference. This is required because WebKit browsers require references to be prefixed with\r\n   * the current path, if the page has a `base` tag.\r\n   */\r\n  private _prependPathToReferences(path: string) {\r\n    const elements = this._elementsWithExternalReferences;\r\n\r\n    if (elements) {\r\n      elements.forEach((attrs, element) => {\r\n        attrs.forEach(attr => {\r\n          element.setAttribute(attr.name, `url('${path}#${attr.value}')`);\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Caches the children of an SVG element that have `url()`\r\n   * references that we need to prefix with the current path.\r\n   */\r\n  private _cacheChildrenWithExternalReferences(element: SVGElement) {\r\n    const elementsWithFuncIri = element.querySelectorAll(funcIriAttributeSelector);\r\n    const elements = (this._elementsWithExternalReferences =\r\n      this._elementsWithExternalReferences || new Map());\r\n\r\n    for (let i = 0; i < elementsWithFuncIri.length; i++) {\r\n      funcIriAttributes.forEach(attr => {\r\n        const elementWithReference = elementsWithFuncIri[i];\r\n        const value = elementWithReference.getAttribute(attr);\r\n        const match = value ? value.match(funcIriPattern) : null;\r\n\r\n        if (match) {\r\n          let attributes = elements.get(elementWithReference);\r\n\r\n          if (!attributes) {\r\n            attributes = [];\r\n            elements.set(elementWithReference, attributes);\r\n          }\r\n\r\n          attributes!.push({name: attr, value: match[1]});\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /** Sets a new SVG icon with a particular name. */\r\n  private _updateSvgIcon(rawName: string | undefined) {\r\n    this._svgNamespace = null;\r\n    this._svgName = null;\r\n    this._currentIconFetch.unsubscribe();\r\n\r\n    if (rawName) {\r\n      const [namespace, iconName] = this._splitIconName(rawName);\r\n\r\n      if (namespace) {\r\n        this._svgNamespace = namespace;\r\n      }\r\n\r\n      if (iconName) {\r\n        this._svgName = iconName;\r\n      }\r\n\r\n      this._currentIconFetch = this._iconRegistry\r\n        .getNamedSvgIcon(iconName, namespace)\r\n        .pipe(take(1))\r\n        .subscribe(\r\n          svg => this._setSvgElement(svg),\r\n          (err: Error) => {\r\n            const errorMessage = `Error retrieving icon ${namespace}:${iconName}! ${err.message}`;\r\n            this._errorHandler.handleError(new Error(errorMessage));\r\n          },\r\n        );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Splits an svgIcon binding value into its icon set and icon name components.\r\n   * Returns a 2-element array of [(icon set), (icon name)].\r\n   * The separator for the two fields is ':'. If there is no separator, an empty\r\n   * string is returned for the icon set and the entire value is returned for\r\n   * the icon name. If the argument is falsy, returns an array of two empty strings.\r\n   * Throws an error if the name contains two or more ':' separators.\r\n   * Examples:\r\n   *   `'social:cake' -> ['social', 'cake']\r\n   *   'penguin' -> ['', 'penguin']\r\n   *   null -> ['', '']\r\n   *   'a:b:c' -> (throws Error)`\r\n   */\r\n  private _splitIconName(iconName: string): [string, string] {\r\n    if (!iconName) {\r\n      return ['', ''];\r\n    }\r\n    const parts = iconName.split(':');\r\n    switch (parts.length) {\r\n      case 1:\r\n        return ['', parts[0]]; // Use default namespace.\r\n      case 2:\r\n        return <[string, string]>parts;\r\n      default:\r\n        throw Error(`Invalid icon name: \"${iconName}\"`); // TODO: add an ngDevMode check\r\n    }\r\n  }\r\n}\r\n","<ng-content></ng-content>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MrdIconComponent } from './components/mrd-icon.component';\r\n\r\n/**\r\n * Dieses Modul stellt den Mrd-Icon zur Verfügung.\r\n *\r\n * @export MrdIconComponent\r\n * @class MrdIconModule\r\n */\r\n@NgModule({\r\n  declarations: [MrdIconComponent],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [MrdIconComponent]\r\n})\r\nexport class MrdIconModule { }","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["_c0","i1","i1.MrdIconRegistryService"],"mappings":"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"}